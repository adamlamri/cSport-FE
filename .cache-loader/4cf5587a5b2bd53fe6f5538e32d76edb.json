{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/activity/ActivityFormHelper.ts","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/activity/ActivityFormHelper.ts","mtime":1532407832742},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import { padZero } from \"~/common/util\";\n/** This function will return a string format 'HourMinute' from a number (seconds).\n * E.g: 3600s->0100 (means 1h 00m)\n * */\nexport const getHourMin = (seconds) => {\n    if (seconds) {\n        const hours = Math.floor(seconds / 3600);\n        const mins = Math.floor((seconds - hours * 3600) / 60);\n        return \"\" + padZero(hours) + \"\" + padZero(mins);\n    }\n    return \"\";\n};\n/** This function will return the seconds from a string 'HourMinute'.\n * E.g: 0136 (means 1h 36m) ->  5760s\n * */\nexport const getSeconds = (hourMin) => {\n    const hours = hourMin.slice(0, 2);\n    const mins = hourMin.slice(-2);\n    return Number(hours) * 3600 + Number(mins) * 60;\n};\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/activity/ActivityFormHelper.ts","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/activity/ActivityFormHelper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAExC;;KAEK;AACL,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,OAAe,EAAU,EAAE;IAClD,IAAI,OAAO,EAAE;QACT,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QACzC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACvD,OAAO,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;KACnD;IACD,OAAO,EAAE,CAAC;AACd,CAAC,CAAC;AAEF;;KAEK;AACL,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,OAAe,EAAU,EAAE;IAClD,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AACpD,CAAC,CAAC","sourcesContent":["import { padZero } from \"~/common/util\";\n\n/** This function will return a string format 'HourMinute' from a number (seconds).\n * E.g: 3600s->0100 (means 1h 00m)\n * */\nexport const getHourMin = (seconds: number): string => {\n    if (seconds) {\n        const hours = Math.floor(seconds / 3600);\n        const mins = Math.floor((seconds - hours * 3600) / 60);\n        return \"\" + padZero(hours) + \"\" + padZero(mins);\n    }\n    return \"\";\n};\n\n/** This function will return the seconds from a string 'HourMinute'.\n * E.g: 0136 (means 1h 36m) ->  5760s\n * */\nexport const getSeconds = (hourMin: string): number => {\n    const hours = hourMin.slice(0, 2);\n    const mins = hourMin.slice(-2);\n    return Number(hours) * 3600 + Number(mins) * 60;\n};\n"]}]}