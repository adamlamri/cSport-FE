{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamComparison/TeamComparison.tsx","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamComparison/TeamComparison.tsx","mtime":1532681547499},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport withMobileDialog from \"@material-ui/core/withMobileDialog\";\nimport Grid from \"@material-ui/core/es/Grid/Grid\";\nimport withStyles from \"@material-ui/core/es/styles/withStyles\";\nimport Grow from \"@material-ui/core/es/Grow/Grow\";\nimport ComparisonCriteria from \"~/containers/TeamComparison/ComparisonCriteria\";\nimport DisplayTeamsName from \"~/containers/TeamComparison/DisplayTeamsName\";\nimport createStyles from \"@material-ui/core/es/styles/createStyles\";\nimport { connect } from \"react-redux\";\nimport AppBar from \"@material-ui/core/es/AppBar/AppBar\";\nimport Tabs from \"@material-ui/core/es/Tabs/Tabs\";\nimport Tab from \"@material-ui/core/es/Tab/Tab\";\nimport { teamComparisonActions } from \"~/data/team/teamComparison\";\nimport { parseToHourAndMinute } from \"~/common/util\";\nconst styles = (theme) => createStyles({\n    root: {\n        flexGrow: 1,\n        width: \"100%\",\n        backgroundColor: theme.palette.background.paper,\n    },\n    dialogTitle: {\n        backgroundColor: \"#195485\",\n        backgroundSize: \"cover\",\n        textAlign: \"center\",\n    },\n    dialogContent: {\n        padding: \"0\",\n        background: \"#a5cfdfcf\",\n    },\n    compareButton: {\n        backgroundColor: \"#f5eeee73\",\n        justifyContent: \"left\",\n    },\n    backgroundDialogContent: {\n        background: \"#a5cfdfcf\",\n        backgroundSize: \"cover\",\n        paddingTop: \"16px\",\n    },\n});\nclass TeamComparisonListDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event, value) => {\n            if (event) {\n                this.setState({\n                    value,\n                }, () => {\n                    this.props.fetchTeamComparison(this.props.match.params.teamId, this.props.match.params.competitorId, this.state.value, this.state.timeZoneOffset);\n                });\n            }\n        };\n        this.handleClose = () => {\n            this.setState({ open: false });\n        };\n        this.goBack = () => {\n            this.props.history.goBack();\n        };\n        const date = new Date();\n        this.state = {\n            open: true,\n            value: \"0\",\n            timeZoneOffset: date.getTimezoneOffset(),\n        };\n    }\n    componentDidMount() {\n        this.props.fetchTeamComparison(this.props.match.params.teamId, this.props.match.params.competitorId, this.state.value, this.state.timeZoneOffset);\n    }\n    render() {\n        const { fullScreen } = this.props;\n        let teamComparisonContent = null;\n        if (this.props.teamStatistics && this.props.teamStatistics.length >= 2) {\n            teamComparisonContent = (React.createElement(\"div\", { className: this.props.classes.backgroundDialogContent },\n                React.createElement(Grid, { container: true, spacing: 16 },\n                    React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Total members\", unit: \"members\", criteriaValue: this.props.teamStatistics[0].memberTotal, oppositeCriteriaValue: this.props.teamStatistics[1].memberTotal, icon: require(\"../../theme/images/people.png\") }))),\n                    React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Active members\", unit: \"active members\", criteriaValue: this.props.teamStatistics[0].activeMemberTotal, oppositeCriteriaValue: this.props.teamStatistics[1].activeMemberTotal, icon: require(\"../../theme/images/active.png\") }))),\n                    (this.props.teamStatistics[0].runningDistanceTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].runningDistanceTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Running\", unit: \"km\", criteriaValue: this.props.teamStatistics[0].runningDistanceTotal, oppositeCriteriaValue: this.props.teamStatistics[1].runningDistanceTotal, icon: require(\"../../theme/images/run.png\") })))),\n                    (this.props.teamStatistics[0].cyclingDistanceTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].cyclingDistanceTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Cycling\", unit: \"km\", criteriaValue: this.props.teamStatistics[0].cyclingDistanceTotal, oppositeCriteriaValue: this.props.teamStatistics[1].cyclingDistanceTotal, icon: require(\"../../theme/images/cycling.png\") })))),\n                    (this.props.teamStatistics[0].gymTimeTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].gymTimeTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Gymming\", unit: \"hour : min\", criteriaValue: parseToHourAndMinute(this.props.teamStatistics[0].gymTimeTotal), oppositeCriteriaValue: parseToHourAndMinute(this.props.teamStatistics[1].gymTimeTotal), icon: require(\"../../theme/images/gym.png\") })))),\n                    (this.props.teamStatistics[0].climbingTimeTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].climbingTimeTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Climbing\", unit: \"hour : min\", criteriaValue: parseToHourAndMinute(this.props.teamStatistics[0].climbingTimeTotal), oppositeCriteriaValue: parseToHourAndMinute(this.props.teamStatistics[1].climbingTimeTotal), icon: require(\"../../theme/images/climbing.png\") })))),\n                    (this.props.teamStatistics[0].meditationTimeTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].meditationTimeTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Mediation\", unit: \"hour : min\", criteriaValue: parseToHourAndMinute(this.props.teamStatistics[0].meditationTimeTotal), oppositeCriteriaValue: parseToHourAndMinute(this.props.teamStatistics[1].meditationTimeTotal), icon: require(\"../../theme/images/meditation.png\") })))),\n                    (this.props.teamStatistics[0].skatingTimeTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].skatingTimeTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Skating\", unit: \"hour : min\", criteriaValue: parseToHourAndMinute(this.props.teamStatistics[0].skatingTimeTotal), oppositeCriteriaValue: parseToHourAndMinute(this.props.teamStatistics[1].skatingTimeTotal), icon: require(\"../../theme/images/skating.png\") })))),\n                    (this.props.teamStatistics[0].swimmingTimeTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].swimmingTimeTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Swimming\", unit: \"hour : min\", criteriaValue: parseToHourAndMinute(this.props.teamStatistics[0].swimmingTimeTotal), oppositeCriteriaValue: parseToHourAndMinute(this.props.teamStatistics[1].swimmingTimeTotal), icon: require(\"../../theme/images/swimming.png\") })))),\n                    (this.props.teamStatistics[0].yogaTimeTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].yogaTimeTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Yoga\", unit: \"hour : min\", criteriaValue: parseToHourAndMinute(this.props.teamStatistics[0].yogaTimeTotal), oppositeCriteriaValue: parseToHourAndMinute(this.props.teamStatistics[1].yogaTimeTotal), icon: require(\"../../theme/images/yoga.png\") })))),\n                    (this.props.teamStatistics[0].hikingTimeTotal !== \"0.0\" ||\n                        this.props.teamStatistics[1].hikingTimeTotal !== \"0.0\") && (React.createElement(Grow, { in: true, timeout: 2500 },\n                        React.createElement(Grid, { item: true, xs: 12 },\n                            React.createElement(ComparisonCriteria, { criteriaTitle: \"Hiking\", unit: \"hour : min\", criteriaValue: parseToHourAndMinute(this.props.teamStatistics[0].hikingTimeTotal), oppositeCriteriaValue: parseToHourAndMinute(this.props.teamStatistics[1].hikingTimeTotal), icon: require(\"../../theme/images/hiking.png\") })))))));\n        }\n        return (React.createElement(\"div\", null,\n            React.createElement(Dialog, { fullScreen: fullScreen, open: this.state.open, onClose: this.handleClose, maxWidth: \"sm\" },\n                this.props.teamStatistics &&\n                    this.props.teamStatistics.length && (React.createElement(DialogTitle, { className: this.props.classes.dialogTitle },\n                    React.createElement(Grid, { container: true },\n                        React.createElement(Grid, { item: true, xs: 5, style: {\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                display: \"flex\",\n                            } },\n                            React.createElement(DisplayTeamsName, { teamName: this.props.teamStatistics[0].teamName })),\n                        React.createElement(Grid, { item: true, xs: 2 },\n                            React.createElement(\"img\", { width: \"40\", src: require(\"../../theme/images/versus.png\"), alt: \"\", style: { verticalAlign: \"center\", paddingTop: \"24px\" } })),\n                        React.createElement(Grid, { item: true, xs: 5, style: {\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                display: \"flex\",\n                            } },\n                            React.createElement(DisplayTeamsName, { teamName: this.props.teamStatistics[1].teamName }))))),\n                React.createElement(DialogContent, { className: this.props.classes.dialogContent },\n                    React.createElement(\"div\", { className: this.props.classes.root },\n                        React.createElement(AppBar, { position: \"static\", color: \"default\" },\n                            React.createElement(Tabs, { value: this.state.value, onChange: (event, value) => this.handleChange(event, value), scrollable: true, scrollButtons: \"on\", indicatorColor: \"primary\", textColor: \"primary\" },\n                                React.createElement(Tab, { label: \"All time\" }),\n                                React.createElement(Tab, { label: \"Current year\" }),\n                                React.createElement(Tab, { label: \"Last 30 days\" }),\n                                React.createElement(Tab, { label: \"Last 7 days\" }),\n                                React.createElement(Tab, { label: \"This week\" }))),\n                        teamComparisonContent)),\n                React.createElement(DialogActions, null,\n                    React.createElement(Button, { onClick: this.goBack, color: \"primary\", autoFocus: true }, \"Return\")))));\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        teamStatistics: state.teamComparison.list,\n    };\n};\n// map the action of redux to component prop\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchTeamComparison: (teamId, competitorId, timeInterval, timeZoneOffset) => {\n            dispatch(teamComparisonActions.fetchTeamComparison(teamId, competitorId, timeInterval, timeZoneOffset));\n        },\n    };\n};\nexport default withMobileDialog()(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TeamComparisonListDialog)));\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamComparison/TeamComparison.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamComparison/TeamComparison.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport withMobileDialog from \"@material-ui/core/withMobileDialog\";\nimport Grid from \"@material-ui/core/es/Grid/Grid\";\nimport withStyles from \"@material-ui/core/es/styles/withStyles\";\nimport Grow from \"@material-ui/core/es/Grow/Grow\";\nimport ComparisonCriteria from \"~/containers/TeamComparison/ComparisonCriteria\";\nimport DisplayTeamsName from \"~/containers/TeamComparison/DisplayTeamsName\";\nimport { TeamStatisticsComparisonInterface } from \"~/data/team/teamComparison/actionCreators\";\nimport * as Redux from \"redux\";\nimport { Theme } from \"@material-ui/core\";\nimport createStyles from \"@material-ui/core/es/styles/createStyles\";\nimport { connect } from \"react-redux\";\nimport AppBar from \"@material-ui/core/es/AppBar/AppBar\";\nimport Tabs from \"@material-ui/core/es/Tabs/Tabs\";\nimport Tab from \"@material-ui/core/es/Tab/Tab\";\nimport { teamComparisonActions } from \"~/data/team/teamComparison\";\nimport { parseToHourAndMinute } from \"~/common/util\";\nimport { RouteComponentProps } from \"react-router\";\ninterface MemberInfoDialogProps extends RouteComponentProps<any> {\n    fullScreen: any;\n    classes: {\n        root: string;\n        dialogTitle: string;\n        dialogContent: string;\n        compareButton: string;\n        backgroundDialogContent: string;\n    };\n    teamId: string;\n    competitorId: string;\n    teamStatistics: TeamStatisticsComparisonInterface[];\n    fetchTeamComparison: Redux.ActionCreator<{}>;\n}\n\ninterface TeamComparisonListState {\n    teamComparison: {\n        list: TeamStatisticsComparisonInterface[];\n    };\n}\ninterface OwnTeamComparisonListState {\n    open: boolean;\n    value: string;\n    timeZoneOffset: number;\n}\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            width: \"100%\",\n            backgroundColor: theme.palette.background.paper,\n        },\n        dialogTitle: {\n            backgroundColor: \"#195485\",\n            backgroundSize: \"cover\",\n            textAlign: \"center\",\n        },\n\n        dialogContent: {\n            padding: \"0\",\n            background: \"#a5cfdfcf\",\n        },\n\n        compareButton: {\n            backgroundColor: \"#f5eeee73\",\n            justifyContent: \"left\",\n        },\n\n        backgroundDialogContent: {\n            background: \"#a5cfdfcf\",\n            backgroundSize: \"cover\",\n            paddingTop: \"16px\",\n        },\n    });\n\nclass TeamComparisonListDialog extends React.Component<\n    MemberInfoDialogProps,\n    OwnTeamComparisonListState\n> {\n    constructor(props: MemberInfoDialogProps) {\n        super(props);\n        const date = new Date();\n        this.state = {\n            open: true,\n            value: \"0\",\n            timeZoneOffset: date.getTimezoneOffset(),\n        };\n    }\n\n    componentDidMount(): void {\n        this.props.fetchTeamComparison(\n            this.props.match.params.teamId,\n            this.props.match.params.competitorId,\n            this.state.value,\n            this.state.timeZoneOffset,\n        );\n    }\n\n    private handleChange = (event: React.ChangeEvent<{}>, value: any) => {\n        if (event) {\n            this.setState(\n                {\n                    value,\n                },\n                () => {\n                    this.props.fetchTeamComparison(\n                        this.props.match.params.teamId,\n                        this.props.match.params.competitorId,\n                        this.state.value,\n                        this.state.timeZoneOffset,\n                    );\n                },\n            );\n        }\n    };\n\n    private handleClose = (): void => {\n        this.setState({ open: false });\n    };\n\n    private goBack = () => {\n        this.props.history.goBack();\n    };\n\n    render(): React.ReactNode {\n        const { fullScreen } = this.props;\n        let teamComparisonContent = null;\n        if (this.props.teamStatistics && this.props.teamStatistics.length >= 2) {\n            teamComparisonContent = (\n                <div className={this.props.classes.backgroundDialogContent}>\n                    <Grid container spacing={16}>\n                        <Grow in={true} timeout={2500}>\n                            <Grid item xs={12}>\n                                <ComparisonCriteria\n                                    criteriaTitle=\"Total members\"\n                                    unit=\"members\"\n                                    criteriaValue={this.props.teamStatistics[0].memberTotal}\n                                    oppositeCriteriaValue={this.props.teamStatistics[1].memberTotal}\n                                    icon={require(\"../../theme/images/people.png\")}\n                                />\n                            </Grid>\n                        </Grow>\n                        <Grow in={true} timeout={2500}>\n                            <Grid item xs={12}>\n                                <ComparisonCriteria\n                                    criteriaTitle=\"Active members\"\n                                    unit=\"active members\"\n                                    criteriaValue={this.props.teamStatistics[0].activeMemberTotal}\n                                    oppositeCriteriaValue={\n                                        this.props.teamStatistics[1].activeMemberTotal\n                                    }\n                                    icon={require(\"../../theme/images/active.png\")}\n                                />\n                            </Grid>\n                        </Grow>\n                        {(this.props.teamStatistics[0].runningDistanceTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].runningDistanceTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Running\"\n                                        unit=\"km\"\n                                        criteriaValue={\n                                            this.props.teamStatistics[0].runningDistanceTotal\n                                        }\n                                        oppositeCriteriaValue={\n                                            this.props.teamStatistics[1].runningDistanceTotal\n                                        }\n                                        icon={require(\"../../theme/images/run.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n                        {(this.props.teamStatistics[0].cyclingDistanceTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].cyclingDistanceTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Cycling\"\n                                        unit=\"km\"\n                                        criteriaValue={\n                                            this.props.teamStatistics[0].cyclingDistanceTotal\n                                        }\n                                        oppositeCriteriaValue={\n                                            this.props.teamStatistics[1].cyclingDistanceTotal\n                                        }\n                                        icon={require(\"../../theme/images/cycling.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n                        {(this.props.teamStatistics[0].gymTimeTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].gymTimeTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Gymming\"\n                                        unit=\"hour : min\"\n                                        criteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[0].gymTimeTotal,\n                                        )}\n                                        oppositeCriteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[1].gymTimeTotal,\n                                        )}\n                                        icon={require(\"../../theme/images/gym.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n                        {(this.props.teamStatistics[0].climbingTimeTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].climbingTimeTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Climbing\"\n                                        unit=\"hour : min\"\n                                        criteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[0].climbingTimeTotal,\n                                        )}\n                                        oppositeCriteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[1].climbingTimeTotal,\n                                        )}\n                                        icon={require(\"../../theme/images/climbing.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n                        {(this.props.teamStatistics[0].meditationTimeTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].meditationTimeTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Mediation\"\n                                        unit=\"hour : min\"\n                                        criteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[0].meditationTimeTotal,\n                                        )}\n                                        oppositeCriteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[1].meditationTimeTotal,\n                                        )}\n                                        icon={require(\"../../theme/images/meditation.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n                        {(this.props.teamStatistics[0].skatingTimeTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].skatingTimeTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Skating\"\n                                        unit=\"hour : min\"\n                                        criteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[0].skatingTimeTotal,\n                                        )}\n                                        oppositeCriteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[1].skatingTimeTotal,\n                                        )}\n                                        icon={require(\"../../theme/images/skating.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n                        {(this.props.teamStatistics[0].swimmingTimeTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].swimmingTimeTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Swimming\"\n                                        unit=\"hour : min\"\n                                        criteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[0].swimmingTimeTotal,\n                                        )}\n                                        oppositeCriteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[1].swimmingTimeTotal,\n                                        )}\n                                        icon={require(\"../../theme/images/swimming.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n                        {(this.props.teamStatistics[0].yogaTimeTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].yogaTimeTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Yoga\"\n                                        unit=\"hour : min\"\n                                        criteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[0].yogaTimeTotal,\n                                        )}\n                                        oppositeCriteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[1].yogaTimeTotal,\n                                        )}\n                                        icon={require(\"../../theme/images/yoga.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n\n                        {(this.props.teamStatistics[0].hikingTimeTotal !== \"0.0\" ||\n                            this.props.teamStatistics[1].hikingTimeTotal !== \"0.0\") && (\n                            <Grow in={true} timeout={2500}>\n                                <Grid item xs={12}>\n                                    <ComparisonCriteria\n                                        criteriaTitle=\"Hiking\"\n                                        unit=\"hour : min\"\n                                        criteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[0].hikingTimeTotal,\n                                        )}\n                                        oppositeCriteriaValue={parseToHourAndMinute(\n                                            this.props.teamStatistics[1].hikingTimeTotal,\n                                        )}\n                                        icon={require(\"../../theme/images/hiking.png\")}\n                                    />\n                                </Grid>\n                            </Grow>\n                        )}\n                    </Grid>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <Dialog\n                    fullScreen={fullScreen}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    maxWidth={\"sm\"}\n                >\n                    {this.props.teamStatistics &&\n                        this.props.teamStatistics.length && (\n                            <DialogTitle className={this.props.classes.dialogTitle}>\n                                <Grid container>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        style={{\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                            display: \"flex\",\n                                        }}\n                                    >\n                                        <DisplayTeamsName\n                                            teamName={this.props.teamStatistics[0].teamName}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={2}>\n                                        <img\n                                            width=\"40\"\n                                            src={require(\"../../theme/images/versus.png\")}\n                                            alt=\"\"\n                                            style={{ verticalAlign: \"center\", paddingTop: \"24px\" }}\n                                        />\n                                    </Grid>\n\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        style={{\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                            display: \"flex\",\n                                        }}\n                                    >\n                                        <DisplayTeamsName\n                                            teamName={this.props.teamStatistics[1].teamName}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </DialogTitle>\n                        )}\n                    <DialogContent className={this.props.classes.dialogContent}>\n                        <div className={this.props.classes.root}>\n                            <AppBar position=\"static\" color=\"default\">\n                                <Tabs\n                                    value={this.state.value}\n                                    onChange={(event, value) => this.handleChange(event, value)}\n                                    scrollable\n                                    scrollButtons=\"on\"\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                >\n                                    <Tab label=\"All time\" />\n                                    <Tab label=\"Current year\" />\n                                    <Tab label=\"Last 30 days\" />\n                                    <Tab label=\"Last 7 days\" />\n                                    <Tab label=\"This week\" />\n                                </Tabs>\n                            </AppBar>\n                            {teamComparisonContent}\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.goBack} color=\"primary\" autoFocus>\n                            Return\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state: TeamComparisonListState) => {\n    return {\n        teamStatistics: state.teamComparison.list,\n    };\n};\n\n// map the action of redux to component prop\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        fetchTeamComparison: (\n            teamId: string,\n            competitorId: string,\n            timeInterval: string,\n            timeZoneOffset: number,\n        ) => {\n            dispatch(\n                teamComparisonActions.fetchTeamComparison(\n                    teamId,\n                    competitorId,\n                    timeInterval,\n                    timeZoneOffset,\n                ),\n            );\n        },\n    };\n};\n\nexport default withMobileDialog()(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(withStyles(styles)(TeamComparisonListDialog) as any),\n);\n"]}]}