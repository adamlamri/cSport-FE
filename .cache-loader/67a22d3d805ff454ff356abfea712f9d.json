{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/team/teamComparison/actions.ts","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/team/teamComparison/actions.ts","mtime":1532508138360},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport actionCreators from \"./actionCreators\";\nimport axios from \"~/common/axiosConfigure\";\n// merge all actions into a completed process\nexport const fetchTeamComparison = (teamId, competitorId, timeInterval, timeZoneOffset) => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.teamComparisonFetchRequested);\n    try {\n        const teamComparisonList = yield axios\n            .get(process.env.LOCAL_HOST_URL +\n            `/teams/compare/${teamId}?competitor=${competitorId}&timeinterval=${timeInterval}&timezoneoffset=${timeZoneOffset}`)\n            .then(response => {\n            const list = response.data;\n            return list;\n        });\n        return dispatch(actionCreators.teamComparisonFetchFulfilled(teamComparisonList));\n    }\n    catch (error) {\n        dispatch(actionCreators.teamComparisonFetchRejected(error));\n    }\n});\nexport default {\n    fetchTeamComparison,\n};\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/team/teamComparison/actions.ts","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/team/teamComparison/actions.ts"],"names":[],"mappings":";AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAE5C,6CAA6C;AAC7C,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAC/B,MAAc,EACd,YAAoB,EACpB,YAAoB,EACpB,cAAsB,EACxB,EAAE,CAAC,CAAO,QAAa,EAAE,EAAE;IACzB,QAAQ,CAAC,cAAc,CAAC,4BAA4B,CAAC,CAAC;IACtD,IAAI;QACA,MAAM,kBAAkB,GAAG,MAAM,KAAK;aACjC,GAAG,CACA,OAAO,CAAC,GAAG,CAAC,cAAc;YACtB,kBAAkB,MAAM,eAAe,YAAY,iBAAiB,YAAY,mBAAmB,cAAc,EAAE,CAC1H;aACA,IAAI,CAAC,QAAQ,CAAC,EAAE;YACb,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC3B,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACP,OAAO,QAAQ,CAAC,cAAc,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,CAAC,CAAC;KACpF;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC,CAAC;KAC/D;AACL,CAAC,CAAA,CAAC;AAEF,eAAe;IACX,mBAAmB;CACtB,CAAC","sourcesContent":["import actionCreators from \"./actionCreators\";\nimport axios from \"~/common/axiosConfigure\";\n\n// merge all actions into a completed process\nexport const fetchTeamComparison = (\n    teamId: string,\n    competitorId: string,\n    timeInterval: string,\n    timeZoneOffset: number,\n) => async (dispatch: any) => {\n    dispatch(actionCreators.teamComparisonFetchRequested);\n    try {\n        const teamComparisonList = await axios\n            .get(\n                process.env.LOCAL_HOST_URL +\n                    `/teams/compare/${teamId}?competitor=${competitorId}&timeinterval=${timeInterval}&timezoneoffset=${timeZoneOffset}`,\n            )\n            .then(response => {\n                const list = response.data;\n                return list;\n            });\n        return dispatch(actionCreators.teamComparisonFetchFulfilled(teamComparisonList));\n    } catch (error) {\n        dispatch(actionCreators.teamComparisonFetchRejected(error));\n    }\n};\n\nexport default {\n    fetchTeamComparison,\n};\n"]}]}