{"remainingRequest":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/activity/Activity.ts","dependencies":[{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/activity/Activity.ts","mtime":1532508138349},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import { today } from \"~/common/util\";\nimport { ActivityType } from \"~/containers/activity/ActivityType\";\nconst moment = require(\"moment\");\nclass Activity {\n    constructor(activityInfo) {\n        this.defaultActivity = {\n            activityId: \"\",\n            activityDate: today(),\n            distance: 0,\n            duration: 0,\n            location: \"\",\n            title: \"\",\n            activityType: ActivityType.Running,\n            imageLink: \"\",\n            isActive: true,\n        };\n        const tempInfo = activityInfo ? activityInfo : this.defaultActivity;\n        this.activityId = tempInfo.activityId;\n        const date = new Date(moment(tempInfo.activityDate.replace(\"T\", \" \")).format(\"MMM DD YYYY hh:mm:ss a\"));\n        this.activityId = tempInfo.activityId;\n        this.activityDate = date;\n        this.duration = tempInfo.duration;\n        this.location = tempInfo.location;\n        this.distance = tempInfo.distance;\n        this.activityType = tempInfo.activityType;\n        this.workoutType = tempInfo.workoutType || \"\";\n        this.title = tempInfo.title;\n        this.isActive = tempInfo.isActive;\n    }\n    get imageLink() {\n        return this._imageLink || \"\";\n    }\n    set imageLink(value) {\n        this._imageLink = value;\n    }\n    get activityId() {\n        return this._activityId;\n    }\n    set activityId(value) {\n        this._activityId = value;\n    }\n    get title() {\n        return this._title;\n    }\n    set title(value) {\n        this._title = value;\n    }\n    get accountId() {\n        return this._accountId;\n    }\n    set accountId(value) {\n        this._accountId = value;\n    }\n    get activityDate() {\n        return this._activityDate;\n    }\n    set activityDate(value) {\n        this._activityDate = value;\n    }\n    get duration() {\n        return this._duration;\n    }\n    set duration(value) {\n        this._duration = value;\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n    }\n    get createdDate() {\n        return this._createdDate;\n    }\n    set createdDate(value) {\n        this._createdDate = value;\n    }\n    get lastModifiedDate() {\n        return this._lastModifiedDate;\n    }\n    set lastModifiedDate(value) {\n        this._lastModifiedDate = value;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    set isActive(value) {\n        this._isActive = value;\n    }\n    get activityType() {\n        return this._activityType;\n    }\n    set activityType(value) {\n        this._activityType = value;\n    }\n    get workoutType() {\n        return this._workoutType === undefined ? \"\" : this._workoutType;\n    }\n    set workoutType(value) {\n        this._workoutType = value;\n    }\n    get distance() {\n        return this._distance === undefined ? 0 : this._distance;\n    }\n    set distance(value) {\n        this._distance = value;\n    }\n}\nexport default Activity;\n",{"version":3,"file":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/activity/Activity.ts","sourceRoot":"","sources":["/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/activity/Activity.ts"],"names":[],"mappings":"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","sourcesContent":["import { today } from \"~/common/util\";\nimport ActivityInterface from \"~/containers/activity/ActivityInterface\";\nimport { ActivityType } from \"~/containers/activity/ActivityType\";\nconst moment = require(\"moment\");\n\nclass Activity {\n    private _activityId: string;\n    private _title: string;\n    private _imageLink?: string;\n    private _accountId: string;\n    private _activityDate: Date;\n    private _duration: number;\n    private _location: string;\n    private _createdDate: Date;\n    private _lastModifiedDate: Date;\n    private _isActive: boolean;\n    private _activityType: string;\n    private _workoutType?: string;\n    private _distance?: number;\n\n    private defaultActivity: ActivityInterface = {\n        activityId: \"\",\n        activityDate: today(),\n        distance: 0,\n        duration: 0,\n        location: \"\",\n        title: \"\",\n        activityType: ActivityType.Running,\n        imageLink: \"\",\n        isActive: true,\n    };\n\n    get imageLink(): string {\n        return this._imageLink || \"\";\n    }\n\n    set imageLink(value: string) {\n        this._imageLink = value;\n    }\n\n    constructor(activityInfo?: ActivityInterface) {\n        const tempInfo = activityInfo ? activityInfo : this.defaultActivity;\n        this.activityId = tempInfo.activityId;\n        const date = new Date(\n            moment(tempInfo.activityDate.replace(\"T\", \" \")).format(\"MMM DD YYYY hh:mm:ss a\"),\n        );\n        this.activityId = tempInfo.activityId;\n        this.activityDate = date;\n        this.duration = tempInfo.duration;\n        this.location = tempInfo.location;\n        this.distance = tempInfo.distance;\n        this.activityType = tempInfo.activityType;\n        this.workoutType = tempInfo.workoutType || \"\";\n        this.title = tempInfo.title;\n        this.isActive = tempInfo.isActive;\n    }\n\n    get activityId(): string {\n        return this._activityId;\n    }\n\n    set activityId(value: string) {\n        this._activityId = value;\n    }\n\n    get title(): string {\n        return this._title;\n    }\n\n    set title(value: string) {\n        this._title = value;\n    }\n\n    get accountId(): string {\n        return this._accountId;\n    }\n\n    set accountId(value: string) {\n        this._accountId = value;\n    }\n\n    get activityDate(): Date {\n        return this._activityDate;\n    }\n\n    set activityDate(value: Date) {\n        this._activityDate = value;\n    }\n\n    get duration(): number {\n        return this._duration;\n    }\n\n    set duration(value: number) {\n        this._duration = value;\n    }\n\n    get location(): string {\n        return this._location;\n    }\n\n    set location(value: string) {\n        this._location = value;\n    }\n\n    get createdDate(): Date {\n        return this._createdDate;\n    }\n\n    set createdDate(value: Date) {\n        this._createdDate = value;\n    }\n\n    get lastModifiedDate(): Date {\n        return this._lastModifiedDate;\n    }\n\n    set lastModifiedDate(value: Date) {\n        this._lastModifiedDate = value;\n    }\n\n    get isActive(): boolean {\n        return this._isActive;\n    }\n\n    set isActive(value: boolean) {\n        this._isActive = value;\n    }\n\n    get activityType(): string {\n        return this._activityType;\n    }\n\n    set activityType(value: string) {\n        this._activityType = value;\n    }\n\n    get workoutType(): string {\n        return this._workoutType === undefined ? \"\" : this._workoutType;\n    }\n\n    set workoutType(value: string) {\n        this._workoutType = value;\n    }\n\n    get distance(): number {\n        return this._distance === undefined ? 0 : this._distance;\n    }\n\n    set distance(value: number) {\n        this._distance = value;\n    }\n}\n\nexport default Activity;\n"]}]}