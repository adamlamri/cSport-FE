{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/team/ListUsersOfTeam/actions.ts","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/team/ListUsersOfTeam/actions.ts","mtime":1532010673942},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport actionCreators from \"./actionCreators\";\nimport axios from \"~/common/axiosConfigure\";\n// merge all actions into a completed process\nexport const fetchUsersOfTeam = (teamId) => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.listUsersOfTeamFetchRequested);\n    try {\n        const usersOfTeam = yield axios.get(`/teams/member/${teamId}?fullname`).then(response => {\n            const list = response.data;\n            return list;\n        });\n        return dispatch(actionCreators.listUsersOfTeamFetchFulfilled(usersOfTeam));\n    }\n    catch (error) {\n        dispatch(actionCreators.listUsersOfTeamFetchRejected(error));\n    }\n});\nexport default {\n    fetchUsersOfTeam,\n};\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/team/ListUsersOfTeam/actions.ts","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/team/ListUsersOfTeam/actions.ts"],"names":[],"mappings":";AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAE5C,6CAA6C;AAC7C,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,CAAO,QAAa,EAAE,EAAE;IACxE,QAAQ,CAAC,cAAc,CAAC,6BAA6B,CAAC,CAAC;IACvD,IAAI;QACA,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,iBAAiB,MAAM,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACpF,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC3B,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC,cAAc,CAAC,6BAA6B,CAAC,WAAW,CAAC,CAAC,CAAC;KAC9E;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC,CAAC;KAChE;AACL,CAAC,CAAA,CAAC;AAEF,eAAe;IACX,gBAAgB;CACnB,CAAC","sourcesContent":["import actionCreators from \"./actionCreators\";\nimport axios from \"~/common/axiosConfigure\";\n\n// merge all actions into a completed process\nexport const fetchUsersOfTeam = (teamId: string) => async (dispatch: any) => {\n    dispatch(actionCreators.listUsersOfTeamFetchRequested);\n    try {\n        const usersOfTeam = await axios.get(`/teams/member/${teamId}?fullname`).then(response => {\n            const list = response.data;\n            return list;\n        });\n        return dispatch(actionCreators.listUsersOfTeamFetchFulfilled(usersOfTeam));\n    } catch (error) {\n        dispatch(actionCreators.listUsersOfTeamFetchRejected(error));\n    }\n};\n\nexport default {\n    fetchUsersOfTeam,\n};\n"]}]}