{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamActivities/TeamInformation/TeamDetails/TeamDetails.tsx","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamActivities/TeamInformation/TeamDetails/TeamDetails.tsx","mtime":1532589499738},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { listUsersOfTeamActions } from \"src/data/team/ListUsersOfTeam/index\";\nimport MemberInfoDialog from \"src/containers/TeamActivities/TeamInformation/TeamDetails/MemberInfoDialog\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nclass TeamDetails extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.fetchUsersOfTeam = () => {\n            this.props.fetchUsersOfTeam(this.props.teamId);\n        };\n    }\n    componentDidMount() {\n        this.props.onRef(this);\n        this.fetchUsersOfTeam();\n    }\n    componentWillUnmount() {\n        this.props.onRef(undefined);\n    }\n    render() {\n        let listUsers = null;\n        if (this.props.listUsersOfTeam.length === 0) {\n            listUsers = React.createElement(\"div\", { style: { textAlign: \"center\" } }, \"No data found\");\n        }\n        else {\n            listUsers = this.props.listUsersOfTeam.map((user, index) => {\n                return (React.createElement(Grid, { item: true, xs: 12, md: 4, lg: 3, key: index },\n                    React.createElement(MemberInfoDialog, { fullScreen: true, user: user, teamId: this.props.teamId, hostId: this.props.hostId, refreshUsers: this.props.fetchUsersOfTeam })));\n            });\n        }\n        return (React.createElement(Grid, { container: true, spacing: 16, style: { marginTop: \"16px\", maxHeight: \"150px\" } }, listUsers));\n    }\n}\n// specify exactly which slice of the state we want to provide to our component\nconst mapStateToProps = (state) => {\n    return {\n        listUsersOfTeam: state.listUsersOfTeam.list,\n    };\n};\n// map the action of redux to component prop\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUsersOfTeam: (teamId) => {\n            dispatch(listUsersOfTeamActions.fetchUsersOfTeam(teamId));\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamDetails);\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamActivities/TeamInformation/TeamDetails/TeamDetails.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamActivities/TeamInformation/TeamDetails/TeamDetails.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,sBAAsB,EAAE,MAAM,qCAAqC,CAAC;AAC7E,OAAO,gBAAgB,MAAM,4EAA4E,CAAC;AAC1G,OAAO,IAAI,MAAM,6BAA6B,CAAC;AAiB/C,iBAAkB,SAAQ,KAAK,CAAC,SAA+B;IAA/D;;QAUI,qBAAgB,GAAG,GAAS,EAAE;YAC1B,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC,CAAC;IA6BN,CAAC;IAxCG,iBAAiB;QACb,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;IAMD,MAAM;QACF,IAAI,SAAS,GAAG,IAAI,CAAC;QAErB,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACzC,SAAS,GAAG,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,oBAAqB,CAAC;SACxE;aAAM;YACH,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAyB,EAAE,KAAK,EAAE,EAAE;gBAC5E,OAAO,CACH,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK;oBACvC,oBAAC,gBAAgB,IACb,UAAU,EAAE,IAAI,EAChB,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACzB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACzB,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAC3C,CACC,CACV,CAAC;YACN,CAAC,CAAC,CAAC;SACN;QAED,OAAO,CACH,oBAAC,IAAI,IAAC,SAAS,QAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IACxE,SAAS,CACP,CACV,CAAC;IACN,CAAC;CACJ;AACD,+EAA+E;AAC/E,MAAM,eAAe,GAAG,CAAC,KAA2B,EAAE,EAAE;IACpD,OAAO;QACH,eAAe,EAAE,KAAK,CAAC,eAAe,CAAC,IAAI;KAC9C,CAAC;AACN,CAAC,CAAC;AAEF,4CAA4C;AAC5C,MAAM,kBAAkB,GAAG,CAAC,QAAa,EAAE,EAAE;IACzC,OAAO;QACH,gBAAgB,EAAE,CAAC,MAAc,EAAE,EAAE;YACjC,QAAQ,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;QAC9D,CAAC;KACJ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,OAAO,CAClB,eAAe,EACf,kBAAkB,CACrB,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import * as React from \"react\";\nimport * as Redux from \"redux\";\nimport { connect } from \"react-redux\";\nimport { listUsersOfTeamActions } from \"src/data/team/ListUsersOfTeam/index\";\nimport MemberInfoDialog from \"src/containers/TeamActivities/TeamInformation/TeamDetails/MemberInfoDialog\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport { UserOfTeamInterface } from \"src/data/team/ListUsersOfTeam/actionCreators\";\n\ninterface ListUsersOfTeamState {\n    listUsersOfTeam: {\n        list: UserOfTeamInterface[];\n    };\n}\n\nexport interface TeamDetailsProps {\n    listUsersOfTeam: UserOfTeamInterface[];\n    fetchUsersOfTeam: Redux.ActionCreator<{}>;\n    teamId: string;\n    hostId: string;\n    onRef: (ref: any) => any;\n}\n\nclass TeamDetails extends React.Component<TeamDetailsProps, {}> {\n    componentDidMount(): void {\n        this.props.onRef(this);\n        this.fetchUsersOfTeam();\n    }\n\n    componentWillUnmount(): void {\n        this.props.onRef(undefined);\n    }\n\n    fetchUsersOfTeam = (): void => {\n        this.props.fetchUsersOfTeam(this.props.teamId);\n    };\n\n    render(): React.ReactNode {\n        let listUsers = null;\n\n        if (this.props.listUsersOfTeam.length === 0) {\n            listUsers = <div style={{ textAlign: \"center\" }}>No data found</div>;\n        } else {\n            listUsers = this.props.listUsersOfTeam.map((user: UserOfTeamInterface, index) => {\n                return (\n                    <Grid item xs={12} md={4} lg={3} key={index}>\n                        <MemberInfoDialog\n                            fullScreen={true}\n                            user={user}\n                            teamId={this.props.teamId}\n                            hostId={this.props.hostId}\n                            refreshUsers={this.props.fetchUsersOfTeam}\n                        />\n                    </Grid>\n                );\n            });\n        }\n\n        return (\n            <Grid container spacing={16} style={{ marginTop: \"16px\", maxHeight: \"150px\" }}>\n                {listUsers}\n            </Grid>\n        );\n    }\n}\n// specify exactly which slice of the state we want to provide to our component\nconst mapStateToProps = (state: ListUsersOfTeamState) => {\n    return {\n        listUsersOfTeam: state.listUsersOfTeam.list,\n    };\n};\n\n// map the action of redux to component prop\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        fetchUsersOfTeam: (teamId: string) => {\n            dispatch(listUsersOfTeamActions.fetchUsersOfTeam(teamId));\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(TeamDetails);\n"]}]}