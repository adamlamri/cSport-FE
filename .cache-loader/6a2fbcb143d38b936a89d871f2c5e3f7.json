{"remainingRequest":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/searchUser/actions.ts","dependencies":[{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/searchUser/actions.ts","mtime":1532010673000},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1539584369385},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1539584369506},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport actionCreators from \"./actionCreators\";\nimport axios from \"~/common/axiosConfigure\";\n// merge all action into a completed process\nexport const fetchUserList = (username) => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.searchUserFetchRequested);\n    try {\n        yield axios.get(`/profile/${username}`).then((response) => {\n            return dispatch(actionCreators.searchUserFetchFulfilled(response));\n        });\n        // return dispatch(actionCreators.searchUserFetchFulfilled(users));\n    }\n    catch (error) {\n        dispatch(actionCreators.searchUserFetchRejected(error));\n    }\n});\nexport const fetchUserListNotInTeam = (fullName, teamId) => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.searchUserFetchRequested);\n    try {\n        yield axios.get(`/teams/notmember/${teamId}?fullname=${fullName}`).then((response) => {\n            return dispatch(actionCreators.searchUserFetchFulfilled(response));\n        });\n    }\n    catch (error) {\n        dispatch(actionCreators.searchUserFetchRejected(error));\n    }\n});\nexport const fetchUserListNotInCompetition = (fullName, accountId) => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.searchUserNotInCompetitionFetchRequested());\n    try {\n        yield axios.get(`/profile/${accountId}/${fullName}`).then((response) => {\n            return dispatch(actionCreators.searchUserNotInCompetitionFetchFulfilled(response));\n        });\n    }\n    catch (error) {\n        dispatch(actionCreators.searchUserNotInCompetitionFetchRejected(error));\n    }\n});\nexport default {\n    fetchUserList,\n    fetchUserListNotInTeam,\n    fetchUserListNotInCompetition,\n};\n",{"version":3,"file":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/searchUser/actions.ts","sourceRoot":"","sources":["/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/searchUser/actions.ts"],"names":[],"mappings":";AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAE5C,4CAA4C;AAC5C,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,QAAgB,EAAE,EAAE,CAAC,CAAO,QAAa,EAAE,EAAE;IACvE,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;IAClD,IAAI;QACA,MAAM,KAAK,CAAC,GAAG,CAAC,YAAY,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YAC3D,OAAO,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QACH,mEAAmE;KACtE;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC3D;AACL,CAAC,CAAA,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,QAAgB,EAAE,MAAc,EAAE,EAAE,CAAC,CACxE,QAAa,EACf,EAAE;IACA,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;IAClD,IAAI;QACA,MAAM,KAAK,CAAC,GAAG,CAAC,oBAAoB,MAAM,aAAa,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YACtF,OAAO,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;KACN;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC3D;AACL,CAAC,CAAA,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAAC,QAAgB,EAAE,SAAiB,EAAE,EAAE,CAAC,CAClF,QAAa,EACf,EAAE;IACA,QAAQ,CAAC,cAAc,CAAC,wCAAwC,EAAE,CAAC,CAAC;IACpE,IAAI;QACA,MAAM,KAAK,CAAC,GAAG,CAAC,YAAY,SAAS,IAAI,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YACxE,OAAO,QAAQ,CAAC,cAAc,CAAC,wCAAwC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;KACN;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,uCAAuC,CAAC,KAAK,CAAC,CAAC,CAAC;KAC3E;AACL,CAAC,CAAA,CAAC;AAEF,eAAe;IACX,aAAa;IACb,sBAAsB;IACtB,6BAA6B;CAChC,CAAC","sourcesContent":["import actionCreators from \"./actionCreators\";\nimport axios from \"~/common/axiosConfigure\";\n\n// merge all action into a completed process\nexport const fetchUserList = (username: string) => async (dispatch: any) => {\n    dispatch(actionCreators.searchUserFetchRequested);\n    try {\n        await axios.get(`/profile/${username}`).then((response: any) => {\n            return dispatch(actionCreators.searchUserFetchFulfilled(response));\n        });\n        // return dispatch(actionCreators.searchUserFetchFulfilled(users));\n    } catch (error) {\n        dispatch(actionCreators.searchUserFetchRejected(error));\n    }\n};\n\nexport const fetchUserListNotInTeam = (fullName: string, teamId: string) => async (\n    dispatch: any,\n) => {\n    dispatch(actionCreators.searchUserFetchRequested);\n    try {\n        await axios.get(`/teams/notmember/${teamId}?fullname=${fullName}`).then((response: any) => {\n            return dispatch(actionCreators.searchUserFetchFulfilled(response));\n        });\n    } catch (error) {\n        dispatch(actionCreators.searchUserFetchRejected(error));\n    }\n};\n\nexport const fetchUserListNotInCompetition = (fullName: string, accountId: string) => async (\n    dispatch: any,\n) => {\n    dispatch(actionCreators.searchUserNotInCompetitionFetchRequested());\n    try {\n        await axios.get(`/profile/${accountId}/${fullName}`).then((response: any) => {\n            return dispatch(actionCreators.searchUserNotInCompetitionFetchFulfilled(response));\n        });\n    } catch (error) {\n        dispatch(actionCreators.searchUserNotInCompetitionFetchRejected(error));\n    }\n};\n\nexport default {\n    fetchUserList,\n    fetchUserListNotInTeam,\n    fetchUserListNotInCompetition,\n};\n"]}]}