{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/reducerHelper.ts","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/reducerHelper.ts","mtime":1530254132489},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import { statusConstants } from \"./constants\";\nexport const order = (order, entities) => order.map(id => entities[id]);\nexport const addIdToEntity = (payload) => payload.map((item, index) => {\n    return Object.assign({ id: index }, item);\n});\nexport const request = (state) => (Object.assign({}, state, { status: statusConstants.STATUS_LOADING, error: null }));\nexport const putRequest = (state, id) => (Object.assign({}, request(state), { entitiesStatus: Object.assign({}, state.entitiesStatus, { [id]: statusConstants.STATUS_UPDATING }) }));\nexport const deleteRequest = (state, id) => (Object.assign({}, request(state), { entitiesStatus: Object.assign({}, state.entitiesStatus, { [id]: statusConstants.STATUS_DELETING }) }));\nexport const failure = (state, error) => (Object.assign({}, state, { error, status: statusConstants.STATUS_FAILED }));\nexport const getSuccess = (state, payload) => {\n    return Object.assign({}, state, { status: statusConstants.STATUS_LOADED, entities: payload.reduce((acc, current) => (Object.assign({}, acc, { [current.id]: current })), {}), entitiesOrder: payload.map(item => item.id), entitiesStatus: payload.reduce((prev, current) => (Object.assign({}, prev, { [current.id]: statusConstants.STATUS_LOADED })), {}), error: null });\n};\nexport const postSuccess = (state, payload) => (Object.assign({}, state, { status: statusConstants.STATUS_LOADED, entities: Object.assign({}, state.entities, { [payload.id]: payload }), entitiesOrder: [...state.entitiesOrder, payload.id], entitiesStatus: Object.assign({}, state.entitiesStatus, { [payload.id]: statusConstants.STATUS_LOADED }), error: null }));\nexport const putSuccess = (state, payload) => (Object.assign({}, state, { status: statusConstants.STATUS_LOADED, entities: Object.assign({}, state.entities, { [payload.id]: payload }), entitiesStatus: Object.assign({}, state.entitiesStatus, { [payload.id]: statusConstants.STATUS_LOADED }), error: null }));\nexport const deleteSuccess = (state, id) => (Object.assign({}, state, { status: statusConstants.STATUS_LOADED, entities: Object.keys(state.entities)\n        .filter(key => Number(key) !== id)\n        .reduce((acc, current) => (Object.assign({}, acc, { [current]: state.entities[Number(current)] })), {}), entitiesOrder: state.entitiesOrder.filter(item => item !== id), entitiesStatus: Object.keys(state.entitiesStatus)\n        .filter(key => Number(key) !== id)\n        .reduce((acc, current) => (Object.assign({}, acc, { [current]: state.entitiesStatus[Number(current)] })), {}), error: null }));\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/reducerHelper.ts","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/reducerHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import { IStateMap, IApiFailure } from \"./types\";\nimport { statusConstants } from \"./constants\";\n\nexport const order = <T>(order: number[], entities: IStateMap<T>[\"entities\"]): T[] =>\n    order.map(id => entities[id]);\n\nexport const addIdToEntity = <T>(payload: T[]): T[] =>\n    payload.map((item: T, index) => {\n        return Object.assign({ id: index }, item);\n    });\n\n// Reducer CRUD helper\n\ntype Model = {\n    id: number;\n};\n\nexport const request = <T>(state: IStateMap<T>): IStateMap<T> => ({\n    ...state,\n    status: statusConstants.STATUS_LOADING,\n    error: null,\n});\n\nexport const putRequest = <T>(state: IStateMap<T>, id: number): IStateMap<T> => ({\n    ...request(state),\n    entitiesStatus: {\n        ...state.entitiesStatus,\n        [id]: statusConstants.STATUS_UPDATING,\n    },\n});\n\nexport const deleteRequest = <T>(state: IStateMap<T>, id: number): IStateMap<T> => ({\n    ...request(state),\n    entitiesStatus: {\n        ...state.entitiesStatus,\n        [id]: statusConstants.STATUS_DELETING,\n    },\n});\n\nexport const failure = <T>(state: IStateMap<T>, error: IApiFailure): IStateMap<T> => ({\n    ...state,\n    error,\n    status: statusConstants.STATUS_FAILED,\n});\n\nexport const getSuccess = <T extends Model>(state: IStateMap<T>, payload: T[]): IStateMap<T> => {\n    return {\n        ...state,\n        status: statusConstants.STATUS_LOADED,\n        entities: payload.reduce(\n            (acc, current) => ({\n                ...acc,\n                [current.id]: current,\n            }),\n            {},\n        ),\n        entitiesOrder: payload.map(item => item.id),\n        entitiesStatus: payload.reduce(\n            (prev, current) => ({\n                ...prev,\n                [current.id]: statusConstants.STATUS_LOADED,\n            }),\n            {},\n        ),\n        error: null,\n    };\n};\n\nexport const postSuccess = <T extends Model>(state: IStateMap<T>, payload: T): IStateMap<T> => ({\n    ...state,\n    status: statusConstants.STATUS_LOADED,\n    entities: { ...state.entities, [payload.id]: payload },\n    entitiesOrder: [...state.entitiesOrder, payload.id],\n    entitiesStatus: {\n        ...state.entitiesStatus,\n        [payload.id]: statusConstants.STATUS_LOADED,\n    },\n    error: null,\n});\n\nexport const putSuccess = <T extends Model>(state: IStateMap<T>, payload: T): IStateMap<T> => ({\n    ...state,\n    status: statusConstants.STATUS_LOADED,\n    entities: { ...state.entities, [payload.id]: payload },\n    entitiesStatus: {\n        ...state.entitiesStatus,\n        [payload.id]: statusConstants.STATUS_LOADED,\n    },\n    error: null,\n});\n\nexport const deleteSuccess = <T extends Model>(state: IStateMap<T>, id: number): IStateMap<T> => ({\n    ...state,\n    status: statusConstants.STATUS_LOADED,\n    entities: Object.keys(state.entities)\n        .filter(key => Number(key) !== id)\n        .reduce(\n            (acc, current) => ({\n                ...acc,\n                [current]: state.entities[Number(current)],\n            }),\n            {},\n        ),\n    entitiesOrder: state.entitiesOrder.filter(item => item !== id),\n    entitiesStatus: Object.keys(state.entitiesStatus)\n        .filter(key => Number(key) !== id)\n        .reduce(\n            (acc, current) => ({\n                ...acc,\n                [current]: state.entitiesStatus[Number(current)],\n            }),\n            {},\n        ),\n    error: null,\n});\n"]}]}