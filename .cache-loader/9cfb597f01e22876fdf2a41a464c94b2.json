{"remainingRequest":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/containers/activity/ActivityType.tsx","dependencies":[{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/containers/activity/ActivityType.tsx","mtime":1532589499000},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1539584369385},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1539584369506},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["export var ActivityType;\n(function (ActivityType) {\n    // Types that have distance\n    ActivityType[\"Running\"] = \"Running\";\n    ActivityType[\"Cycling\"] = \"Cycling\";\n    ActivityType[\"Hiking\"] = \"Hiking\";\n    ActivityType[\"Swimming\"] = \"Swimming\";\n    ActivityType[\"Climbing\"] = \"Climbing\";\n    ActivityType[\"Skating\"] = \"Skating\";\n    // Types without distance\n    ActivityType[\"Meditation\"] = \"Meditation\";\n    ActivityType[\"Gym\"] = \"Gym\";\n    ActivityType[\"Yoga\"] = \"Yoga\";\n})(ActivityType || (ActivityType = {}));\nexport const getActivityTypeIcon = (type) => {\n    let path = \"\";\n    switch (type) {\n        case ActivityType.Running:\n            path = require(\"../../theme/images/run.png\");\n            break;\n        case ActivityType.Cycling:\n            path = require(\"../../theme/images/cycling.png\");\n            break;\n        case ActivityType.Hiking:\n            path = require(\"../../theme/images/hiking.png\");\n            break;\n        case ActivityType.Swimming:\n            path = require(\"../../theme/images/swimming.png\");\n            break;\n        case ActivityType.Climbing:\n            path = require(\"../../theme/images/climbing.png\");\n            break;\n        case ActivityType.Skating:\n            path = require(\"../../theme/images/skating.png\");\n            break;\n        case ActivityType.Meditation:\n            path = require(\"../../theme/images/meditation.png\");\n            break;\n        case ActivityType.Gym:\n            path = require(\"../../theme/images/gym.png\");\n            break;\n        case ActivityType.Yoga:\n            path = require(\"../../theme/images/yoga.png\");\n            break;\n        default:\n            path = require(\"../../theme/images/skating.png\");\n            break;\n    }\n    return path;\n};\nexport const isActivityTypeHasDistance = (type) => {\n    let hasDistance = false;\n    switch (type) {\n        case ActivityType.Running:\n        case ActivityType.Cycling:\n        case ActivityType.Climbing:\n        case ActivityType.Swimming:\n        case ActivityType.Skating:\n        case ActivityType.Hiking:\n            hasDistance = true;\n            break;\n        default:\n            break;\n    }\n    return hasDistance;\n};\nexport const isGymActivity = (type) => {\n    return type === ActivityType.Gym;\n};\nexport const isClimbingActivity = (type) => {\n    return type === ActivityType.Climbing;\n};\n",{"version":3,"file":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/containers/activity/ActivityType.tsx","sourceRoot":"","sources":["/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/containers/activity/ActivityType.tsx"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,YAYX;AAZD,WAAY,YAAY;IACpB,2BAA2B;IAC3B,mCAAmB,CAAA;IACnB,mCAAmB,CAAA;IACnB,iCAAiB,CAAA;IACjB,qCAAqB,CAAA;IACrB,qCAAqB,CAAA;IACrB,mCAAmB,CAAA;IACnB,yBAAyB;IACzB,yCAAyB,CAAA;IACzB,2BAAW,CAAA;IACX,6BAAa,CAAA;AACjB,CAAC,EAZW,YAAY,KAAZ,YAAY,QAYvB;AAED,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,IAAY,EAAE,EAAE;IAChD,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,QAAQ,IAAI,EAAE;QACV,KAAK,YAAY,CAAC,OAAO;YACrB,IAAI,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;YAC7C,MAAM;QACV,KAAK,YAAY,CAAC,OAAO;YACrB,IAAI,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;YACjD,MAAM;QACV,KAAK,YAAY,CAAC,MAAM;YACpB,IAAI,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;YAChD,MAAM;QACV,KAAK,YAAY,CAAC,QAAQ;YACtB,IAAI,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;YAClD,MAAM;QACV,KAAK,YAAY,CAAC,QAAQ;YACtB,IAAI,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;YAClD,MAAM;QACV,KAAK,YAAY,CAAC,OAAO;YACrB,IAAI,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;YACjD,MAAM;QACV,KAAK,YAAY,CAAC,UAAU;YACxB,IAAI,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;YACpD,MAAM;QACV,KAAK,YAAY,CAAC,GAAG;YACjB,IAAI,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;YAC7C,MAAM;QACV,KAAK,YAAY,CAAC,IAAI;YAClB,IAAI,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;YAC9C,MAAM;QACV;YACI,IAAI,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;YACjD,MAAM;KACb;IACD,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,IAAY,EAAW,EAAE;IAC/D,IAAI,WAAW,GAAG,KAAK,CAAC;IACxB,QAAQ,IAAI,EAAE;QACV,KAAK,YAAY,CAAC,OAAO,CAAC;QAC1B,KAAK,YAAY,CAAC,OAAO,CAAC;QAC1B,KAAK,YAAY,CAAC,QAAQ,CAAC;QAC3B,KAAK,YAAY,CAAC,QAAQ,CAAC;QAC3B,KAAK,YAAY,CAAC,OAAO,CAAC;QAC1B,KAAK,YAAY,CAAC,MAAM;YACpB,WAAW,GAAG,IAAI,CAAC;YACnB,MAAM;QACV;YACI,MAAM;KACb;IAED,OAAO,WAAW,CAAC;AACvB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,IAAY,EAAW,EAAE;IACnD,OAAO,IAAI,KAAK,YAAY,CAAC,GAAG,CAAC;AACrC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,IAAY,EAAW,EAAE;IACxD,OAAO,IAAI,KAAK,YAAY,CAAC,QAAQ,CAAC;AAC1C,CAAC,CAAC","sourcesContent":["export enum ActivityType {\n    // Types that have distance\n    Running = \"Running\",\n    Cycling = \"Cycling\",\n    Hiking = \"Hiking\",\n    Swimming = \"Swimming\",\n    Climbing = \"Climbing\",\n    Skating = \"Skating\",\n    // Types without distance\n    Meditation = \"Meditation\",\n    Gym = \"Gym\",\n    Yoga = \"Yoga\",\n}\n\nexport const getActivityTypeIcon = (type: string) => {\n    let path = \"\";\n    switch (type) {\n        case ActivityType.Running:\n            path = require(\"../../theme/images/run.png\");\n            break;\n        case ActivityType.Cycling:\n            path = require(\"../../theme/images/cycling.png\");\n            break;\n        case ActivityType.Hiking:\n            path = require(\"../../theme/images/hiking.png\");\n            break;\n        case ActivityType.Swimming:\n            path = require(\"../../theme/images/swimming.png\");\n            break;\n        case ActivityType.Climbing:\n            path = require(\"../../theme/images/climbing.png\");\n            break;\n        case ActivityType.Skating:\n            path = require(\"../../theme/images/skating.png\");\n            break;\n        case ActivityType.Meditation:\n            path = require(\"../../theme/images/meditation.png\");\n            break;\n        case ActivityType.Gym:\n            path = require(\"../../theme/images/gym.png\");\n            break;\n        case ActivityType.Yoga:\n            path = require(\"../../theme/images/yoga.png\");\n            break;\n        default:\n            path = require(\"../../theme/images/skating.png\");\n            break;\n    }\n    return path;\n};\n\nexport const isActivityTypeHasDistance = (type: string): boolean => {\n    let hasDistance = false;\n    switch (type) {\n        case ActivityType.Running:\n        case ActivityType.Cycling:\n        case ActivityType.Climbing:\n        case ActivityType.Swimming:\n        case ActivityType.Skating:\n        case ActivityType.Hiking:\n            hasDistance = true;\n            break;\n        default:\n            break;\n    }\n\n    return hasDistance;\n};\n\nexport const isGymActivity = (type: string): boolean => {\n    return type === ActivityType.Gym;\n};\n\nexport const isClimbingActivity = (type: string): boolean => {\n    return type === ActivityType.Climbing;\n};\n"]}]}