{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/UserProfile/EditProfileForm.tsx","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/UserProfile/EditProfileForm.tsx","mtime":1532604758808},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withFormik } from \"formik\";\nimport axios from \"~/common/axiosConfigure\";\nimport { profileError } from \"~/containers/UserProfile/ProfileError\";\nimport { ListItemText, IconButton } from \"@material-ui/core/es\";\nimport { SnackbarType } from \"~/containers/snackbar/SnackbarType\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport { List, ListItem, Divider, Select, MenuItem, ListItemIcon } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nvar TextFieldId;\n(function (TextFieldId) {\n    TextFieldId[\"ImageLink\"] = \"imageLink\";\n    TextFieldId[\"FullName\"] = \"fullName\";\n    TextFieldId[\"Introduction\"] = \"introduction\";\n    TextFieldId[\"Hobbies\"] = \"hobbies\";\n    TextFieldId[\"Status\"] = \"status\";\n})(TextFieldId || (TextFieldId = {}));\nclass Profile {\n}\nconst styles = {\n    formHeader: {\n        width: \"100%\",\n        textAlign: \"center\",\n        margin: \"15px 0px\",\n    },\n    formTitle: {\n        fontSize: \"20px\",\n        display: \"inline\",\n        height: \"48px\",\n        textAlign: \"center\",\n    },\n    back: {\n        float: \"left\",\n        display: \"inline\",\n        color: \"#d80202\",\n        width: 18,\n        height: 18,\n    },\n    done: {\n        float: \"right\",\n        display: \"inline\",\n        color: \"#008c46\",\n        width: 18,\n        height: 18,\n    },\n    imageContainer: {\n        width: \"100%\",\n        height: 270,\n        marginBottom: 30,\n        marginTop: 10,\n    },\n    image: {\n        height: 250,\n        width: 250,\n        position: \"relative\",\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n    },\n    avatar: {\n        height: 250,\n        width: 250,\n        borderStyle: \"solid\",\n        borderColor: \"#3f51b5\",\n        borderRadius: \"50%\",\n    },\n    editAvatar: {\n        zIndex: 1,\n        bottom: 10,\n        right: 10,\n        display: \"float\",\n        position: \"absolute\",\n    },\n    chooseFile: {\n        display: \"none\",\n    },\n};\nclass OptionDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClickUpload = () => {\n            this.handleClose();\n            this.props.upload();\n        };\n        this.handleClickReset = () => {\n            this.handleClose();\n            this.props.reset();\n        };\n        this.handleClose = () => {\n            this.setState({\n                isOpen: false,\n            });\n        };\n        this.handleOpen = (event) => {\n            this.setState({\n                isOpen: true,\n                anchorEl: event.currentTarget,\n            });\n        };\n        this.state = {\n            isOpen: false,\n            anchorEl: undefined,\n        };\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(Avatar, { style: { backgroundColor: \"#3f51b5\" } },\n                React.createElement(Icon, { onClick: this.handleOpen }, \"camera_alt\")),\n            React.createElement(Dialog, { open: this.state.isOpen, onClose: this.handleClose },\n                React.createElement(List, null,\n                    React.createElement(ListItem, { key: \"upload\", onClick: this.handleClickUpload },\n                        React.createElement(ListItemIcon, { style: { color: \"#3f51b5\" } },\n                            React.createElement(Icon, null, \"cloud_upload\")),\n                        React.createElement(ListItemText, null, \"Upload image\")),\n                    React.createElement(Divider, null),\n                    React.createElement(ListItem, { key: \"reset\", onClick: this.handleClickReset },\n                        React.createElement(ListItemIcon, { style: { color: \"#3f51b5\" } },\n                            React.createElement(Icon, null, \"cancel\")),\n                        React.createElement(ListItemText, null, \"Reset image\"))))));\n    }\n}\nconst InnerForm = (props) => {\n    const { touched, errors, isSubmitting, handleChange, values, handleSubmit, classes } = props;\n    // show status options menu\n    const showStatusOptions = values.statusOptions.map((element, index) => {\n        return (React.createElement(MenuItem, { key: index, value: element }, element));\n    });\n    const changeImage = (event) => {\n        const file = event.currentTarget.files && event.currentTarget.files[0];\n        const reader = new FileReader();\n        const imageElement = document.getElementById(\"img\" + TextFieldId.ImageLink);\n        reader.onloadend = () => {\n            if (imageElement) {\n                imageElement.src = reader.result;\n            }\n        };\n        if (file)\n            reader.readAsDataURL(file);\n    };\n    const resetImage = () => {\n        const imageElement = document.getElementById(\"img\" + TextFieldId.ImageLink);\n        const url = `${process.env.LOCAL_HOST_URL}/profile/resetImage/${values.accountId}`;\n        axios.get(url).then(response => {\n            imageElement.src = response.data;\n            values.imageLink = response.data;\n        });\n    };\n    const openFileBrowser = () => {\n        const imageElement = document.getElementById(TextFieldId.ImageLink);\n        imageElement.click();\n    };\n    return (React.createElement(\"div\", null,\n        React.createElement(\"form\", { onSubmit: handleSubmit, encType: \"multipart/form-data\" },\n            React.createElement(\"div\", { className: classes.formHeader },\n                React.createElement(IconButton, { className: classes.back, onClick: props.handleClose },\n                    React.createElement(Icon, null, \"clear\")),\n                React.createElement(\"h2\", { className: classes.formTitle }, \"EDIT PROFILE\"),\n                React.createElement(IconButton, { className: classes.done, type: \"submit\", disabled: isSubmitting },\n                    React.createElement(Icon, null, \"done\"))),\n            React.createElement(\"div\", { className: classes.imageContainer },\n                React.createElement(\"div\", { className: classes.image },\n                    React.createElement(\"img\", { className: classes.avatar, id: \"img\" + TextFieldId.ImageLink, src: values.imageLink }),\n                    React.createElement(\"div\", { className: classes.editAvatar },\n                        React.createElement(OptionDialog, { upload: openFileBrowser, reset: resetImage })))),\n            React.createElement(TextField, { id: TextFieldId.FullName, label: \"Fullname\", defaultValue: values.fullName, error: touched.fullName && errors.fullName, helperText: errors.fullName, onChange: handleChange, fullWidth: true }),\n            React.createElement(\"input\", { className: classes.chooseFile, id: TextFieldId.ImageLink, type: \"file\", name: \"file\", accept: \"image/x-png,image/gif,image/jpeg,image/jpg\", onChange: changeImage }),\n            React.createElement(TextField, { id: TextFieldId.Introduction, label: \"Introduction\", defaultValue: values.introduction, helperText: errors.introduction, error: touched.introduction && errors.introduction, onChange: handleChange, fullWidth: true, multiline: true, rowsMax: 3 }),\n            React.createElement(TextField, { id: TextFieldId.Hobbies, label: \"Hobbies\", defaultValue: values.hobbies, helperText: errors.hobbies, error: touched.hobbies && errors.hobbies, onChange: handleChange, fullWidth: true, multiline: true, rowsMax: 3 }),\n            React.createElement(\"p\", null, \"Status\"),\n            React.createElement(Select, { name: TextFieldId.Status, onChange: handleChange, value: values.status, fullWidth: true }, showStatusOptions))));\n};\nconst responseMsg = {\n    updateSuccess: \"Update user profile success\",\n    updateFail: \"Update user profile fail!\",\n};\nfunction isValidImageType(type) {\n    const ftype = type.toLowerCase();\n    return ftype.includes(\"jpg\") || ftype.includes(\"png\") || ftype.includes(\"jpeg\");\n}\n// Wrap our form with the using withFormik HoC\nconst EditProfileForm = withFormik({\n    mapPropsToValues: props => {\n        const profile = props.profile;\n        return {\n            userId: profile.accountId,\n            profileId: profile.profileId,\n            accountId: profile.accountId,\n            imageLink: profile.imageLink,\n            fullName: profile.fullName,\n            introduction: profile.introduction,\n            hobbies: profile.hobbies,\n            status: profile.status || \"None\",\n            statusOptions: props.statusOptions || [],\n            handleCancel: props.handleCancel,\n            handleClose: props.handleClose,\n            isSnackOpen: false,\n            snackType: SnackbarType.Success,\n            snackMsg: \"\",\n        };\n    },\n    validate: (values) => {\n        const errors = {};\n        // Validate fullname type\n        if (!values.fullName) {\n            errors.fullName = profileError.fullNameEmptyError;\n        }\n        // Validate introduction\n        if (values.introduction && values.introduction.length > 255) {\n            errors.introduction = profileError.introductionError;\n        }\n        // Validate hobbies\n        if (values.hobbies && values.hobbies.length > 255) {\n            errors.introduction = profileError.hobbiesError;\n        }\n        // Validate the image\n        const fileList = document.getElementById(TextFieldId.ImageLink).files;\n        if (fileList && fileList.length > 0) {\n            const file = fileList[0];\n            if (file.size > 5242880 /* = 5MB */) {\n                errors.imageLink = profileError.imageSizeError;\n            }\n            if (!isValidImageType(file.type)) {\n                errors.imageLink = profileError.imageTypeError;\n            }\n        }\n        return errors;\n    },\n    handleSubmit: (values, { setSubmitting }) => {\n        const profile = {\n            accountId: values.userId,\n            profileId: values.profileId,\n            fullName: values.fullName,\n            imageLink: values.imageLink,\n            introduction: values.introduction,\n            hobbies: values.hobbies,\n            status: values.status,\n        };\n        const data = new FormData();\n        const blobStr = new Blob([JSON.stringify(profile)], { type: \"application/json\" });\n        data.append(\"profile\", blobStr);\n        // Get the file from form\n        const fileList = document.getElementById(TextFieldId.ImageLink).files;\n        if (fileList && fileList.length > 0) {\n            data.append(\"profileImage\", fileList[0]);\n        }\n        axios\n            .put(process.env.LOCAL_HOST_URL + \"/profile\", data)\n            .then(response => {\n            if (response.status === 200) {\n                values.handleCancel(true, SnackbarType.Success, responseMsg.updateSuccess);\n                window.location = window.location;\n            }\n        })\n            .catch(() => {\n            values.handleCancel(true, SnackbarType.Error, responseMsg.updateFail);\n        });\n        setSubmitting(false);\n    },\n})(InnerForm);\nexport default withStyles(styles)(EditProfileForm);\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/UserProfile/EditProfileForm.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/UserProfile/EditProfileForm.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,SAAS,MAAM,6BAA6B,CAAC;AACpD,OAAO,EAAE,UAAU,EAA6B,MAAM,QAAQ,CAAC;AAE/D,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,uCAAuC,CAAC;AACrE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAClE,OAAO,IAAI,MAAM,wBAAwB,CAAC;AAC1C,OAAO,EAAc,UAAU,EAAc,MAAM,0BAA0B,CAAC;AAC9E,OAAO,MAAM,MAAM,iCAAiC,CAAC;AACrD,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAC5F,OAAO,MAAM,MAAM,0BAA0B,CAAC;AAE9C,IAAK,WAMJ;AAND,WAAK,WAAW;IACZ,sCAAuB,CAAA;IACvB,oCAAqB,CAAA;IACrB,4CAA6B,CAAA;IAC7B,kCAAmB,CAAA;IACnB,gCAAiB,CAAA;AACrB,CAAC,EANI,WAAW,KAAX,WAAW,QAMf;AAmBD;CAUC;AAED,MAAM,MAAM,GAAe;IACvB,UAAU,EAAE;QACR,KAAK,EAAE,MAAM;QACb,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,UAAU;KACrB;IACD,SAAS,EAAE;QACP,QAAQ,EAAE,MAAM;QAChB,OAAO,EAAE,QAAQ;QACjB,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,QAAQ;KACtB;IACD,IAAI,EAAE;QACF,KAAK,EAAE,MAAM;QACb,OAAO,EAAE,QAAQ;QACjB,KAAK,EAAE,SAAS;QAChB,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACb;IACD,IAAI,EAAE;QACF,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,QAAQ;QACjB,KAAK,EAAE,SAAS;QAChB,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACb;IACD,cAAc,EAAE;QACZ,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,GAAG;QACX,YAAY,EAAE,EAAE;QAChB,SAAS,EAAE,EAAE;KAChB;IACD,KAAK,EAAE;QACH,MAAM,EAAE,GAAG;QACX,KAAK,EAAE,GAAG;QACV,QAAQ,EAAE,UAAU;QACpB,OAAO,EAAE,OAAO;QAChB,UAAU,EAAE,MAAM;QAClB,WAAW,EAAE,MAAM;KACtB;IACD,MAAM,EAAE;QACJ,MAAM,EAAE,GAAG;QACX,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,OAAO;QACpB,WAAW,EAAE,SAAS;QACtB,YAAY,EAAE,KAAK;KACtB;IACD,UAAU,EAAE;QACR,MAAM,EAAE,CAAC;QACT,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,OAAO,EAAE,OAAO;QAChB,QAAQ,EAAE,UAAU;KACvB;IACD,UAAU,EAAE;QACR,OAAO,EAAE,MAAM;KAClB;CACJ,CAAC;AAUF,kBAAmB,SAAQ,KAAK,CAAC,SAA+C;IAwB5E,YAAY,KAAwB;QAChC,KAAK,CAAC,KAAK,CAAC,CAAC;QAxBT,sBAAiB,GAAG,GAAS,EAAE;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QACxB,CAAC,CAAC;QAEM,qBAAgB,GAAG,GAAS,EAAE;YAClC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC,CAAC;QAEM,gBAAW,GAAG,GAAS,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC;gBACV,MAAM,EAAE,KAAK;aAChB,CAAC,CAAC;QACP,CAAC,CAAC;QAEM,eAAU,GAAG,CAAC,KAAoC,EAAQ,EAAE;YAChE,IAAI,CAAC,QAAQ,CAAC;gBACV,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,KAAK,CAAC,aAAa;aAChC,CAAC,CAAC;QACP,CAAC,CAAC;QAIE,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,SAAS;SACtB,CAAC;IACN,CAAC;IAED,MAAM;QACF,OAAO,CACH;YACI,oBAAC,MAAM,IAAC,KAAK,EAAE,EAAE,eAAe,EAAE,SAAS,EAAE;gBACzC,oBAAC,IAAI,IAAC,OAAO,EAAE,IAAI,CAAC,UAAU,iBAAmB,CAC5C;YACT,oBAAC,MAAM,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW;gBACtD,oBAAC,IAAI;oBACD,oBAAC,QAAQ,IAAC,GAAG,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB;wBAClD,oBAAC,YAAY,IAAC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;4BACrC,oBAAC,IAAI,uBAAoB,CACd;wBACf,oBAAC,YAAY,uBAA4B,CAClC;oBACX,oBAAC,OAAO,OAAG;oBACX,oBAAC,QAAQ,IAAC,GAAG,EAAC,OAAO,EAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB;wBAChD,oBAAC,YAAY,IAAC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;4BACrC,oBAAC,IAAI,iBAAc,CACR;wBACf,oBAAC,YAAY,sBAA2B,CACjC,CACR,CACF,CACP,CACT,CAAC;IACN,CAAC;CACJ;AAED,MAAM,SAAS,GAAG,CACd,KAAiF,EACnF,EAAE;IACA,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IAC7F,2BAA2B;IAC3B,MAAM,iBAAiB,GAAkB,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,OAAe,EAAE,KAAK,EAAE,EAAE;QACzF,OAAO,CACH,oBAAC,QAAQ,IAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,IAC/B,OAAO,CACD,CACd,CAAC;IACN,CAAC,CAAC,CAAC;IACH,MAAM,WAAW,GAAG,CAAC,KAA0C,EAAE,EAAE;QAC/D,MAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,IAAK,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAU,CAAC;QACjF,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CACxC,KAAK,GAAG,WAAW,CAAC,SAAS,CACZ,CAAC;QACtB,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE;YACpB,IAAI,YAAY,EAAE;gBACd,YAAY,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;aACpC;QACL,CAAC,CAAC;QACF,IAAI,IAAI;YAAE,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF,MAAM,UAAU,GAAG,GAAG,EAAE;QACpB,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CACxC,KAAK,GAAG,WAAW,CAAC,SAAS,CACZ,CAAC;QACtB,MAAM,GAAG,GAAW,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,uBAAuB,MAAM,CAAC,SAAS,EAAE,CAAC;QAC3F,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC3B,YAAY,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;YACjC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,GAAG,EAAE;QACzB,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAqB,CAAC;QACxF,YAAY,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC,CAAC;IACF,OAAO,CACH;QACI,8BAAM,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,qBAAqB;YACxD,6BAAK,SAAS,EAAE,OAAO,CAAC,UAAU;gBAC9B,oBAAC,UAAU,IAAC,SAAS,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,WAAW;oBAC3D,oBAAC,IAAI,gBAAa,CACT;gBACb,4BAAI,SAAS,EAAE,OAAO,CAAC,SAAS,mBAAmB;gBACnD,oBAAC,UAAU,IAAC,SAAS,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY;oBACvE,oBAAC,IAAI,eAAY,CACR,CACX;YACN,6BAAK,SAAS,EAAE,OAAO,CAAC,cAAc;gBAClC,6BAAK,SAAS,EAAE,OAAO,CAAC,KAAK;oBACzB,6BACI,SAAS,EAAE,OAAO,CAAC,MAAM,EACzB,EAAE,EAAE,KAAK,GAAG,WAAW,CAAC,SAAS,EACjC,GAAG,EAAE,MAAM,CAAC,SAAS,GACvB;oBACF,6BAAK,SAAS,EAAE,OAAO,CAAC,UAAU;wBAC9B,oBAAC,YAAY,IAAC,MAAM,EAAE,eAAe,EAAE,KAAK,EAAE,UAAU,GAAI,CAC1D,CACJ,CACJ;YACN,oBAAC,SAAS,IACN,EAAE,EAAE,WAAW,CAAC,QAAQ,EACxB,KAAK,EAAE,UAAU,EACjB,YAAY,EAAE,MAAM,CAAC,QAAQ,EAC7B,KAAK,EAAE,OAAO,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAC1C,UAAU,EAAE,MAAM,CAAC,QAAQ,EAC3B,QAAQ,EAAE,YAAY,EACtB,SAAS,SACX;YACF,+BACI,SAAS,EAAE,OAAO,CAAC,UAAU,EAC7B,EAAE,EAAE,WAAW,CAAC,SAAS,EACzB,IAAI,EAAE,MAAM,EACZ,IAAI,EAAC,MAAM,EACX,MAAM,EAAC,4CAA4C,EACnD,QAAQ,EAAE,WAAW,GACvB;YAEF,oBAAC,SAAS,IACN,EAAE,EAAE,WAAW,CAAC,YAAY,EAC5B,KAAK,EAAE,cAAc,EACrB,YAAY,EAAE,MAAM,CAAC,YAAY,EACjC,UAAU,EAAE,MAAM,CAAC,YAAY,EAC/B,KAAK,EAAE,OAAO,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,EAClD,QAAQ,EAAE,YAAY,EACtB,SAAS,QACT,SAAS,EAAE,IAAI,EACf,OAAO,EAAE,CAAC,GACZ;YACF,oBAAC,SAAS,IACN,EAAE,EAAE,WAAW,CAAC,OAAO,EACvB,KAAK,EAAE,SAAS,EAChB,YAAY,EAAE,MAAM,CAAC,OAAO,EAC5B,UAAU,EAAE,MAAM,CAAC,OAAO,EAC1B,KAAK,EAAE,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,EACxC,QAAQ,EAAE,YAAY,EACtB,SAAS,QACT,SAAS,EAAE,IAAI,EACf,OAAO,EAAE,CAAC,GACZ;YACF,wCAAa;YACb,oBAAC,MAAM,IACH,IAAI,EAAE,WAAW,CAAC,MAAM,EACxB,QAAQ,EAAE,YAAY,EACtB,KAAK,EAAE,MAAM,CAAC,MAAM,EACpB,SAAS,UAER,iBAAiB,CACb,CACN,CACL,CACT,CAAC;AACN,CAAC,CAAC;AAQF,MAAM,WAAW,GAAG;IAChB,aAAa,EAAE,6BAA6B;IAC5C,UAAU,EAAE,2BAA2B;CAC1C,CAAC;AACF,0BAA0B,IAAY;IAClC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACjC,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACpF,CAAC;AACD,8CAA8C;AAC9C,MAAM,eAAe,GAAG,UAAU,CAAgD;IAC9E,gBAAgB,EAAE,KAAK,CAAC,EAAE;QACtB,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC9B,OAAO;YACH,MAAM,EAAE,OAAO,CAAC,SAAS;YACzB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,MAAM;YAChC,aAAa,EAAE,KAAK,CAAC,aAAa,IAAI,EAAE;YACxC,YAAY,EAAE,KAAK,CAAC,YAAY;YAChC,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,WAAW,EAAE,KAAK;YAClB,SAAS,EAAE,YAAY,CAAC,OAAO;YAC/B,QAAQ,EAAE,EAAE;SACf,CAAC;IACN,CAAC;IAED,QAAQ,EAAE,CAAC,MAAkB,EAAE,EAAE;QAC7B,MAAM,MAAM,GAA6B,EAAE,CAAC;QAC5C,yBAAyB;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAClB,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC,kBAAkB,CAAC;SACrD;QAED,wBAAwB;QACxB,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG,EAAE;YACzD,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC,iBAAiB,CAAC;SACxD;QAED,mBAAmB;QACnB,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;YAC/C,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;SACnD;QAED,qBAAqB;QACrB,MAAM,QAAQ,GAAI,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAsB,CAAC,KAAK,CAAC;QAC5F,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,MAAM,IAAI,GAAS,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,WAAW,EAAE;gBACjC,MAAM,CAAC,SAAS,GAAG,YAAY,CAAC,cAAc,CAAC;aAClD;YACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC9B,MAAM,CAAC,SAAS,GAAG,YAAY,CAAC,cAAc,CAAC;aAClD;SACJ;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,YAAY,EAAE,CAAC,MAAM,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE;QACxC,MAAM,OAAO,GAAG;YACZ,SAAS,EAAE,MAAM,CAAC,MAAM;YACxB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,YAAY,EAAE,MAAM,CAAC,YAAY;YACjC,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,MAAM,EAAE,MAAM,CAAC,MAAM;SACxB,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC5B,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAChC,yBAAyB;QACzB,MAAM,QAAQ,GAAI,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAsB,CAAC,KAAK,CAAC;QAC5F,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C;QACD,KAAK;aACA,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,UAAU,EAAE,IAAI,CAAC;aAClD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBACzB,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,aAAa,CAAC,CAAC;gBAC3E,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;aACrC;QACL,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE;YACR,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QACP,aAAa,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;CACJ,CAAC,CAAC,SAAS,CAAC,CAAC;AACd,eAAe,UAAU,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withFormik, FormikProps, FormikErrors } from \"formik\";\nimport { IUserProfile } from \"~/data/userProfile/types\";\nimport axios from \"~/common/axiosConfigure\";\nimport { profileError } from \"~/containers/UserProfile/ProfileError\";\nimport { ListItemText, IconButton } from \"@material-ui/core/es\";\nimport { SnackbarType } from \"~/containers/snackbar/SnackbarType\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { StyleRules, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport { List, ListItem, Divider, Select, MenuItem, ListItemIcon } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nenum TextFieldId {\n    ImageLink = \"imageLink\",\n    FullName = \"fullName\",\n    Introduction = \"introduction\",\n    Hobbies = \"hobbies\",\n    Status = \"status\",\n}\n\ninterface FormValues {\n    userId: string;\n    accountId: string;\n    profileId: string;\n    imageLink: string;\n    fullName: string;\n    introduction: string;\n    hobbies: string;\n    status: string;\n    statusOptions: string[];\n}\n\ninterface OtherProps {\n    handleCancel(openSnack: boolean, snackType: SnackbarType, msg: string): void;\n    handleClose(): void;\n}\n\nclass Profile implements IUserProfile {\n    id: number;\n    profileId: string;\n    accountId: string;\n    fullName: string;\n    imageLink: string;\n    createdDate: string;\n    introduction: string;\n    hobbies: string;\n    status: string;\n}\n\nconst styles: StyleRules = {\n    formHeader: {\n        width: \"100%\",\n        textAlign: \"center\",\n        margin: \"15px 0px\",\n    },\n    formTitle: {\n        fontSize: \"20px\",\n        display: \"inline\",\n        height: \"48px\",\n        textAlign: \"center\",\n    },\n    back: {\n        float: \"left\",\n        display: \"inline\",\n        color: \"#d80202\",\n        width: 18,\n        height: 18,\n    },\n    done: {\n        float: \"right\",\n        display: \"inline\",\n        color: \"#008c46\",\n        width: 18,\n        height: 18,\n    },\n    imageContainer: {\n        width: \"100%\",\n        height: 270,\n        marginBottom: 30,\n        marginTop: 10,\n    },\n    image: {\n        height: 250,\n        width: 250,\n        position: \"relative\",\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n    },\n    avatar: {\n        height: 250,\n        width: 250,\n        borderStyle: \"solid\",\n        borderColor: \"#3f51b5\",\n        borderRadius: \"50%\",\n    },\n    editAvatar: {\n        zIndex: 1,\n        bottom: 10,\n        right: 10,\n        display: \"float\",\n        position: \"absolute\",\n    },\n    chooseFile: {\n        display: \"none\",\n    },\n};\n\ninterface OptionDialogProps {\n    upload: () => void;\n    reset: () => void;\n}\ninterface OptionDialogState {\n    isOpen: boolean;\n    anchorEl: HTMLElement | undefined;\n}\nclass OptionDialog extends React.Component<OptionDialogProps, OptionDialogState> {\n    private handleClickUpload = (): void => {\n        this.handleClose();\n        this.props.upload();\n    };\n\n    private handleClickReset = (): void => {\n        this.handleClose();\n        this.props.reset();\n    };\n\n    private handleClose = (): void => {\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    private handleOpen = (event: React.MouseEvent<HTMLElement>): void => {\n        this.setState({\n            isOpen: true,\n            anchorEl: event.currentTarget,\n        });\n    };\n\n    constructor(props: OptionDialogProps) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            anchorEl: undefined,\n        };\n    }\n\n    render(): React.ReactNode {\n        return (\n            <div>\n                <Avatar style={{ backgroundColor: \"#3f51b5\" }}>\n                    <Icon onClick={this.handleOpen}>camera_alt</Icon>\n                </Avatar>\n                <Dialog open={this.state.isOpen} onClose={this.handleClose}>\n                    <List>\n                        <ListItem key=\"upload\" onClick={this.handleClickUpload}>\n                            <ListItemIcon style={{ color: \"#3f51b5\" }}>\n                                <Icon>cloud_upload</Icon>\n                            </ListItemIcon>\n                            <ListItemText>Upload image</ListItemText>\n                        </ListItem>\n                        <Divider />\n                        <ListItem key=\"reset\" onClick={this.handleClickReset}>\n                            <ListItemIcon style={{ color: \"#3f51b5\" }}>\n                                <Icon>cancel</Icon>\n                            </ListItemIcon>\n                            <ListItemText>Reset image</ListItemText>\n                        </ListItem>\n                    </List>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst InnerForm = (\n    props: OtherProps & FormikProps<FormValues> & { classes: Record<string, string> },\n) => {\n    const { touched, errors, isSubmitting, handleChange, values, handleSubmit, classes } = props;\n    // show status options menu\n    const showStatusOptions: JSX.Element[] = values.statusOptions.map((element: string, index) => {\n        return (\n            <MenuItem key={index} value={element}>\n                {element}\n            </MenuItem>\n        );\n    });\n    const changeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.currentTarget.files && (event.currentTarget.files[0] as Blob);\n        const reader = new FileReader();\n        const imageElement = document.getElementById(\n            \"img\" + TextFieldId.ImageLink,\n        ) as HTMLImageElement;\n        reader.onloadend = () => {\n            if (imageElement) {\n                imageElement.src = reader.result;\n            }\n        };\n        if (file) reader.readAsDataURL(file);\n    };\n\n    const resetImage = () => {\n        const imageElement = document.getElementById(\n            \"img\" + TextFieldId.ImageLink,\n        ) as HTMLImageElement;\n        const url: string = `${process.env.LOCAL_HOST_URL}/profile/resetImage/${values.accountId}`;\n        axios.get(url).then(response => {\n            imageElement.src = response.data;\n            values.imageLink = response.data;\n        });\n    };\n\n    const openFileBrowser = () => {\n        const imageElement = document.getElementById(TextFieldId.ImageLink) as HTMLImageElement;\n        imageElement.click();\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmit} encType={\"multipart/form-data\"}>\n                <div className={classes.formHeader}>\n                    <IconButton className={classes.back} onClick={props.handleClose}>\n                        <Icon>clear</Icon>\n                    </IconButton>\n                    <h2 className={classes.formTitle}>EDIT PROFILE</h2>\n                    <IconButton className={classes.done} type={\"submit\"} disabled={isSubmitting}>\n                        <Icon>done</Icon>\n                    </IconButton>\n                </div>\n                <div className={classes.imageContainer}>\n                    <div className={classes.image}>\n                        <img\n                            className={classes.avatar}\n                            id={\"img\" + TextFieldId.ImageLink}\n                            src={values.imageLink}\n                        />\n                        <div className={classes.editAvatar}>\n                            <OptionDialog upload={openFileBrowser} reset={resetImage} />\n                        </div>\n                    </div>\n                </div>\n                <TextField\n                    id={TextFieldId.FullName}\n                    label={\"Fullname\"}\n                    defaultValue={values.fullName}\n                    error={touched.fullName && errors.fullName}\n                    helperText={errors.fullName}\n                    onChange={handleChange}\n                    fullWidth\n                />\n                <input\n                    className={classes.chooseFile}\n                    id={TextFieldId.ImageLink}\n                    type={\"file\"}\n                    name=\"file\"\n                    accept=\"image/x-png,image/gif,image/jpeg,image/jpg\"\n                    onChange={changeImage}\n                />\n\n                <TextField\n                    id={TextFieldId.Introduction}\n                    label={\"Introduction\"}\n                    defaultValue={values.introduction}\n                    helperText={errors.introduction}\n                    error={touched.introduction && errors.introduction}\n                    onChange={handleChange}\n                    fullWidth\n                    multiline={true}\n                    rowsMax={3}\n                />\n                <TextField\n                    id={TextFieldId.Hobbies}\n                    label={\"Hobbies\"}\n                    defaultValue={values.hobbies}\n                    helperText={errors.hobbies}\n                    error={touched.hobbies && errors.hobbies}\n                    onChange={handleChange}\n                    fullWidth\n                    multiline={true}\n                    rowsMax={3}\n                />\n                <p>Status</p>\n                <Select\n                    name={TextFieldId.Status}\n                    onChange={handleChange}\n                    value={values.status}\n                    fullWidth\n                >\n                    {showStatusOptions}\n                </Select>\n            </form>\n        </div>\n    );\n};\n\ninterface EditProfileFormProps extends WithStyles<typeof styles> {\n    profile: Profile;\n    handleCancel(openSnack: boolean, snackType: SnackbarType, msg: string): void;\n    handleClose(): void;\n    statusOptions: string[];\n}\nconst responseMsg = {\n    updateSuccess: \"Update user profile success\",\n    updateFail: \"Update user profile fail!\",\n};\nfunction isValidImageType(type: string): boolean {\n    const ftype = type.toLowerCase();\n    return ftype.includes(\"jpg\") || ftype.includes(\"png\") || ftype.includes(\"jpeg\");\n}\n// Wrap our form with the using withFormik HoC\nconst EditProfileForm = withFormik<EditProfileFormProps, OtherProps & FormValues>({\n    mapPropsToValues: props => {\n        const profile = props.profile;\n        return {\n            userId: profile.accountId,\n            profileId: profile.profileId,\n            accountId: profile.accountId,\n            imageLink: profile.imageLink,\n            fullName: profile.fullName,\n            introduction: profile.introduction,\n            hobbies: profile.hobbies,\n            status: profile.status || \"None\",\n            statusOptions: props.statusOptions || [],\n            handleCancel: props.handleCancel,\n            handleClose: props.handleClose,\n            isSnackOpen: false,\n            snackType: SnackbarType.Success,\n            snackMsg: \"\",\n        };\n    },\n\n    validate: (values: FormValues) => {\n        const errors: FormikErrors<FormValues> = {};\n        // Validate fullname type\n        if (!values.fullName) {\n            errors.fullName = profileError.fullNameEmptyError;\n        }\n\n        // Validate introduction\n        if (values.introduction && values.introduction.length > 255) {\n            errors.introduction = profileError.introductionError;\n        }\n\n        // Validate hobbies\n        if (values.hobbies && values.hobbies.length > 255) {\n            errors.introduction = profileError.hobbiesError;\n        }\n\n        // Validate the image\n        const fileList = (document.getElementById(TextFieldId.ImageLink) as HTMLInputElement).files;\n        if (fileList && fileList.length > 0) {\n            const file: File = fileList[0];\n            if (file.size > 5242880 /* = 5MB */) {\n                errors.imageLink = profileError.imageSizeError;\n            }\n            if (!isValidImageType(file.type)) {\n                errors.imageLink = profileError.imageTypeError;\n            }\n        }\n\n        return errors;\n    },\n\n    handleSubmit: (values, { setSubmitting }) => {\n        const profile = {\n            accountId: values.userId,\n            profileId: values.profileId,\n            fullName: values.fullName,\n            imageLink: values.imageLink,\n            introduction: values.introduction,\n            hobbies: values.hobbies,\n            status: values.status,\n        };\n        const data = new FormData();\n        const blobStr = new Blob([JSON.stringify(profile)], { type: \"application/json\" });\n        data.append(\"profile\", blobStr);\n        // Get the file from form\n        const fileList = (document.getElementById(TextFieldId.ImageLink) as HTMLInputElement).files;\n        if (fileList && fileList.length > 0) {\n            data.append(\"profileImage\", fileList[0]);\n        }\n        axios\n            .put(process.env.LOCAL_HOST_URL + \"/profile\", data)\n            .then(response => {\n                if (response.status === 200) {\n                    values.handleCancel(true, SnackbarType.Success, responseMsg.updateSuccess);\n                    window.location = window.location;\n                }\n            })\n            .catch(() => {\n                values.handleCancel(true, SnackbarType.Error, responseMsg.updateFail);\n            });\n        setSubmitting(false);\n    },\n})(InnerForm);\nexport default withStyles(styles)(EditProfileForm);\n"]}]}