{"remainingRequest":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/components/authRoute/AuthRoute.tsx","dependencies":[{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/components/authRoute/AuthRoute.tsx","mtime":1532407832000},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1539584369385},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1539584369506},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authActions } from \"../../data/auth\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nexport class AuthRoute extends React.Component {\n    constructor() {\n        super(...arguments);\n        // set access token into local storage\n        this.setAccessToken = (accessToken) => {\n            const token = accessToken.substring(7, accessToken.length);\n            localStorage.setItem(\"token\", token);\n        };\n        // refresh page after login\n        this.closeAndRefresh = () => {\n            opener.location.reload(); // reload your login page\n            window.close(); // close pop up window\n        };\n        // set access token into local storage\n        this.fetchNewAccessToken = () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (localStorage.getItem(\"token\") !== null) {\n                const instance = axios.create({\n                    baseURL: process.env.LOCAL_HOST_URL + \"\",\n                    headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") },\n                });\n                yield instance.get(\"/login/fetchnewaccesstoken\").then(response => {\n                    let token = response.headers.mgmsports_authorization;\n                    token = token.substring(7, token.length);\n                    localStorage.setItem(\"accessToken\", token);\n                    return response;\n                });\n            }\n        });\n    }\n    componentWillMount() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (localStorage.getItem(\"accessToken\") !== null) {\n                yield this.props.getCurrentUser();\n            }\n        });\n    }\n    render() {\n        const _a = this.props, { component: Component } = _a, rest = tslib_1.__rest(_a, [\"component\"]);\n        let error;\n        if (this.props.location.pathname === \"/social-success\") {\n            this.setAccessToken(this.props.location.search);\n            this.fetchNewAccessToken().then(() => {\n                this.closeAndRefresh();\n            });\n        }\n        if (localStorage.getItem(\"accessToken\") === null) {\n            error = true;\n        }\n        else {\n            error = false;\n        }\n        if (error && this.props.needAuth) {\n            localStorage.removeItem(\"token\");\n            return React.createElement(Route, Object.assign({}, rest, { render: () => React.createElement(Redirect, { to: \"/\" }) }));\n        }\n        if (!error && this.props.needGuest) {\n            return React.createElement(Route, Object.assign({}, rest, { render: () => React.createElement(Redirect, { to: \"/list\" }) }));\n        }\n        return React.createElement(Route, Object.assign({}, rest, { render: props => React.createElement(Component, Object.assign({}, props)) }));\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getCurrentUser: () => {\n            dispatch(authActions.getCurrentUser());\n        },\n    };\n};\nexport default connect(null, mapDispatchToProps)(withRouter(AuthRoute));\n",{"version":3,"file":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/components/authRoute/AuthRoute.tsx","sourceRoot":"","sources":["/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/components/authRoute/AuthRoute.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authActions } from \"../../data/auth\";\nimport axios from \"axios\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\ninterface AuthRouteProps {\n    component: any;\n    needAuth: boolean;\n    needGuest: boolean;\n    exact: boolean;\n    path: string;\n    getCurrentUser: () => void;\n}\n\nexport class AuthRoute extends React.Component<AuthRouteProps & RouteComponentProps<{}>, {}> {\n    async componentWillMount(): Promise<void> {\n        if (localStorage.getItem(\"accessToken\") !== null) {\n            await this.props.getCurrentUser();\n        }\n    }\n    // set access token into local storage\n    private setAccessToken = (accessToken: String): void => {\n        const token = accessToken.substring(7, accessToken.length);\n        localStorage.setItem(\"token\", token);\n    };\n    // refresh page after login\n    private closeAndRefresh = (): void => {\n        opener.location.reload(); // reload your login page\n        window.close(); // close pop up window\n    };\n    // set access token into local storage\n    private fetchNewAccessToken = async (): Promise<void> => {\n        if (localStorage.getItem(\"token\") !== null) {\n            const instance = axios.create({\n                baseURL: process.env.LOCAL_HOST_URL + \"\",\n                headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") },\n            });\n            await instance.get(\"/login/fetchnewaccesstoken\").then(response => {\n                let token = response.headers.mgmsports_authorization;\n                token = token.substring(7, token.length);\n                localStorage.setItem(\"accessToken\", token);\n                return response;\n            });\n        }\n    };\n    render(): React.ReactNode {\n        const { component: Component, ...rest } = this.props;\n        let error;\n        if (this.props.location.pathname === \"/social-success\") {\n            this.setAccessToken(this.props.location.search);\n            this.fetchNewAccessToken().then(() => {\n                this.closeAndRefresh();\n            });\n        }\n        if (localStorage.getItem(\"accessToken\") === null) {\n            error = true;\n        } else {\n            error = false;\n        }\n        if (error && this.props.needAuth) {\n            localStorage.removeItem(\"token\");\n            return <Route {...rest} render={() => <Redirect to=\"/\" />} />;\n        }\n        if (!error && this.props.needGuest) {\n            return <Route {...rest} render={() => <Redirect to={\"/list\"} />} />;\n        }\n        return <Route {...rest} render={props => <Component {...props} />} />;\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        getCurrentUser: () => {\n            dispatch(authActions.getCurrentUser());\n        },\n    };\n};\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(withRouter(AuthRoute));\n"]}]}