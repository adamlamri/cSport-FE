{"remainingRequest":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/searchUser/actionCreators.ts","dependencies":[{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/searchUser/actionCreators.ts","mtime":1531995134000},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1539584369385},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1539584369506},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import actionTypes from \"./actionTypes\";\n// this will be called when you start a request\nexport const searchUserFetchRequested = () => ({\n    type: actionTypes.SEARCH_USER_FETCH_REQUESTED,\n});\n// this will be call when you get the data back\nexport const searchUserFetchFulfilled = (searchUsers) => ({\n    type: actionTypes.SEARCH_USER_FETCH_FULFILLED,\n    payload: searchUsers,\n});\n// this will be call when you got some error\nexport const searchUserFetchRejected = (error) => ({\n    type: actionTypes.SEARCH_USER_FETCH_REJECTED,\n    payload: error,\n    error: true,\n});\nexport const searchUserNotInCompetitionFetchRequested = () => ({\n    type: actionTypes.SEARCH_USER_NOT_IN_COMPETITION_FETCH_REQUESTED,\n});\nexport const searchUserNotInCompetitionFetchFulfilled = (searchUsers) => ({\n    type: actionTypes.SEARCH_USER_NOT_IN_COMPETITION_FETCH_FULFILLED,\n    payload: searchUsers,\n});\nexport const searchUserNotInCompetitionFetchRejected = (error) => ({\n    type: actionTypes.SEARCH_USER_NOT_IN_COMPETITION_FETCH_REJECTED,\n    payload: error,\n    error: true,\n});\nexport default {\n    searchUserFetchRequested,\n    searchUserFetchFulfilled,\n    searchUserFetchRejected,\n    searchUserNotInCompetitionFetchRequested,\n    searchUserNotInCompetitionFetchFulfilled,\n    searchUserNotInCompetitionFetchRejected,\n};\n",{"version":3,"file":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/searchUser/actionCreators.ts","sourceRoot":"","sources":["/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/searchUser/actionCreators.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,eAAe,CAAC;AASxC,+CAA+C;AAC/C,MAAM,CAAC,MAAM,wBAAwB,GAAG,GAAG,EAAE,CAAC,CAAC;IAC3C,IAAI,EAAE,WAAW,CAAC,2BAA2B;CAChD,CAAC,CAAC;AACH,+CAA+C;AAC/C,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,WAAqB,EAAE,EAAE,CAAC,CAAC;IAChE,IAAI,EAAE,WAAW,CAAC,2BAA2B;IAC7C,OAAO,EAAE,WAAW;CACvB,CAAC,CAAC;AACH,4CAA4C;AAC5C,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,CAAC;IACpD,IAAI,EAAE,WAAW,CAAC,0BAA0B;IAC5C,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,IAAI;CACd,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,wCAAwC,GAAG,GAAG,EAAE,CAAC,CAAC;IAC3D,IAAI,EAAE,WAAW,CAAC,8CAA8C;CACnE,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,wCAAwC,GAAG,CAAC,WAAqB,EAAE,EAAE,CAAC,CAAC;IAChF,IAAI,EAAE,WAAW,CAAC,8CAA8C;IAChE,OAAO,EAAE,WAAW;CACvB,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,uCAAuC,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,CAAC;IACpE,IAAI,EAAE,WAAW,CAAC,6CAA6C;IAC/D,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,IAAI;CACd,CAAC,CAAC;AAEH,eAAe;IACX,wBAAwB;IACxB,wBAAwB;IACxB,uBAAuB;IACvB,wCAAwC;IACxC,wCAAwC;IACxC,uCAAuC;CAC1C,CAAC","sourcesContent":["import actionTypes from \"./actionTypes\";\n// define action\n\nexport interface UserType {\n    accountId: string;\n    fullName: string;\n    email: string;\n    imageLink: string;\n}\n// this will be called when you start a request\nexport const searchUserFetchRequested = () => ({\n    type: actionTypes.SEARCH_USER_FETCH_REQUESTED,\n});\n// this will be call when you get the data back\nexport const searchUserFetchFulfilled = (searchUsers: UserType) => ({\n    type: actionTypes.SEARCH_USER_FETCH_FULFILLED,\n    payload: searchUsers,\n});\n// this will be call when you got some error\nexport const searchUserFetchRejected = (error: any) => ({\n    type: actionTypes.SEARCH_USER_FETCH_REJECTED,\n    payload: error,\n    error: true,\n});\n\nexport const searchUserNotInCompetitionFetchRequested = () => ({\n    type: actionTypes.SEARCH_USER_NOT_IN_COMPETITION_FETCH_REQUESTED,\n});\n\nexport const searchUserNotInCompetitionFetchFulfilled = (searchUsers: UserType) => ({\n    type: actionTypes.SEARCH_USER_NOT_IN_COMPETITION_FETCH_FULFILLED,\n    payload: searchUsers,\n});\n\nexport const searchUserNotInCompetitionFetchRejected = (error: any) => ({\n    type: actionTypes.SEARCH_USER_NOT_IN_COMPETITION_FETCH_REJECTED,\n    payload: error,\n    error: true,\n});\n\nexport default {\n    searchUserFetchRequested,\n    searchUserFetchFulfilled,\n    searchUserFetchRejected,\n    searchUserNotInCompetitionFetchRequested,\n    searchUserNotInCompetitionFetchFulfilled,\n    searchUserNotInCompetitionFetchRejected,\n};\n"]}]}