{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamStatistics/teamStatistics.tsx","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamStatistics/teamStatistics.tsx","mtime":1532682537041},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport \"./teamStatistics.scss\";\nimport TeamHeader from \"./TeamHeader\";\nimport ButtonCompareVer2 from \"~/containers/TeamStatistics/ButtonCompareVer2\";\nimport ShowTimeInterval from \"~/containers/TeamStatistics/TimeInterval\";\nimport axios from \"~/common/axiosConfigure\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nclass TeamSta extends React.Component {\n    constructor(props) {\n        super(props);\n        const date = new Date();\n        this.state = {\n            teamSta: null,\n            interval: \"\",\n            timeZoneOffset: date.getTimezoneOffset(),\n        };\n        this.updateData(\"0\");\n    }\n    componentDidMount() {\n        const url = process.env.LOCAL_HOST_URL +\n            `/teams/statistic/${this.props.match.params.teamId}?timeinterval=0&timezoneoffset=${this.state.timeZoneOffset}`;\n        axios.get(url).then(response => {\n            this.setState({ teamSta: response.data });\n        });\n    }\n    updateData(index) {\n        const tempInterval = index;\n        const url = `/teams/statistic/${this.props.match.params.teamId}?timeinterval=${tempInterval}&timezoneoffset=${this.state.timeZoneOffset}`;\n        axios.get(url).then(response => {\n            this.setState({\n                teamSta: response.data,\n                interval: tempInterval,\n            });\n        });\n    }\n    IsTeamActive(teamStaC) {\n        if (teamStaC.runningDistanceTotal === \"0.0\" &&\n            teamStaC.gymTimeTotal === \"0.0\" &&\n            teamStaC.cyclingDistanceTotal === \"0.0\" &&\n            teamStaC.hikingTimeTotal === \"0.0\" &&\n            teamStaC.yogaTimeTotal === \"0.0\" &&\n            teamStaC.meditationTimeTotal === \"0.0\" &&\n            teamStaC.climbingTimeTotal === \"0.0\" &&\n            teamStaC.swimmingTimeTotal === \"0.0\" &&\n            teamStaC.skatingTimeTotal === \"0.0\") {\n            return false;\n        }\n        return true;\n    }\n    toHourMinute(initial) {\n        const hour = Math.floor(Number(initial) / 3600);\n        const minute = Math.floor((Number(initial) - hour * 3600) / 60);\n        if (minute === 0) {\n            return hour + \" h\";\n        }\n        if (hour === 0) {\n            return \"0 h \" + minute + \" m\";\n        }\n        return hour + \" h \" + minute + \" m\";\n    }\n    render() {\n        const logoToStaALURL = require(\"../../theme/images/statistics.png\");\n        const distanceLogo = require(\"../../theme/images/distanceLogo.png\");\n        const runningLogo = require(\"../../theme/images/runningLogo.png\");\n        const liftingLogo = require(\"../../theme/images/liftingLogo.png\");\n        if (this.state.teamSta == null) {\n            return React.createElement(\"div\", null);\n        }\n        return (React.createElement(\"div\", null,\n            React.createElement(Grid, { item: true },\n                React.createElement(TeamHeader, { teamId: this.props.match.params.teamId })),\n            React.createElement(\"div\", { className: \"root\", style: { marginTop: \"20px\" } },\n                React.createElement(Grid, { container: true, style: { flexDirection: \"row-reverse\" } },\n                    React.createElement(Grid, { item: true, style: { padding: \"0px\" } },\n                        React.createElement(ButtonCompareVer2, { teamId: this.props.match.params.teamId, timeinterval: this.state.interval })),\n                    React.createElement(Grid, { item: true, style: { padding: \"0px\" } },\n                        React.createElement(ShowTimeInterval, { updateData: this.updateData.bind(this) }))),\n                React.createElement(Grid, { container: true, className: \"grid\", style: {\n                        marginBottom: \"10px\",\n                        marginTop: \"10px\",\n                        backgroundImage: `url(${logoToStaALURL})`,\n                        backgroundPositionX: 0,\n                        backgroundRepeat: \"no-repeat\",\n                        width: \"100%\",\n                        height: \"145px\",\n                        backgroundPosition: \"center\",\n                        backgroundSize: \"cover\",\n                        borderRadius: \"3px\",\n                        boxShadow: \"2px 2px 2px 1px rgba(1, 92, 127, 0.44)\",\n                    } },\n                    React.createElement(Grid, { item: true, xs: 4 }),\n                    React.createElement(Grid, { item: true, xs: 7, style: { display: \"block\", justifyContent: \"center\" } },\n                        React.createElement(Paper, { style: {\n                                background: \"none\",\n                                border: \"none\",\n                                boxShadow: \"none\",\n                                display: \"flex\",\n                                marginTop: \"10px\",\n                            } },\n                            React.createElement(\"div\", null,\n                                React.createElement(\"span\", { style: {\n                                        height: \"10px\",\n                                        width: \"10px\",\n                                        backgroundColor: \"#5cb5e5\",\n                                        borderRadius: \"50%\",\n                                        display: \"inline-block\",\n                                        marginRight: \"3px\",\n                                    } })),\n                            React.createElement(\"div\", null,\n                                React.createElement(Typography, { variant: \"headline\", component: \"h4\", style: {\n                                        fontSize: \"1.2rem\",\n                                        fontWeight: 500,\n                                    } }, this.state.teamSta.memberTotal),\n                                React.createElement(Typography, { component: \"p\", style: {\n                                        fontSize: \"0.75rem\",\n                                    } }, \"Total members\"))),\n                        React.createElement(Paper, { style: {\n                                background: \"none\",\n                                border: \"none\",\n                                boxShadow: \"none\",\n                                display: \"flex\",\n                            } },\n                            React.createElement(\"div\", null,\n                                React.createElement(\"span\", { style: {\n                                        height: \"10px\",\n                                        width: \"10px\",\n                                        backgroundColor: \"#65ca64\",\n                                        borderRadius: \"50%\",\n                                        display: \"inline-block\",\n                                        marginRight: \"3px\",\n                                    } })),\n                            React.createElement(\"div\", null,\n                                React.createElement(Typography, { variant: \"headline\", component: \"h4\", style: {\n                                        fontSize: \"1.2rem\",\n                                        fontWeight: 500,\n                                    } }, this.state.teamSta.activeMemberTotal),\n                                React.createElement(Typography, { component: \"p\", style: {\n                                        fontSize: \"0.75rem\",\n                                    } }, \"Active members\"))),\n                        React.createElement(Paper, { style: {\n                                background: \"none\",\n                                border: \"none\",\n                                boxShadow: \"none\",\n                                display: \"flex\",\n                            } },\n                            React.createElement(\"div\", null,\n                                React.createElement(\"span\", { style: {\n                                        height: \"10px\",\n                                        width: \"10px\",\n                                        backgroundColor: \"#f18429\",\n                                        borderRadius: \"50%\",\n                                        display: \"inline-block\",\n                                        marginRight: \"3px\",\n                                    } })),\n                            React.createElement(\"div\", null,\n                                React.createElement(Typography, { variant: \"headline\", component: \"h4\", style: {\n                                        fontSize: \"1.2rem\",\n                                        fontWeight: 500,\n                                    } }, this.toHourMinute(this.state.teamSta.activityTimeTotal)),\n                                React.createElement(Typography, { component: \"p\", style: {\n                                        fontSize: \"0.75rem\",\n                                    } }, \"Total active time\")))),\n                    React.createElement(Grid, { item: true, xs: 1 })),\n                React.createElement(Grid, { container: true, style: {\n                        boxShadow: \"2px 2px 2px 1px rgba(1, 92, 127, 0.44)\",\n                        backgroundColor: \"#ffffff\",\n                        borderRadius: \"5px\",\n                    } },\n                    React.createElement(Grid, { item: true, xs: 12, style: {\n                            justifyContent: \"Center\",\n                            display: \"flex\",\n                            backgroundColor: \"#2e7996\",\n                        } },\n                        React.createElement(Paper, { style: {\n                                textAlign: \"center\",\n                                backgroundColor: \"#2e7996\",\n                                border: \"none\",\n                            } },\n                            React.createElement(\"span\", { style: { color: \"#ffffff\" } }, \"Record in details\"))),\n                    !(this.state.teamSta.runningDistanceTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { className: \"typeImg\", src: runningLogo })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.state.teamSta.runningDistanceTotal),\n                            React.createElement(\"div\", { className: \"unit\" }, \"km\")),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Running\"))),\n                    !(this.state.teamSta.gymTimeTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { src: liftingLogo, className: \"typeImg\" })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.toHourMinute(this.state.teamSta.gymTimeTotal)),\n                            React.createElement(\"div\", { style: { textAlign: \"center\" } })),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Gym\"))),\n                    !(this.state.teamSta.cyclingDistanceTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { src: distanceLogo, className: \"typeImg\" })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.state.teamSta.cyclingDistanceTotal),\n                            React.createElement(\"div\", { style: { textAlign: \"center\" } }, \"km\")),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Cycling\"))),\n                    !(this.state.teamSta.meditationTimeTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { src: distanceLogo, className: \"typeImg\" })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.toHourMinute(this.state.teamSta.meditationTimeTotal)),\n                            React.createElement(\"div\", { style: { textAlign: \"center\" } })),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Meditation\"))),\n                    !(this.state.teamSta.climbingTimeTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { src: distanceLogo, className: \"typeImg\" })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.toHourMinute(this.state.teamSta.climbingTimeTotal)),\n                            React.createElement(\"div\", { style: { textAlign: \"center\" } })),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Climbing\"))),\n                    !(this.state.teamSta.skatingTimeTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { src: distanceLogo, className: \"typeImg\" })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.toHourMinute(this.state.teamSta.skatingTimeTotal)),\n                            React.createElement(\"div\", { style: { textAlign: \"center\" } })),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Skating\"))),\n                    !(this.state.teamSta.swimmingTimeTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { src: distanceLogo, className: \"typeImg\" })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.toHourMinute(this.state.teamSta.swimmingTimeTotal)),\n                            React.createElement(\"div\", { style: { textAlign: \"center\" } })),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Swimming\"))),\n                    !(this.state.teamSta.yogaTimeTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { src: distanceLogo, className: \"typeImg\" })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.toHourMinute(this.state.teamSta.yogaTimeTotal)),\n                            React.createElement(\"div\", { style: { textAlign: \"center\" } })),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Yoga\"))),\n                    !(this.state.teamSta.hikingTimeTotal === \"0.0\") && (React.createElement(Grid, { item: true, xs: 6, sm: 6, className: \"typeGrid\" },\n                        React.createElement(\"div\", { className: \"circleFig\" },\n                            React.createElement(\"div\", { className: \"typeImgDiv\" },\n                                React.createElement(\"img\", { src: distanceLogo, className: \"typeImg\" })),\n                            React.createElement(\"h5\", { style: { margin: \"auto\" } }, this.toHourMinute(this.state.teamSta.hikingTimeTotal)),\n                            React.createElement(\"div\", { style: { textAlign: \"center\" } })),\n                        React.createElement(\"div\", { className: \"typeTitle\" }, \"Hiking\"))),\n                    !this.IsTeamActive(this.state.teamSta) && (React.createElement(Grid, { item: true, xs: 12, style: {\n                            justifyContent: \"Center\",\n                            display: \"flex\",\n                        } },\n                        React.createElement(Paper, { style: { textAlign: \"center\", backgroundColor: \"#ffffff\" } },\n                            React.createElement(\"span\", { style: { color: \"#2e7996\" } }, \"This team is not active during a given time interval\"))))))));\n    }\n}\nexport default TeamSta;\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamStatistics/teamStatistics.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/TeamStatistics/teamStatistics.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAEhD,OAAO,uBAAuB,CAAC;AAC/B,OAAO,UAAU,MAAM,cAAc,CAAC;AACtC,OAAO,iBAAiB,MAAM,+CAA+C,CAAC;AAC9E,OAAO,gBAAgB,MAAM,0CAA0C,CAAC;AACxE,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAC5C,OAAO,UAAU,MAAM,yCAAyC,CAAC;AA8BjE,aAAc,SAAQ,KAAK,CAAC,SAAgC;IACxD,YAAY,KAAa;QACrB,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG;YACT,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,EAAE;YACZ,cAAc,EAAE,IAAI,CAAC,iBAAiB,EAAE;SAC3C,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,iBAAiB;QACb,MAAM,GAAG,GACL,OAAO,CAAC,GAAG,CAAC,cAAc;YAC1B,oBAAoB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,kCAC9C,IAAI,CAAC,KAAK,CAAC,cACf,EAAE,CAAC;QACP,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,UAAU,CAAC,KAAa;QAC5B,MAAM,YAAY,GAAG,KAAK,CAAC;QAC3B,MAAM,GAAG,GAAW,oBAChB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAC5B,iBAAiB,YAAY,mBAAmB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QAC5E,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC;gBACV,OAAO,EAAE,QAAQ,CAAC,IAAI;gBACtB,QAAQ,EAAE,YAAY;aACzB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACO,YAAY,CAAC,QAAkB;QACnC,IACI,QAAQ,CAAC,oBAAoB,KAAK,KAAK;YACvC,QAAQ,CAAC,YAAY,KAAK,KAAK;YAC/B,QAAQ,CAAC,oBAAoB,KAAK,KAAK;YACvC,QAAQ,CAAC,eAAe,KAAK,KAAK;YAClC,QAAQ,CAAC,aAAa,KAAK,KAAK;YAChC,QAAQ,CAAC,mBAAmB,KAAK,KAAK;YACtC,QAAQ,CAAC,iBAAiB,KAAK,KAAK;YACpC,QAAQ,CAAC,iBAAiB,KAAK,KAAK;YACpC,QAAQ,CAAC,gBAAgB,KAAK,KAAK,EACrC;YACE,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACO,YAAY,CAAC,OAAe;QAChC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;QAChD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAChE,IAAI,MAAM,KAAK,CAAC,EAAE;YACd,OAAO,IAAI,GAAG,IAAI,CAAC;SACtB;QACD,IAAI,IAAI,KAAK,CAAC,EAAE;YACZ,OAAO,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;SACjC;QACD,OAAO,IAAI,GAAG,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC;IACxC,CAAC;IACD,MAAM;QACF,MAAM,cAAc,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;QACpE,MAAM,YAAY,GAAG,OAAO,CAAC,qCAAqC,CAAC,CAAC;QACpE,MAAM,WAAW,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAClE,MAAM,WAAW,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAClE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,EAAE;YAC5B,OAAO,gCAAO,CAAC;SAClB;QACD,OAAO,CACH;YACI,oBAAC,IAAI,IAAC,IAAI;gBACN,oBAAC,UAAU,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAI,CACnD;YACP,6BAAK,SAAS,EAAC,MAAM,EAAC,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;gBAC9C,oBAAC,IAAI,IAAC,SAAS,QAAC,KAAK,EAAE,EAAE,aAAa,EAAE,aAAa,EAAE;oBACnD,oBAAC,IAAI,IAAC,IAAI,QAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;wBAChC,oBAAC,iBAAiB,IACd,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EACtC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GACnC,CACC;oBACP,oBAAC,IAAI,IAAC,IAAI,QAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;wBAChC,oBAAC,gBAAgB,IAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAI,CACzD,CACJ;gBAEP,oBAAC,IAAI,IACD,SAAS,QACT,SAAS,EAAC,MAAM,EAChB,KAAK,EAAE;wBACH,YAAY,EAAE,MAAM;wBACpB,SAAS,EAAE,MAAM;wBACjB,eAAe,EAAE,OAAO,cAAc,GAAG;wBACzC,mBAAmB,EAAE,CAAC;wBACtB,gBAAgB,EAAE,WAAW;wBAC7B,KAAK,EAAE,MAAM;wBACb,MAAM,EAAE,OAAO;wBACf,kBAAkB,EAAE,QAAQ;wBAC5B,cAAc,EAAE,OAAO;wBACvB,YAAY,EAAE,KAAK;wBACnB,SAAS,EAAE,wCAAwC;qBACtD;oBAED,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,GAAI;oBACpB,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE;wBACnE,oBAAC,KAAK,IACF,KAAK,EAAE;gCACH,UAAU,EAAE,MAAM;gCAClB,MAAM,EAAE,MAAM;gCACd,SAAS,EAAE,MAAM;gCACjB,OAAO,EAAE,MAAM;gCACf,SAAS,EAAE,MAAM;6BACpB;4BAED;gCACI,8BACI,KAAK,EAAE;wCACH,MAAM,EAAE,MAAM;wCACd,KAAK,EAAE,MAAM;wCACb,eAAe,EAAE,SAAS;wCAC1B,YAAY,EAAE,KAAK;wCACnB,OAAO,EAAE,cAAc;wCACvB,WAAW,EAAE,KAAK;qCACrB,GACH,CACA;4BACN;gCACI,oBAAC,UAAU,IACP,OAAO,EAAC,UAAU,EAClB,SAAS,EAAC,IAAI,EACd,KAAK,EAAE;wCACH,QAAQ,EAAE,QAAQ;wCAClB,UAAU,EAAE,GAAG;qCAClB,IAEA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CACtB;gCACb,oBAAC,UAAU,IACP,SAAS,EAAC,GAAG,EACb,KAAK,EAAE;wCACH,QAAQ,EAAE,SAAS;qCACtB,oBAGQ,CACX,CACF;wBACR,oBAAC,KAAK,IACF,KAAK,EAAE;gCACH,UAAU,EAAE,MAAM;gCAClB,MAAM,EAAE,MAAM;gCACd,SAAS,EAAE,MAAM;gCACjB,OAAO,EAAE,MAAM;6BAClB;4BAED;gCACI,8BACI,KAAK,EAAE;wCACH,MAAM,EAAE,MAAM;wCACd,KAAK,EAAE,MAAM;wCACb,eAAe,EAAE,SAAS;wCAC1B,YAAY,EAAE,KAAK;wCACnB,OAAO,EAAE,cAAc;wCACvB,WAAW,EAAE,KAAK;qCACrB,GACH,CACA;4BACN;gCACI,oBAAC,UAAU,IACP,OAAO,EAAC,UAAU,EAClB,SAAS,EAAC,IAAI,EACd,KAAK,EAAE;wCACH,QAAQ,EAAE,QAAQ;wCAClB,UAAU,EAAE,GAAG;qCAClB,IAEA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAC5B;gCACb,oBAAC,UAAU,IACP,SAAS,EAAC,GAAG,EACb,KAAK,EAAE;wCACH,QAAQ,EAAE,SAAS;qCACtB,qBAGQ,CACX,CACF;wBACR,oBAAC,KAAK,IACF,KAAK,EAAE;gCACH,UAAU,EAAE,MAAM;gCAClB,MAAM,EAAE,MAAM;gCACd,SAAS,EAAE,MAAM;gCACjB,OAAO,EAAE,MAAM;6BAClB;4BAED;gCACI,8BACI,KAAK,EAAE;wCACH,MAAM,EAAE,MAAM;wCACd,KAAK,EAAE,MAAM;wCACb,eAAe,EAAE,SAAS;wCAC1B,YAAY,EAAE,KAAK;wCACnB,OAAO,EAAE,cAAc;wCACvB,WAAW,EAAE,KAAK;qCACrB,GACH,CACA;4BACN;gCACI,oBAAC,UAAU,IACP,OAAO,EAAC,UAAU,EAClB,SAAS,EAAC,IAAI,EACd,KAAK,EAAE;wCACH,QAAQ,EAAE,QAAQ;wCAClB,UAAU,EAAE,GAAG;qCAClB,IAEA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAC/C;gCACb,oBAAC,UAAU,IACP,SAAS,EAAC,GAAG,EACb,KAAK,EAAE;wCACH,QAAQ,EAAE,SAAS;qCACtB,wBAGQ,CACX,CACF,CACL;oBACP,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,GAAI,CACjB;gBAEP,oBAAC,IAAI,IACD,SAAS,QACT,KAAK,EAAE;wBACH,SAAS,EAAE,wCAAwC;wBACnD,eAAe,EAAE,SAAS;wBAC1B,YAAY,EAAE,KAAK;qBACtB;oBAED,oBAAC,IAAI,IACD,IAAI,QACJ,EAAE,EAAE,EAAE,EACN,KAAK,EAAE;4BACH,cAAc,EAAE,QAAQ;4BACxB,OAAO,EAAE,MAAM;4BACf,eAAe,EAAE,SAAS;yBAC7B;wBAED,oBAAC,KAAK,IACF,KAAK,EAAE;gCACH,SAAS,EAAE,QAAQ;gCACnB,eAAe,EAAE,SAAS;gCAC1B,MAAM,EAAE,MAAM;6BACjB;4BAED,8BAAM,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,wBAA0B,CACvD,CACL;oBACN,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,KAAK,KAAK,CAAC,IAAI,CACrD,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,SAAS,EAAC,SAAS,EAAC,GAAG,EAAE,WAAW,GAAI,CAC3C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,CACvC;4BACL,6BAAK,SAAS,EAAC,MAAM,SAAS,CAC5B;wBACN,6BAAK,SAAS,EAAC,WAAW,cAAc,CACrC,CACV;oBACA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,KAAK,KAAK,CAAC,IAAI,CAC7C,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,GAAG,EAAE,WAAW,EAAE,SAAS,EAAC,SAAS,GAAG,CAC3C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAClD;4BACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAI,CACrC;wBACN,6BAAK,SAAS,EAAC,WAAW,UAAU,CACjC,CACV;oBACA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,KAAK,KAAK,CAAC,IAAI,CACrD,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,SAAS,GAAG,CAC5C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,CACvC;4BACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAU,CAC3C;wBACN,6BAAK,SAAS,EAAC,WAAW,cAAc,CACrC,CACV;oBACA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB,KAAK,KAAK,CAAC,IAAI,CACpD,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,SAAS,GAAG,CAC5C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,CACzD;4BACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAI,CACrC;wBACN,6BAAK,SAAS,EAAC,WAAW,iBAAiB,CACxC,CACV;oBACA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,KAAK,KAAK,CAAC,IAAI,CAClD,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,SAAS,GAAG,CAC5C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CACvD;4BACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAI,CACrC;wBACN,6BAAK,SAAS,EAAC,WAAW,eAAe,CACtC,CACV;oBACA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,KAAK,KAAK,CAAC,IAAI,CACjD,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,SAAS,GAAG,CAC5C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CACtD;4BACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAI,CACrC;wBACN,6BAAK,SAAS,EAAC,WAAW,cAAc,CACrC,CACV;oBACA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,KAAK,KAAK,CAAC,IAAI,CAClD,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,SAAS,GAAG,CAC5C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CACvD;4BACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAI,CACrC;wBACN,6BAAK,SAAS,EAAC,WAAW,eAAe,CACtC,CACV;oBACA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,KAAK,KAAK,CAAC,IAAI,CAC9C,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,SAAS,GAAG,CAC5C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CACnD;4BACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAI,CACrC;wBACN,6BAAK,SAAS,EAAC,WAAW,WAAW,CAClC,CACV;oBACA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,KAAK,KAAK,CAAC,IAAI,CAChD,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;wBACzC,6BAAK,SAAS,EAAC,WAAW;4BACtB,6BAAK,SAAS,EAAC,YAAY;gCACvB,6BAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,SAAS,GAAG,CAC5C;4BACN,4BAAI,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CACrD;4BACL,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAI,CACrC;wBACN,6BAAK,SAAS,EAAC,WAAW,aAAa,CACpC,CACV;oBACA,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CACvC,oBAAC,IAAI,IACD,IAAI,QACJ,EAAE,EAAE,EAAE,EACN,KAAK,EAAE;4BACH,cAAc,EAAE,QAAQ;4BACxB,OAAO,EAAE,MAAM;yBAClB;wBAED,oBAAC,KAAK,IAAC,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE;4BAC7D,8BAAM,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,2DAE1B,CACH,CACL,CACV,CACE,CACL,CACJ,CACT,CAAC;IACN,CAAC;CACJ;AAED,eAAe,OAAO,CAAC","sourcesContent":["import * as React from \"react\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { RouteComponentProps } from \"react-router\";\nimport \"./teamStatistics.scss\";\nimport TeamHeader from \"./TeamHeader\";\nimport ButtonCompareVer2 from \"~/containers/TeamStatistics/ButtonCompareVer2\";\nimport ShowTimeInterval from \"~/containers/TeamStatistics/TimeInterval\";\nimport axios from \"~/common/axiosConfigure\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nexport interface ITeamSta {\n    memberTotal: string;\n    activeMemberTotal: string;\n    activityTimeTotal: string;\n    runningDistanceTotal: string;\n    cyclingDistanceTotal: string;\n    gymTimeTotal: string;\n    beginDate: string;\n    endDate: string;\n    hikingTimeTotal: string;\n    yogaTimeTotal: string;\n    meditationTimeTotal: string;\n    climbingTimeTotal: string;\n    swimmingTimeTotal: string;\n    skatingTimeTotal: string;\n}\n\ninterface ITeamStaState {\n    teamSta: ITeamSta | null;\n    interval?: string;\n    timeZoneOffset?: number;\n}\n\ninterface ITeamStaProps {\n    teamId?: string;\n}\n\ninterface IProps extends RouteComponentProps<ITeamStaProps> {}\n\nclass TeamSta extends React.Component<IProps, ITeamStaState> {\n    constructor(props: IProps) {\n        super(props);\n        const date = new Date();\n        this.state = {\n            teamSta: null,\n            interval: \"\",\n            timeZoneOffset: date.getTimezoneOffset(),\n        };\n        this.updateData(\"0\");\n    }\n\n    componentDidMount(): void {\n        const url: string =\n            process.env.LOCAL_HOST_URL +\n            `/teams/statistic/${this.props.match.params.teamId}?timeinterval=0&timezoneoffset=${\n                this.state.timeZoneOffset\n            }`;\n        axios.get(url).then(response => {\n            this.setState({ teamSta: response.data });\n        });\n    }\n\n    private updateData(index: string): void {\n        const tempInterval = index;\n        const url: string = `/teams/statistic/${\n            this.props.match.params.teamId\n        }?timeinterval=${tempInterval}&timezoneoffset=${this.state.timeZoneOffset}`;\n        axios.get(url).then(response => {\n            this.setState({\n                teamSta: response.data,\n                interval: tempInterval,\n            });\n        });\n    }\n    private IsTeamActive(teamStaC: ITeamSta): boolean {\n        if (\n            teamStaC.runningDistanceTotal === \"0.0\" &&\n            teamStaC.gymTimeTotal === \"0.0\" &&\n            teamStaC.cyclingDistanceTotal === \"0.0\" &&\n            teamStaC.hikingTimeTotal === \"0.0\" &&\n            teamStaC.yogaTimeTotal === \"0.0\" &&\n            teamStaC.meditationTimeTotal === \"0.0\" &&\n            teamStaC.climbingTimeTotal === \"0.0\" &&\n            teamStaC.swimmingTimeTotal === \"0.0\" &&\n            teamStaC.skatingTimeTotal === \"0.0\"\n        ) {\n            return false;\n        }\n        return true;\n    }\n    private toHourMinute(initial: string): string {\n        const hour = Math.floor(Number(initial) / 3600);\n        const minute = Math.floor((Number(initial) - hour * 3600) / 60);\n        if (minute === 0) {\n            return hour + \" h\";\n        }\n        if (hour === 0) {\n            return \"0 h \" + minute + \" m\";\n        }\n        return hour + \" h \" + minute + \" m\";\n    }\n    render(): React.ReactNode {\n        const logoToStaALURL = require(\"../../theme/images/statistics.png\");\n        const distanceLogo = require(\"../../theme/images/distanceLogo.png\");\n        const runningLogo = require(\"../../theme/images/runningLogo.png\");\n        const liftingLogo = require(\"../../theme/images/liftingLogo.png\");\n        if (this.state.teamSta == null) {\n            return <div />;\n        }\n        return (\n            <div>\n                <Grid item>\n                    <TeamHeader teamId={this.props.match.params.teamId} />\n                </Grid>\n                <div className=\"root\" style={{ marginTop: \"20px\" }}>\n                    <Grid container style={{ flexDirection: \"row-reverse\" }}>\n                        <Grid item style={{ padding: \"0px\" }}>\n                            <ButtonCompareVer2\n                                teamId={this.props.match.params.teamId}\n                                timeinterval={this.state.interval}\n                            />\n                        </Grid>\n                        <Grid item style={{ padding: \"0px\" }}>\n                            <ShowTimeInterval updateData={this.updateData.bind(this)} />\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        container\n                        className=\"grid\"\n                        style={{\n                            marginBottom: \"10px\",\n                            marginTop: \"10px\",\n                            backgroundImage: `url(${logoToStaALURL})`,\n                            backgroundPositionX: 0,\n                            backgroundRepeat: \"no-repeat\",\n                            width: \"100%\",\n                            height: \"145px\",\n                            backgroundPosition: \"center\",\n                            backgroundSize: \"cover\",\n                            borderRadius: \"3px\",\n                            boxShadow: \"2px 2px 2px 1px rgba(1, 92, 127, 0.44)\",\n                        }}\n                    >\n                        <Grid item xs={4} />\n                        <Grid item xs={7} style={{ display: \"block\", justifyContent: \"center\" }}>\n                            <Paper\n                                style={{\n                                    background: \"none\",\n                                    border: \"none\",\n                                    boxShadow: \"none\",\n                                    display: \"flex\",\n                                    marginTop: \"10px\",\n                                }}\n                            >\n                                <div>\n                                    <span\n                                        style={{\n                                            height: \"10px\",\n                                            width: \"10px\",\n                                            backgroundColor: \"#5cb5e5\",\n                                            borderRadius: \"50%\",\n                                            display: \"inline-block\",\n                                            marginRight: \"3px\",\n                                        }}\n                                    />\n                                </div>\n                                <div>\n                                    <Typography\n                                        variant=\"headline\"\n                                        component=\"h4\"\n                                        style={{\n                                            fontSize: \"1.2rem\",\n                                            fontWeight: 500,\n                                        }}\n                                    >\n                                        {this.state.teamSta.memberTotal}\n                                    </Typography>\n                                    <Typography\n                                        component=\"p\"\n                                        style={{\n                                            fontSize: \"0.75rem\",\n                                        }}\n                                    >\n                                        Total members\n                                    </Typography>\n                                </div>\n                            </Paper>\n                            <Paper\n                                style={{\n                                    background: \"none\",\n                                    border: \"none\",\n                                    boxShadow: \"none\",\n                                    display: \"flex\",\n                                }}\n                            >\n                                <div>\n                                    <span\n                                        style={{\n                                            height: \"10px\",\n                                            width: \"10px\",\n                                            backgroundColor: \"#65ca64\",\n                                            borderRadius: \"50%\",\n                                            display: \"inline-block\",\n                                            marginRight: \"3px\",\n                                        }}\n                                    />\n                                </div>\n                                <div>\n                                    <Typography\n                                        variant=\"headline\"\n                                        component=\"h4\"\n                                        style={{\n                                            fontSize: \"1.2rem\",\n                                            fontWeight: 500,\n                                        }}\n                                    >\n                                        {this.state.teamSta.activeMemberTotal}\n                                    </Typography>\n                                    <Typography\n                                        component=\"p\"\n                                        style={{\n                                            fontSize: \"0.75rem\",\n                                        }}\n                                    >\n                                        Active members\n                                    </Typography>\n                                </div>\n                            </Paper>\n                            <Paper\n                                style={{\n                                    background: \"none\",\n                                    border: \"none\",\n                                    boxShadow: \"none\",\n                                    display: \"flex\",\n                                }}\n                            >\n                                <div>\n                                    <span\n                                        style={{\n                                            height: \"10px\",\n                                            width: \"10px\",\n                                            backgroundColor: \"#f18429\",\n                                            borderRadius: \"50%\",\n                                            display: \"inline-block\",\n                                            marginRight: \"3px\",\n                                        }}\n                                    />\n                                </div>\n                                <div>\n                                    <Typography\n                                        variant=\"headline\"\n                                        component=\"h4\"\n                                        style={{\n                                            fontSize: \"1.2rem\",\n                                            fontWeight: 500,\n                                        }}\n                                    >\n                                        {this.toHourMinute(this.state.teamSta.activityTimeTotal)}\n                                    </Typography>\n                                    <Typography\n                                        component=\"p\"\n                                        style={{\n                                            fontSize: \"0.75rem\",\n                                        }}\n                                    >\n                                        Total active time\n                                    </Typography>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={1} />\n                    </Grid>\n\n                    <Grid\n                        container\n                        style={{\n                            boxShadow: \"2px 2px 2px 1px rgba(1, 92, 127, 0.44)\",\n                            backgroundColor: \"#ffffff\",\n                            borderRadius: \"5px\",\n                        }}\n                    >\n                        <Grid\n                            item\n                            xs={12}\n                            style={{\n                                justifyContent: \"Center\",\n                                display: \"flex\",\n                                backgroundColor: \"#2e7996\",\n                            }}\n                        >\n                            <Paper\n                                style={{\n                                    textAlign: \"center\",\n                                    backgroundColor: \"#2e7996\",\n                                    border: \"none\",\n                                }}\n                            >\n                                <span style={{ color: \"#ffffff\" }}>Record in details</span>\n                            </Paper>\n                        </Grid>\n                        {!(this.state.teamSta.runningDistanceTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img className=\"typeImg\" src={runningLogo} />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.state.teamSta.runningDistanceTotal}\n                                    </h5>\n                                    <div className=\"unit\">km</div>\n                                </div>\n                                <div className=\"typeTitle\">Running</div>\n                            </Grid>\n                        )}\n                        {!(this.state.teamSta.gymTimeTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img src={liftingLogo} className=\"typeImg\" />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.toHourMinute(this.state.teamSta.gymTimeTotal)}\n                                    </h5>\n                                    <div style={{ textAlign: \"center\" }} />\n                                </div>\n                                <div className=\"typeTitle\">Gym</div>\n                            </Grid>\n                        )}\n                        {!(this.state.teamSta.cyclingDistanceTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img src={distanceLogo} className=\"typeImg\" />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.state.teamSta.cyclingDistanceTotal}\n                                    </h5>\n                                    <div style={{ textAlign: \"center\" }}>km</div>\n                                </div>\n                                <div className=\"typeTitle\">Cycling</div>\n                            </Grid>\n                        )}\n                        {!(this.state.teamSta.meditationTimeTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img src={distanceLogo} className=\"typeImg\" />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.toHourMinute(this.state.teamSta.meditationTimeTotal)}\n                                    </h5>\n                                    <div style={{ textAlign: \"center\" }} />\n                                </div>\n                                <div className=\"typeTitle\">Meditation</div>\n                            </Grid>\n                        )}\n                        {!(this.state.teamSta.climbingTimeTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img src={distanceLogo} className=\"typeImg\" />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.toHourMinute(this.state.teamSta.climbingTimeTotal)}\n                                    </h5>\n                                    <div style={{ textAlign: \"center\" }} />\n                                </div>\n                                <div className=\"typeTitle\">Climbing</div>\n                            </Grid>\n                        )}\n                        {!(this.state.teamSta.skatingTimeTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img src={distanceLogo} className=\"typeImg\" />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.toHourMinute(this.state.teamSta.skatingTimeTotal)}\n                                    </h5>\n                                    <div style={{ textAlign: \"center\" }} />\n                                </div>\n                                <div className=\"typeTitle\">Skating</div>\n                            </Grid>\n                        )}\n                        {!(this.state.teamSta.swimmingTimeTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img src={distanceLogo} className=\"typeImg\" />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.toHourMinute(this.state.teamSta.swimmingTimeTotal)}\n                                    </h5>\n                                    <div style={{ textAlign: \"center\" }} />\n                                </div>\n                                <div className=\"typeTitle\">Swimming</div>\n                            </Grid>\n                        )}\n                        {!(this.state.teamSta.yogaTimeTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img src={distanceLogo} className=\"typeImg\" />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.toHourMinute(this.state.teamSta.yogaTimeTotal)}\n                                    </h5>\n                                    <div style={{ textAlign: \"center\" }} />\n                                </div>\n                                <div className=\"typeTitle\">Yoga</div>\n                            </Grid>\n                        )}\n                        {!(this.state.teamSta.hikingTimeTotal === \"0.0\") && (\n                            <Grid item xs={6} sm={6} className=\"typeGrid\">\n                                <div className=\"circleFig\">\n                                    <div className=\"typeImgDiv\">\n                                        <img src={distanceLogo} className=\"typeImg\" />\n                                    </div>\n                                    <h5 style={{ margin: \"auto\" }}>\n                                        {this.toHourMinute(this.state.teamSta.hikingTimeTotal)}\n                                    </h5>\n                                    <div style={{ textAlign: \"center\" }} />\n                                </div>\n                                <div className=\"typeTitle\">Hiking</div>\n                            </Grid>\n                        )}\n                        {!this.IsTeamActive(this.state.teamSta) && (\n                            <Grid\n                                item\n                                xs={12}\n                                style={{\n                                    justifyContent: \"Center\",\n                                    display: \"flex\",\n                                }}\n                            >\n                                <Paper style={{ textAlign: \"center\", backgroundColor: \"#ffffff\" }}>\n                                    <span style={{ color: \"#2e7996\" }}>\n                                        This team is not active during a given time interval\n                                    </span>\n                                </Paper>\n                            </Grid>\n                        )}\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TeamSta;\n"]}]}