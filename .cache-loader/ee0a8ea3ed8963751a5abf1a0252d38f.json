{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/pages/searchUser/index.tsx","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/pages/searchUser/index.tsx","mtime":1531995134059},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport UserShortInfo from \"../../components/userShortInfo/UserShortInfo\";\nimport { connect } from \"react-redux\";\nimport { searchUserActions } from \"../../data/searchUser/index\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./SearchUser.scss\";\nclass SearchUser extends React.Component {\n    // fetch user from server\n    componentDidMount() {\n        this.props.fetchUserList(this.props.match.params.username);\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.match.params.username !== nextProps.match.params.username) {\n            this.props.fetchUserList(nextProps.match.params.username);\n        }\n    }\n    render() {\n        let list = null;\n        if (this.props.userList === undefined || this.props.userList.length === 0) {\n            list = React.createElement(\"div\", { className: \"find-user-error\" }, \"No person found!!!\");\n        }\n        else {\n            list = (React.createElement(\"div\", { className: \"find-user-div\" }, this.props.userList.map((user) => {\n                return (React.createElement(Grid, { item: true, xs: 12, className: \"find-user-component\", key: user.accountId },\n                    React.createElement(UserShortInfo, { accountId: user.accountId, fullName: user.fullName, email: user.email, imageLink: user.imageLink })));\n            })));\n        }\n        return (React.createElement(Grid, { container: true, spacing: 16, className: \"find-user-grid\" }, list));\n    }\n}\n// specify exactly which slice of the state we want to provide to our component\nconst mapStateToProps = (state) => {\n    return {\n        userList: state.searchUser.list.data,\n    };\n};\n// map the action of redux to component prop\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUserList: (username) => {\n            dispatch(searchUserActions.fetchUserList(username));\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchUser);\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/pages/searchUser/index.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/pages/searchUser/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,aAAa,MAAM,8CAA8C,CAAC;AACzE,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAEhE,OAAO,IAAI,MAAM,wBAAwB,CAAC;AAC1C,OAAO,mBAAmB,CAAC;AAQ3B,gBAAiB,SAAQ,KAAK,CAAC,SAA4B;IACvD,yBAAyB;IACzB,iBAAiB;QACb,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC/D,CAAC;IAED,yBAAyB,CAAC,SAAwB;QAC9C,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;YACtE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC7D;IACL,CAAC;IAED,MAAM;QACF,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACvE,IAAI,GAAG,6BAAK,SAAS,EAAC,iBAAiB,yBAAyB,CAAC;SACpE;aAAM;YACH,IAAI,GAAG,CACH,6BAAK,SAAS,EAAC,eAAe,IACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAc,EAAE,EAAE;gBACxC,OAAO,CACH,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAC,qBAAqB,EAAC,GAAG,EAAE,IAAI,CAAC,SAAS;oBAClE,oBAAC,aAAa,IACV,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,SAAS,EAAE,IAAI,CAAC,SAAS,GAC3B,CACC,CACV,CAAC;YACN,CAAC,CAAC,CACA,CACT,CAAC;SACL;QACD,OAAO,CACH,oBAAC,IAAI,IAAC,SAAS,QAAC,OAAO,EAAE,EAAE,EAAE,SAAS,EAAC,gBAAgB,IAClD,IAAI,CACF,CACV,CAAC;IACN,CAAC;CACJ;AAED,+EAA+E;AAC/E,MAAM,eAAe,GAAG,CAAC,KAAU,EAAE,EAAE;IACnC,OAAO;QACH,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI;KACvC,CAAC;AACN,CAAC,CAAC;AAEF,4CAA4C;AAC5C,MAAM,kBAAkB,GAAG,CAAC,QAAa,EAAE,EAAE;IACzC,OAAO;QACH,aAAa,EAAE,CAAC,QAAgB,EAAE,EAAE;YAChC,QAAQ,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,CAAC;KACJ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,OAAO,CAClB,eAAe,EACf,kBAAkB,CACrB,CAAC,UAAU,CAAC,CAAC","sourcesContent":["import * as React from \"react\";\nimport * as Redux from \"redux\";\nimport UserShortInfo from \"../../components/userShortInfo/UserShortInfo\";\nimport { connect } from \"react-redux\";\nimport { searchUserActions } from \"../../data/searchUser/index\";\nimport { UserType } from \"../../data/searchUser/actionCreators\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./SearchUser.scss\";\n\ninterface UserListProps {\n    userList: UserType[];\n    fetchUserList: Redux.ActionCreator<{}>;\n    match: any;\n}\n\nclass SearchUser extends React.Component<UserListProps, {}> {\n    // fetch user from server\n    componentDidMount(): void {\n        this.props.fetchUserList(this.props.match.params.username);\n    }\n\n    componentWillReceiveProps(nextProps: UserListProps): void {\n        if (this.props.match.params.username !== nextProps.match.params.username) {\n            this.props.fetchUserList(nextProps.match.params.username);\n        }\n    }\n\n    render(): React.ReactNode {\n        let list = null;\n        if (this.props.userList === undefined || this.props.userList.length === 0) {\n            list = <div className=\"find-user-error\">No person found!!!</div>;\n        } else {\n            list = (\n                <div className=\"find-user-div\">\n                    {this.props.userList.map((user: UserType) => {\n                        return (\n                            <Grid item xs={12} className=\"find-user-component\" key={user.accountId}>\n                                <UserShortInfo\n                                    accountId={user.accountId}\n                                    fullName={user.fullName}\n                                    email={user.email}\n                                    imageLink={user.imageLink}\n                                />\n                            </Grid>\n                        );\n                    })}\n                </div>\n            );\n        }\n        return (\n            <Grid container spacing={16} className=\"find-user-grid\">\n                {list}\n            </Grid>\n        );\n    }\n}\n\n// specify exactly which slice of the state we want to provide to our component\nconst mapStateToProps = (state: any) => {\n    return {\n        userList: state.searchUser.list.data,\n    };\n};\n\n// map the action of redux to component prop\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        fetchUserList: (username: string) => {\n            dispatch(searchUserActions.fetchUserList(username));\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SearchUser);\n"]}]}