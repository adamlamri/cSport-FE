{"remainingRequest":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/containers/TeamActivities/TeamInformation/TeamDetails/MemberInfoDialog.tsx","dependencies":[{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/containers/TeamActivities/TeamInformation/TeamDetails/MemberInfoDialog.tsx","mtime":1532589499000},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1539584369385},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1539584369506},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport withMobileDialog from \"@material-ui/core/withMobileDialog\";\nimport ActivitiesByUser from \"src/containers/TeamActivities/TeamInformation/TeamDetails/ActivitiesByUser\";\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\nimport ImageAvatar from \"src/containers/layouts/appbar/list/ImageAvatar\";\nimport Grid from \"@material-ui/core/es/Grid/Grid\";\nimport DeleteUserDialog from \"src/containers/TeamActivities/TeamInformation/TeamDetails/DeleteUserDialog\";\nconst style = {\n    backgroundColor: \"#f5eeee73\",\n    width: \"100%\",\n    justifyContent: \"left\",\n};\nclass MemberInfoDialog extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            openMemberActivities: false,\n            openDeleteDialog: false,\n        };\n        this.deleteOption = this.props.hostId === localStorage.getItem(\"userId\");\n        this.handleClickOpen = () => {\n            this.setState({ openMemberActivities: true });\n        };\n        this.handleClose = () => {\n            this.setState({ openMemberActivities: false });\n        };\n    }\n    render() {\n        const { fullScreen } = this.props;\n        return (React.createElement(\"div\", null,\n            React.createElement(Grid, { container: true, spacing: 8, style: { backgroundColor: \"#f5eeee73\" } },\n                React.createElement(Grid, { item: true, xs: this.deleteOption ? 9 : 12 },\n                    React.createElement(Button, { onClick: this.handleClickOpen, variant: \"outlined\", \"aria-label\": \"delete\", style: style },\n                        React.createElement(Grid, { container: true, spacing: 16 },\n                            React.createElement(Grid, { item: true, xs: 3, style: { margin: \"auto\" } },\n                                React.createElement(ImageAvatar, { src: this.props.user.imageLink })),\n                            React.createElement(Grid, { item: true, xs: 9, style: { margin: \"auto\" } },\n                                React.createElement(Typography, { style: {\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }, variant: \"body2\", color: \"inherit\" }, this.props.user.fullName))))),\n                this.deleteOption && (React.createElement(Grid, { item: true, xs: 3, style: { margin: \"auto\" } },\n                    React.createElement(DeleteUserDialog, { accountId: this.props.user.accountId, teamId: this.props.teamId, refreshUsers: this.props.refreshUsers })))),\n            React.createElement(Dialog, { fullScreen: fullScreen, open: this.state.openMemberActivities, onClose: this.handleClose, maxWidth: \"md\" },\n                React.createElement(DialogTitle, { style: { backgroundColor: \"#015c7f\", textAlign: \"center\" } },\n                    React.createElement(Typography, { variant: \"title\", style: { color: \"#fff\" } }, \"List activities\")),\n                React.createElement(DialogContent, null,\n                    React.createElement(ActivitiesByUser, { accountId: this.props.user.accountId })),\n                React.createElement(DialogActions, null,\n                    React.createElement(Button, { onClick: this.handleClose, color: \"primary\", autoFocus: true }, \"Close\")))));\n    }\n}\nexport default withMobileDialog()(MemberInfoDialog);\n",{"version":3,"file":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/containers/TeamActivities/TeamInformation/TeamDetails/MemberInfoDialog.tsx","sourceRoot":"","sources":["/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/containers/TeamActivities/TeamInformation/TeamDetails/MemberInfoDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as Redux from \"redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport withMobileDialog from \"@material-ui/core/withMobileDialog\";\nimport ActivitiesByUser from \"src/containers/TeamActivities/TeamInformation/TeamDetails/ActivitiesByUser\";\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\nimport ImageAvatar from \"src/containers/layouts/appbar/list/ImageAvatar\";\nimport Grid from \"@material-ui/core/es/Grid/Grid\";\nimport DeleteUserDialog from \"src/containers/TeamActivities/TeamInformation/TeamDetails/DeleteUserDialog\";\nimport { UserOfTeamInterface } from \"src/data/team/ListUsersOfTeam/actionCreators\";\n\ninterface MemberInfoDialogProps {\n    fullScreen: any;\n    hostId: string;\n    teamId: string;\n    refreshUsers: Redux.ActionCreator<{}>;\n    user: UserOfTeamInterface;\n}\ninterface MemberInfoDialogState {\n    openMemberActivities: boolean;\n    openDeleteDialog: boolean;\n}\n\nconst style = {\n    backgroundColor: \"#f5eeee73\",\n    width: \"100%\",\n    justifyContent: \"left\",\n};\n\nclass MemberInfoDialog extends React.Component<MemberInfoDialogProps, MemberInfoDialogState> {\n    state = {\n        openMemberActivities: false,\n        openDeleteDialog: false,\n    };\n\n    private deleteOption = this.props.hostId === localStorage.getItem(\"userId\");\n\n    private handleClickOpen = (): void => {\n        this.setState({ openMemberActivities: true });\n    };\n\n    private handleClose = (): void => {\n        this.setState({ openMemberActivities: false });\n    };\n\n    render(): React.ReactNode {\n        const { fullScreen } = this.props;\n        return (\n            <div>\n                <Grid container spacing={8} style={{ backgroundColor: \"#f5eeee73\" }}>\n                    <Grid item xs={this.deleteOption ? 9 : 12}>\n                        <Button\n                            onClick={this.handleClickOpen}\n                            variant=\"outlined\"\n                            aria-label=\"delete\"\n                            style={style}\n                        >\n                            <Grid container spacing={16}>\n                                <Grid item xs={3} style={{ margin: \"auto\" }}>\n                                    <ImageAvatar src={this.props.user.imageLink} />\n                                </Grid>\n                                <Grid item xs={9} style={{ margin: \"auto\" }}>\n                                    <Typography\n                                        style={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                        }}\n                                        variant=\"body2\"\n                                        color=\"inherit\"\n                                    >\n                                        {this.props.user.fullName}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Button>\n                    </Grid>\n\n                    {this.deleteOption && (\n                        <Grid item xs={3} style={{ margin: \"auto\" }}>\n                            <DeleteUserDialog\n                                accountId={this.props.user.accountId}\n                                teamId={this.props.teamId}\n                                refreshUsers={this.props.refreshUsers}\n                            />\n                        </Grid>\n                    )}\n                </Grid>\n\n                <Dialog\n                    fullScreen={fullScreen}\n                    open={this.state.openMemberActivities}\n                    onClose={this.handleClose}\n                    maxWidth=\"md\"\n                >\n                    <DialogTitle style={{ backgroundColor: \"#015c7f\", textAlign: \"center\" }}>\n                        <Typography variant=\"title\" style={{ color: \"#fff\" }}>\n                            List activities\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent>\n                        <ActivitiesByUser accountId={this.props.user.accountId} />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withMobileDialog<MemberInfoDialogProps>()(MemberInfoDialog);\n"]}]}