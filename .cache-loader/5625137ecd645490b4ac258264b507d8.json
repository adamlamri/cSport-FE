{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/competition/actions.ts","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/competition/actions.ts","mtime":1532010673940},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport axios from \"~/common/axiosConfigure\";\nimport actionCreators from \"./actionCreators\";\n// merge all actions into a completed process\nexport const fetchCompetitions = (userId) => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.competitionFetchRequested());\n    try {\n        const competitions = yield axios\n            .get(`/competition?accountId=${userId}`)\n            .then(response => response.data);\n        return dispatch(actionCreators.competitionFetchFulfilled(competitions));\n    }\n    catch (error) {\n        dispatch(actionCreators.competitionFetchRejected(error));\n    }\n});\nexport default {\n    fetchCompetitions,\n};\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/competition/actions.ts","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/data/competition/actions.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAC5C,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,6CAA6C;AAC7C,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,CAAO,QAAa,EAAE,EAAE;IACzE,QAAQ,CAAC,cAAc,CAAC,yBAAyB,EAAE,CAAC,CAAC;IACrD,IAAI;QACA,MAAM,YAAY,GAAG,MAAM,KAAK;aAC3B,GAAG,CAAC,0BAA0B,MAAM,EAAE,CAAC;aACvC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,QAAQ,CAAC,cAAc,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC,CAAC;KAC3E;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC5D;AACL,CAAC,CAAA,CAAC;AAEF,eAAe;IACX,iBAAiB;CACpB,CAAC","sourcesContent":["import axios from \"~/common/axiosConfigure\";\nimport actionCreators from \"./actionCreators\";\n\n// merge all actions into a completed process\nexport const fetchCompetitions = (userId: string) => async (dispatch: any) => {\n    dispatch(actionCreators.competitionFetchRequested());\n    try {\n        const competitions = await axios\n            .get(`/competition?accountId=${userId}`)\n            .then(response => response.data);\n        return dispatch(actionCreators.competitionFetchFulfilled(competitions));\n    } catch (error) {\n        dispatch(actionCreators.competitionFetchRejected(error));\n    }\n};\n\nexport default {\n    fetchCompetitions,\n};\n"]}]}