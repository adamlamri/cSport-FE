{"remainingRequest":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/team/actions.ts","dependencies":[{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/team/actions.ts","mtime":1532010673000},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1539584369385},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1539584369506},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport axios from \"~/common/axiosConfigure\";\nimport actionCreators from \"./actionCreators\";\n// merge all actions into a completed process\nexport const fetchCreatedTeams = (userId) => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.teamCreatedFetchRequested());\n    try {\n        const teams = yield axios\n            .get(`/teams/created?accountId=${userId}`)\n            .then(response => response.data);\n        return dispatch(actionCreators.teamCreatedFetchFulfilled(teams));\n    }\n    catch (error) {\n        dispatch(actionCreators.teamCreatedFetchRejected(error));\n    }\n});\nexport const fetchJoinedTeams = (userId) => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.teamJoinedFetchRequested());\n    try {\n        const teams = yield axios\n            .get(`/teams/joined?accountId=${userId}`)\n            .then(response => response.data);\n        return dispatch(actionCreators.teamJoinedFetchFulfilled(teams));\n    }\n    catch (error) {\n        dispatch(actionCreators.teamJoinedFetchRejected(error));\n    }\n});\nexport default {\n    fetchCreatedTeams,\n    fetchJoinedTeams,\n};\n",{"version":3,"file":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/team/actions.ts","sourceRoot":"","sources":["/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/team/actions.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAC5C,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,6CAA6C;AAC7C,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,CAAO,QAAa,EAAE,EAAE;IACzE,QAAQ,CAAC,cAAc,CAAC,yBAAyB,EAAE,CAAC,CAAC;IACrD,IAAI;QACA,MAAM,KAAK,GAAG,MAAM,KAAK;aACpB,GAAG,CAAC,4BAA4B,MAAM,EAAE,CAAC;aACzC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,QAAQ,CAAC,cAAc,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC;KACpE;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC5D;AACL,CAAC,CAAA,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,CAAO,QAAa,EAAE,EAAE;IACxE,QAAQ,CAAC,cAAc,CAAC,wBAAwB,EAAE,CAAC,CAAC;IACpD,IAAI;QACA,MAAM,KAAK,GAAG,MAAM,KAAK;aACpB,GAAG,CAAC,2BAA2B,MAAM,EAAE,CAAC;aACxC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC;KACnE;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC3D;AACL,CAAC,CAAA,CAAC;AAEF,eAAe;IACX,iBAAiB;IACjB,gBAAgB;CACnB,CAAC","sourcesContent":["import axios from \"~/common/axiosConfigure\";\nimport actionCreators from \"./actionCreators\";\n\n// merge all actions into a completed process\nexport const fetchCreatedTeams = (userId: string) => async (dispatch: any) => {\n    dispatch(actionCreators.teamCreatedFetchRequested());\n    try {\n        const teams = await axios\n            .get(`/teams/created?accountId=${userId}`)\n            .then(response => response.data);\n        return dispatch(actionCreators.teamCreatedFetchFulfilled(teams));\n    } catch (error) {\n        dispatch(actionCreators.teamCreatedFetchRejected(error));\n    }\n};\n\nexport const fetchJoinedTeams = (userId: string) => async (dispatch: any) => {\n    dispatch(actionCreators.teamJoinedFetchRequested());\n    try {\n        const teams = await axios\n            .get(`/teams/joined?accountId=${userId}`)\n            .then(response => response.data);\n        return dispatch(actionCreators.teamJoinedFetchFulfilled(teams));\n    } catch (error) {\n        dispatch(actionCreators.teamJoinedFetchRejected(error));\n    }\n};\n\nexport default {\n    fetchCreatedTeams,\n    fetchJoinedTeams,\n};\n"]}]}