{"remainingRequest":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/data/user/actions.ts","dependencies":[{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/data/user/actions.ts","mtime":1532010673945},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport actionCreators from \"./actionCreators\";\nimport axios from \"~/common/axiosConfigure\";\n// merge all action into a completed process\nexport const fetchUser = () => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    dispatch(actionCreators.userFetchRequested);\n    try {\n        const users = yield axios\n            .get(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => {\n            const list = response.data.splice(0, 3);\n            return list;\n        });\n        return dispatch(actionCreators.userFetchFulfilled(users));\n    }\n    catch (error) {\n        dispatch(actionCreators.userFetchRejected(error));\n    }\n});\nexport default {\n    fetchUser,\n};\n",{"version":3,"file":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/data/user/actions.ts","sourceRoot":"","sources":["/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/data/user/actions.ts"],"names":[],"mappings":";AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,KAAK,MAAM,yBAAyB,CAAC;AAE5C,4CAA4C;AAC5C,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,CAAO,QAAa,EAAE,EAAE;IACnD,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;IAC5C,IAAI;QACA,MAAM,KAAK,GAAG,MAAM,KAAK;aACpB,GAAG,CAAC,4CAA4C,CAAC;aACjD,IAAI,CAAC,QAAQ,CAAC,EAAE;YACb,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACP,OAAO,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC7D;IAAC,OAAO,KAAK,EAAE;QACZ,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;KACrD;AACL,CAAC,CAAA,CAAC;AAEF,eAAe;IACX,SAAS;CACZ,CAAC","sourcesContent":["import actionCreators from \"./actionCreators\";\nimport axios from \"~/common/axiosConfigure\";\n\n// merge all action into a completed process\nexport const fetchUser = () => async (dispatch: any) => {\n    dispatch(actionCreators.userFetchRequested);\n    try {\n        const users = await axios\n            .get(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => {\n                const list = response.data.splice(0, 3);\n                return list;\n            });\n        return dispatch(actionCreators.userFetchFulfilled(users));\n    } catch (error) {\n        dispatch(actionCreators.userFetchRejected(error));\n    }\n};\n\nexport default {\n    fetchUser,\n};\n"]}]}