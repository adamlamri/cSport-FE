{"remainingRequest":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/TeamActivities/TeamInformation/QRDialog.tsx","dependencies":[{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/TeamActivities/TeamInformation/QRDialog.tsx","mtime":1532681924901},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport Button from \"@material-ui/core/es/Button/Button\";\nconst QRCode = require(\"qrcode.react\");\n\"qrcode.react\";\nclass QRDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.setState({ isOpen: false });\n        };\n        this.handleClick = () => {\n            this.setState({ isOpen: true });\n        };\n        this.state = {\n            isOpen: false,\n            link: `${process.env.FRONT_END_LOCAL_HOST_URL}/showTeamUsers/${this.props.teamId}`,\n        };\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"DivContainButton\" },\n            React.createElement(Button, { onClick: this.handleClick }, \"Scan QR\"),\n            React.createElement(Dialog, { open: this.state.isOpen, onClose: this.handleClose, \"aria-labelledby\": \"responsive-dialog-title\" },\n                React.createElement(\"div\", { style: {\n                        width: \"280px\",\n                        height: \"280px\",\n                        backgroundColor: \"#ffffff\",\n                        justifyContent: \"center\",\n                        display: \"flex\",\n                    } },\n                    React.createElement(QRCode, { value: this.state.link, size: 230, style: { margin: \"auto\" } })))));\n    }\n}\nexport default QRDialog;\n",{"version":3,"file":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/TeamActivities/TeamInformation/QRDialog.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/TeamActivities/TeamInformation/QRDialog.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,MAAM,MAAM,iCAAiC,CAAC;AACrD,OAAO,MAAM,MAAM,oCAAoC,CAAC;AACxD,MAAM,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAEvC,cAAc,CAAC;AAQf,cAAe,SAAQ,KAAK,CAAC,SAAuC;IAChE,YAAY,KAAoB;QAC5B,KAAK,CAAC,KAAK,CAAC,CAAC;QA8BT,gBAAW,GAAG,GAAS,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC;QACM,gBAAW,GAAG,GAAS,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC;QAlCE,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,wBAAwB,kBAAkB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;SACrF,CAAC;IACN,CAAC;IACD,MAAM;QACF,OAAO,CACH,6BAAK,SAAS,EAAC,kBAAkB;YAC7B,oBAAC,MAAM,IAAC,OAAO,EAAE,IAAI,CAAC,WAAW,cAAkB;YACnD,oBAAC,MAAM,IACH,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACvB,OAAO,EAAE,IAAI,CAAC,WAAW,qBACT,yBAAyB;gBAEzC,6BACI,KAAK,EAAE;wBACH,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,OAAO;wBACf,eAAe,EAAE,SAAS;wBAC1B,cAAc,EAAE,QAAQ;wBACxB,OAAO,EAAE,MAAM;qBAClB;oBAED,oBAAC,MAAM,IAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,GAAI,CACtE,CACD,CACP,CACT,CAAC;IACN,CAAC;CAOJ;AACD,eAAe,QAAQ,CAAC","sourcesContent":["import * as React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport Button from \"@material-ui/core/es/Button/Button\";\nconst QRCode = require(\"qrcode.react\");\n\n\"qrcode.react\";\ninterface QRDialogProps {\n    teamId: string;\n}\ninterface QRDialogState {\n    isOpen: boolean;\n    link: string;\n}\nclass QRDialog extends React.Component<QRDialogProps, QRDialogState> {\n    constructor(props: QRDialogProps) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            link: `${process.env.FRONT_END_LOCAL_HOST_URL}/showTeamUsers/${this.props.teamId}`,\n        };\n    }\n    render(): React.ReactNode {\n        return (\n            <div className=\"DivContainButton\">\n                <Button onClick={this.handleClick}>Scan QR</Button>\n                <Dialog\n                    open={this.state.isOpen}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"responsive-dialog-title\"\n                >\n                    <div\n                        style={{\n                            width: \"280px\",\n                            height: \"280px\",\n                            backgroundColor: \"#ffffff\",\n                            justifyContent: \"center\",\n                            display: \"flex\",\n                        }}\n                    >\n                        <QRCode value={this.state.link} size={230} style={{ margin: \"auto\" }} />\n                    </div>\n                </Dialog>\n            </div>\n        );\n    }\n    private handleClose = (): void => {\n        this.setState({ isOpen: false });\n    };\n    private handleClick = (): void => {\n        this.setState({ isOpen: true });\n    };\n}\nexport default QRDialog;\n"]}]}