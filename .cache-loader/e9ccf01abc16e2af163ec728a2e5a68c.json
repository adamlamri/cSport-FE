{"remainingRequest":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/UserProfile/UserProfile.tsx","dependencies":[{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/UserProfile/UserProfile.tsx","mtime":1532604758809},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUserProfile } from \"~/data/userProfile/thunk\";\nimport { order } from \"~/data/reducerHelper\";\nimport Profile from \"~/components/Profile/Profile\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\nimport Tab from \"@material-ui/core/Tab/Tab\";\nimport \"~/components/Profile/Profile.scss\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Statistic from \"~/components/Profile/Statistic\";\nimport Icon from \"@material-ui/core/Icon/Icon\";\nimport EditProfileDialog from \"~/containers/UserProfile/EditProfileDialog\";\nfunction TabContainer(props) {\n    return (React.createElement(Typography, { component: \"div\", style: { paddingTop: \"24px\" } }, props.children));\n}\nclass UserProfile extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            value: 0,\n        };\n        this.handleChange = (event, value) => {\n            if (event) {\n                this.setState({ value });\n            }\n        };\n        this.modalRef = React.createRef();\n        this.handleClickEdit = () => {\n            if (this.modalRef.current) {\n                this.modalRef.current.handleClickOpen();\n            }\n        };\n        this.handleChangeIndex = (index) => {\n            this.setState({ value: index });\n        };\n    }\n    componentDidMount() {\n        this.props.fetchUserProfile(this.props.match.params.id);\n    }\n    render() {\n        let elements = React.createElement(\"div\", null, \"Nothing in here!\");\n        const currentUserId = this.props.currentUser ? this.props.currentUser.accountId : \"1\";\n        if (this.props.userProfile.length > 0) {\n            const profile = this.props.userProfile[0];\n            elements = (React.createElement(\"div\", { className: \"scale\" },\n                React.createElement(\"div\", { className: \"body\" },\n                    React.createElement(\"div\", { className: \"panel-heading-no-title\" }, profile.accountId === currentUserId && (React.createElement(\"div\", { className: \"icon-edit\", onClick: this.handleClickEdit },\n                        React.createElement(Icon, null, \"edit\")))),\n                    React.createElement(\"div\", { className: \"panel-body\" },\n                        React.createElement(\"div\", { className: \"avatar\" },\n                            React.createElement(\"img\", { alt: \"example image\", src: profile.imageLink })),\n                        React.createElement(\"h2\", { className: \"name\" }, profile.fullName),\n                        React.createElement(\"p\", { className: \"description\" }, profile.introduction))),\n                React.createElement(EditProfileDialog, { profile: profile, ref: this.modalRef }),\n                React.createElement(\"div\", { className: \"root\" },\n                    React.createElement(AppBar, { position: \"static\", color: \"default\" },\n                        React.createElement(Tabs, { value: this.state.value, onChange: this.handleChange, indicatorColor: \"primary\", textColor: \"primary\", fullWidth: true },\n                            React.createElement(Tab, { label: \"Profile\", style: { width: \"50%\", maxWidth: \"none\" } }),\n                            React.createElement(Tab, { label: \"Statistic\", style: { width: \"50%\", maxWidth: \"none\" } }))),\n                    React.createElement(SwipeableViews, { index: this.state.value, onChangeIndex: this.handleChangeIndex },\n                        React.createElement(TabContainer, null,\n                            React.createElement(\"div\", null,\n                                React.createElement(Profile, { id: profile.id, accountId: profile.accountId, profileId: profile.profileId, imageLink: profile.imageLink, fullName: profile.fullName, introduction: profile.introduction, createdDate: profile.createdDate, status: profile.status, hobbies: profile.hobbies }))),\n                        React.createElement(TabContainer, null,\n                            React.createElement(\"div\", null,\n                                React.createElement(Statistic, { userId: this.props.match.params.id })))))));\n        }\n        return React.createElement(\"div\", null, elements);\n    }\n}\nconst mapStateToProps = (state) => ({\n    userProfile: order(state.userProfile.entitiesOrder, state.userProfile.entities),\n    currentUser: state.currentUser.currentUser,\n});\nconst mapDispatchToProps = {\n    fetchUserProfile,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\n",{"version":3,"file":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/UserProfile/UserProfile.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/containers/UserProfile/UserProfile.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAC7C,OAAO,OAAO,MAAM,8BAA8B,CAAC;AAGnD,OAAO,UAAU,MAAM,yCAAyC,CAAC;AACjE,OAAO,MAAM,MAAM,iCAAiC,CAAC;AACrD,OAAO,IAAI,MAAM,6BAA6B,CAAC;AAC/C,OAAO,GAAG,MAAM,2BAA2B,CAAC;AAC5C,OAAO,mCAAmC,CAAC;AAC3C,OAAO,cAAc,MAAM,uBAAuB,CAAC;AACnD,OAAO,SAAS,MAAM,gCAAgC,CAAC;AACvD,OAAO,IAAI,MAAM,6BAA6B,CAAC;AAC/C,OAAO,iBAAiB,MAAM,4CAA4C,CAAC;AAgB3E,sBAAsB,KAAU;IAC5B,OAAO,CACH,oBAAC,UAAU,IAAC,SAAS,EAAC,KAAK,EAAC,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,IACpD,KAAK,CAAC,QAAQ,CACN,CAChB,CAAC;AACN,CAAC;AAGD,iBAAkB,SAAQ,KAAK,CAAC,SAAqB;IAArD;;QACI,UAAK,GAAG;YACJ,KAAK,EAAE,CAAC;SACX,CAAC;QACF,iBAAY,GAAG,CAAC,KAA4B,EAAE,KAAa,EAAQ,EAAE;YACjE,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;aAC5B;QACL,CAAC,CAAC;QACF,aAAQ,GAAuC,KAAK,CAAC,SAAS,EAAqB,CAAC;QACpF,oBAAe,GAAG,GAAS,EAAE;YACzB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;aAC3C;QACL,CAAC,CAAC;QACF,sBAAiB,GAAG,CAAC,KAAa,EAAQ,EAAE;YACxC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC;IAwEN,CAAC;IAvEG,iBAAiB;QACb,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC5D,CAAC;IACD,MAAM;QACF,IAAI,QAAQ,GAAG,oDAA2B,CAAC;QAC3C,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;QACtF,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACnC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC1C,QAAQ,GAAG,CACP,6BAAK,SAAS,EAAC,OAAO;gBAClB,6BAAK,SAAS,EAAC,MAAM;oBACjB,6BAAK,SAAS,EAAC,wBAAwB,IAClC,OAAO,CAAC,SAAS,KAAK,aAAa,IAAI,CACpC,6BAAK,SAAS,EAAC,WAAW,EAAC,OAAO,EAAE,IAAI,CAAC,eAAe;wBACpD,oBAAC,IAAI,eAAY,CACf,CACT,CACC;oBACN,6BAAK,SAAS,EAAC,YAAY;wBACvB,6BAAK,SAAS,EAAC,QAAQ;4BACnB,6BAAK,GAAG,EAAC,eAAe,EAAC,GAAG,EAAE,OAAO,CAAC,SAAS,GAAI,CACjD;wBACN,4BAAI,SAAS,EAAC,MAAM,IAAE,OAAO,CAAC,QAAQ,CAAM;wBAC5C,2BAAG,SAAS,EAAC,aAAa,IAAE,OAAO,CAAC,YAAY,CAAK,CACnD,CACJ;gBACN,oBAAC,iBAAiB,IAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAI;gBAC3D,6BAAK,SAAS,EAAC,MAAM;oBACjB,oBAAC,MAAM,IAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,SAAS;wBACrC,oBAAC,IAAI,IACD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,cAAc,EAAC,SAAS,EACxB,SAAS,EAAC,SAAS,EACnB,SAAS;4BAET,oBAAC,GAAG,IAAC,KAAK,EAAC,SAAS,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAI;4BAClE,oBAAC,GAAG,IAAC,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAI,CACjE,CACF;oBACT,oBAAC,cAAc,IACX,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,aAAa,EAAE,IAAI,CAAC,iBAAiB;wBAErC,oBAAC,YAAY;4BACT;gCACI,oBAAC,OAAO,IACJ,EAAE,EAAE,OAAO,CAAC,EAAE,EACd,SAAS,EAAE,OAAO,CAAC,SAAS,EAC5B,SAAS,EAAE,OAAO,CAAC,SAAS,EAC5B,SAAS,EAAE,OAAO,CAAC,SAAS,EAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAC1B,YAAY,EAAE,OAAO,CAAC,YAAY,EAClC,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,MAAM,EAAE,OAAO,CAAC,MAAM,EACtB,OAAO,EAAE,OAAO,CAAC,OAAO,GAC1B,CACA,CACK;wBACf,oBAAC,YAAY;4BACT;gCACI,oBAAC,SAAS,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,GAAI,CAC/C,CACK,CACF,CACf,CACJ,CACT,CAAC;SACL;QACD,OAAO,iCAAM,QAAQ,CAAO,CAAC;IACjC,CAAC;CACJ;AACD,MAAM,eAAe,GAAG,CAAC,KAAiB,EAAe,EAAE,CAAC,CAAC;IACzD,WAAW,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC/E,WAAW,EAAE,KAAK,CAAC,WAAW,CAAC,WAAW;CAC7C,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG;IACvB,gBAAgB;CACnB,CAAC;AAEF,eAAe,OAAO,CAClB,eAAe,EACf,kBAAkB,CACrB,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { IUserProfile } from \"~/data/userProfile/types\";\nimport { fetchUserProfile } from \"~/data/userProfile/thunk\";\nimport { IRootState } from \"~/data/types\";\nimport { order } from \"~/data/reducerHelper\";\nimport Profile from \"~/components/Profile/Profile\";\nimport { RouteComponentProps } from \"react-router\";\nimport { CurrentUser } from \"~/data/auth/actions\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\nimport Tab from \"@material-ui/core/Tab/Tab\";\nimport \"~/components/Profile/Profile.scss\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Statistic from \"~/components/Profile/Statistic\";\nimport Icon from \"@material-ui/core/Icon/Icon\";\nimport EditProfileDialog from \"~/containers/UserProfile/EditProfileDialog\";\n\ninterface IOwnProps {}\n\ninterface IStateProps {\n    userProfile: IUserProfile[];\n    currentUser: CurrentUser;\n}\n\ninterface IDispatchProps {\n    fetchUserProfile: typeof fetchUserProfile;\n}\n\ninterface IParams {\n    id: string;\n}\nfunction TabContainer(props: any) {\n    return (\n        <Typography component=\"div\" style={{ paddingTop: \"24px\" }}>\n            {props.children}\n        </Typography>\n    );\n}\ninterface IProps extends IOwnProps, IStateProps, IDispatchProps, RouteComponentProps<IParams> {}\n\nclass UserProfile extends React.Component<IProps, {}> {\n    state = {\n        value: 0,\n    };\n    handleChange = (event: React.ChangeEvent<{}>, value: number): void => {\n        if (event) {\n            this.setState({ value });\n        }\n    };\n    modalRef: React.RefObject<EditProfileDialog> = React.createRef<EditProfileDialog>();\n    handleClickEdit = (): void => {\n        if (this.modalRef.current) {\n            this.modalRef.current.handleClickOpen();\n        }\n    };\n    handleChangeIndex = (index: number): void => {\n        this.setState({ value: index });\n    };\n    componentDidMount() {\n        this.props.fetchUserProfile(this.props.match.params.id);\n    }\n    render() {\n        let elements = <div>Nothing in here!</div>;\n        const currentUserId = this.props.currentUser ? this.props.currentUser.accountId : \"1\";\n        if (this.props.userProfile.length > 0) {\n            const profile = this.props.userProfile[0];\n            elements = (\n                <div className=\"scale\">\n                    <div className=\"body\">\n                        <div className=\"panel-heading-no-title\">\n                            {profile.accountId === currentUserId && (\n                                <div className=\"icon-edit\" onClick={this.handleClickEdit}>\n                                    <Icon>edit</Icon>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"panel-body\">\n                            <div className=\"avatar\">\n                                <img alt=\"example image\" src={profile.imageLink} />\n                            </div>\n                            <h2 className=\"name\">{profile.fullName}</h2>\n                            <p className=\"description\">{profile.introduction}</p>\n                        </div>\n                    </div>\n                    <EditProfileDialog profile={profile} ref={this.modalRef} />\n                    <div className=\"root\">\n                        <AppBar position=\"static\" color=\"default\">\n                            <Tabs\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                fullWidth\n                            >\n                                <Tab label=\"Profile\" style={{ width: \"50%\", maxWidth: \"none\" }} />\n                                <Tab label=\"Statistic\" style={{ width: \"50%\", maxWidth: \"none\" }} />\n                            </Tabs>\n                        </AppBar>\n                        <SwipeableViews\n                            index={this.state.value}\n                            onChangeIndex={this.handleChangeIndex}\n                        >\n                            <TabContainer>\n                                <div>\n                                    <Profile\n                                        id={profile.id}\n                                        accountId={profile.accountId}\n                                        profileId={profile.profileId}\n                                        imageLink={profile.imageLink}\n                                        fullName={profile.fullName}\n                                        introduction={profile.introduction}\n                                        createdDate={profile.createdDate}\n                                        status={profile.status}\n                                        hobbies={profile.hobbies}\n                                    />\n                                </div>\n                            </TabContainer>\n                            <TabContainer>\n                                <div>\n                                    <Statistic userId={this.props.match.params.id} />\n                                </div>\n                            </TabContainer>\n                        </SwipeableViews>\n                    </div>\n                </div>\n            );\n        }\n        return <div>{elements}</div>;\n    }\n}\nconst mapStateToProps = (state: IRootState): IStateProps => ({\n    userProfile: order(state.userProfile.entitiesOrder, state.userProfile.entities),\n    currentUser: state.currentUser.currentUser,\n});\n\nconst mapDispatchToProps = {\n    fetchUserProfile,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(UserProfile);\n"]}]}