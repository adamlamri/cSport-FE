{"remainingRequest":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/common/util.ts","dependencies":[{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/common/util.ts","mtime":1532681547495},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["const moment = require(\"moment\");\n/** This function will return date - time format like: 2018-06-15T18:47 (yyyy-MM-ddTHH:mm) in current date */\nexport const today = () => {\n    return moment().format(\"YYYY-MM-DDTHH:mm\");\n};\n/** This function will return dateTime time format like: 2018-06-15T18:47 (yyyy-MM-ddTHH:mm) from a Date object */\nexport const getDateInString = (date) => {\n    return moment(date).format(\"YYYY-MM-DDTHH:mm\");\n};\n/**\n * This function will format a number to a 'two-digit number' string. e.g: 8->08; 10->10\n * @param num number to format\n */\nexport const padZero = (num) => {\n    // Get two characters from the last element of the char array.\n    return (\"0\" + num).slice(-2);\n};\nexport const isAPositiveNumber = (str) => {\n    const num = Number(str);\n    return !isNaN(num) && num > 0;\n};\nexport const parseToHourAndMinute = (str) => {\n    const hour = Math.floor(Number(str) / 3600);\n    const minute = Math.floor((Number(str) - hour * 3600) / 60);\n    return hour + \" : \" + minute;\n};\n",{"version":3,"file":"/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/common/util.ts","sourceRoot":"","sources":["/Users/spectre/Desktop/Aptech-softech/sportstracker-fe/src/common/util.ts"],"names":[],"mappings":"AAAA,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,6GAA6G;AAC7G,MAAM,CAAC,MAAM,KAAK,GAAG,GAAW,EAAE;IAC9B,OAAO,MAAM,EAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,kHAAkH;AAClH,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,IAAU,EAAU,EAAE;IAClD,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,GAAW,EAAU,EAAE;IAC3C,8DAA8D;IAC9D,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,GAAW,EAAE,EAAE;IAC7C,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IACxB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,GAAW,EAAE,EAAE;IAChD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5D,OAAO,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;AACjC,CAAC,CAAC","sourcesContent":["const moment = require(\"moment\");\n/** This function will return date - time format like: 2018-06-15T18:47 (yyyy-MM-ddTHH:mm) in current date */\nexport const today = (): string => {\n    return moment().format(\"YYYY-MM-DDTHH:mm\");\n};\n\n/** This function will return dateTime time format like: 2018-06-15T18:47 (yyyy-MM-ddTHH:mm) from a Date object */\nexport const getDateInString = (date: Date): string => {\n    return moment(date).format(\"YYYY-MM-DDTHH:mm\");\n};\n\n/**\n * This function will format a number to a 'two-digit number' string. e.g: 8->08; 10->10\n * @param num number to format\n */\nexport const padZero = (num: Number): string => {\n    // Get two characters from the last element of the char array.\n    return (\"0\" + num).slice(-2);\n};\n\nexport const isAPositiveNumber = (str: string) => {\n    const num = Number(str);\n    return !isNaN(num) && num > 0;\n};\n\nexport const parseToHourAndMinute = (str: string) => {\n    const hour = Math.floor(Number(str) / 3600);\n    const minute = Math.floor((Number(str) - hour * 3600) / 60);\n    return hour + \" : \" + minute;\n};\n"]}]}