{"remainingRequest":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/pages/userExample/User.tsx","dependencies":[{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/pages/userExample/User.tsx","mtime":1529561286000},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1539584369385},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1539584369506},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport User from \"../../components/userExample/User\";\nimport NewUser from \"../../containers/NewUser\";\nimport { connect } from \"react-redux\";\nimport { userActions } from \"../../data/user/index\";\nclass UserList extends React.Component {\n    // fetch user from server\n    componentDidMount() {\n        this.props.fetchUser();\n    }\n    render() {\n        let list = null;\n        if (this.props.userList.length === 0) {\n            list = React.createElement(\"div\", null, \"No data found\");\n        }\n        else {\n            list = (React.createElement(\"div\", { style: { display: \"flex\" } }, this.props.userList.map((user) => {\n                return (React.createElement(User, { key: user.id, name: user.name, username: user.username, email: user.email, website: user.website }));\n            })));\n        }\n        return (React.createElement(\"div\", null,\n            list,\n            React.createElement(NewUser, null)));\n    }\n}\n// specify exactly which slice of the state we want to provide to our component\nconst mapStateToProps = (state) => {\n    return {\n        userList: state.user.list,\n    };\n};\n// map the action of redux to component prop\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUser: () => {\n            dispatch(userActions.fetchUser());\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n",{"version":3,"file":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/pages/userExample/User.tsx","sourceRoot":"","sources":["/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/pages/userExample/User.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,IAAI,MAAM,mCAAmC,CAAC;AACrD,OAAO,OAAO,MAAM,0BAA0B,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAoBpD,cAAe,SAAQ,KAAK,CAAC,SAA4B;IACrD,yBAAyB;IACzB,iBAAiB;QACb,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAC3B,CAAC;IACD,MAAM;QACF,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,IAAI,GAAG,iDAAwB,CAAC;SACnC;aAAM;YACH,IAAI,GAAG,CACH,6BAAK,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,IAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAc,EAAE,EAAE;gBACxC,OAAO,CACH,oBAAC,IAAI,IACD,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,IAAI,CAAC,OAAO,GACvB,CACL,CAAC;YACN,CAAC,CAAC,CACA,CACT,CAAC;SACL;QACD,OAAO,CACH;YACK,IAAI;YACL,oBAAC,OAAO,OAAG,CACT,CACT,CAAC;IACN,CAAC;CACJ;AAED,+EAA+E;AAC/E,MAAM,eAAe,GAAG,CAAC,KAAoB,EAAE,EAAE;IAC7C,OAAO;QACH,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI;KAC5B,CAAC;AACN,CAAC,CAAC;AAEF,4CAA4C;AAC5C,MAAM,kBAAkB,GAAG,CAAC,QAAa,EAAE,EAAE;IACzC,OAAO;QACH,SAAS,EAAE,GAAG,EAAE;YACZ,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC;QACtC,CAAC;KACJ,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,OAAO,CAClB,eAAe,EACf,kBAAkB,CACrB,CAAC,QAAQ,CAAC,CAAC","sourcesContent":["import * as React from \"react\";\nimport * as Redux from \"redux\";\nimport User from \"../../components/userExample/User\";\nimport NewUser from \"../../containers/NewUser\";\nimport { connect } from \"react-redux\";\nimport { userActions } from \"../../data/user/index\";\n\ninterface UserType {\n    id: string;\n    name: string;\n    username: string;\n    email: string;\n    website: string;\n}\n\ninterface UserListState {\n    user: {\n        list: UserType[];\n    };\n}\n\ninterface UserListProps {\n    userList: UserType[];\n    fetchUser: Redux.ActionCreator<{}>;\n}\nclass UserList extends React.Component<UserListProps, {}> {\n    // fetch user from server\n    componentDidMount(): void {\n        this.props.fetchUser();\n    }\n    render(): React.ReactNode {\n        let list = null;\n        if (this.props.userList.length === 0) {\n            list = <div>No data found</div>;\n        } else {\n            list = (\n                <div style={{ display: \"flex\" }}>\n                    {this.props.userList.map((user: UserType) => {\n                        return (\n                            <User\n                                key={user.id}\n                                name={user.name}\n                                username={user.username}\n                                email={user.email}\n                                website={user.website}\n                            />\n                        );\n                    })}\n                </div>\n            );\n        }\n        return (\n            <div>\n                {list}\n                <NewUser />\n            </div>\n        );\n    }\n}\n\n// specify exactly which slice of the state we want to provide to our component\nconst mapStateToProps = (state: UserListState) => {\n    return {\n        userList: state.user.list,\n    };\n};\n\n// map the action of redux to component prop\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(userActions.fetchUser());\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(UserList);\n"]}]}