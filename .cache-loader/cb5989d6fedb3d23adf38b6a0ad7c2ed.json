{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/activity/card-activity.tsx","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/activity/card-activity.tsx","mtime":1532681547499},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardMedia, Grid, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { padZero } from \"~/common/util\";\nimport DistanceTimeTracker from \"~/components/tracker/DistanceTimeTracker\";\nimport { ActivityType, getActivityTypeIcon, isActivityTypeHasDistance, isClimbingActivity, isGymActivity, } from \"./ActivityType\";\nconst moment = require(\"moment\");\nclass OptionMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClickDelete = () => {\n            this.handleClose();\n            this.props.delete();\n        };\n        this.handleClickRun = () => {\n            this.handleClose();\n            this.props.run();\n        };\n        this.handleClickEdit = () => {\n            this.handleClose();\n            this.props.edit();\n        };\n        this.handleClose = () => {\n            this.setState({\n                isOpen: false,\n            });\n        };\n        this.handleOpen = (event) => {\n            this.setState({\n                isOpen: true,\n                anchorEl: event.currentTarget,\n            });\n        };\n        this.state = {\n            isOpen: false,\n            anchorEl: undefined,\n        };\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(IconButton, { onClick: this.handleOpen },\n                React.createElement(MoreVertIcon, null)),\n            React.createElement(Menu, { open: this.state.isOpen, onClose: this.handleClose, anchorEl: this.state.anchorEl },\n                this.props.activityType === ActivityType.Running ? (React.createElement(MenuItem, { key: \"run\", onClick: this.handleClickRun }, \"Run\")) : null,\n                React.createElement(MenuItem, { key: \"edit\", onClick: this.handleClickEdit }, \"Edit\"),\n                React.createElement(MenuItem, { key: \"delete\", onClick: this.handleClickDelete }, \"Delete\"))));\n    }\n}\nconst styles = {\n    card: {\n        minWidth: 275,\n        margin: 18,\n        background: \"rgba(229, 225, 221, 0.7)\",\n        width: \"100%\",\n        borderRadius: 15,\n    },\n    content: {\n        flex: \"1 0 auto\",\n    },\n    title: {\n        marginBottom: 10,\n    },\n    numbers: {\n        textAlign: \"left\",\n    },\n};\nfunction SimpleCard(props) {\n    const classes = props.classes;\n    const { distance, duration, workoutType, activityType, imageLink } = props.data;\n    const durationHour = Math.floor(duration / 3600);\n    const durationMin = Math.floor((duration - durationHour * 3600) / 60);\n    const showDependentElement = () => {\n        let element = React.createElement(\"div\", null);\n        if (isActivityTypeHasDistance(activityType)) {\n            element = (React.createElement(Grid, { item: true, xs: 6 },\n                React.createElement(Typography, { component: \"p\", variant: \"title\" },\n                    distance.toFixed(2),\n                    \" \",\n                    isClimbingActivity(activityType) ? \"m\" : \"km\"),\n                React.createElement(Typography, { component: \"p\", variant: \"caption\" }, \"Distance\")));\n        }\n        else if (isGymActivity(activityType)) {\n            element = (React.createElement(Grid, { item: true, xs: 6 },\n                React.createElement(Typography, { component: \"p\", variant: \"title\" }, workoutType),\n                React.createElement(Typography, { component: \"p\", variant: \"caption\" }, \"Workout Type\")));\n        }\n        return element;\n    };\n    const ref = React.createRef();\n    return (React.createElement(Grid, { container: true, spacing: 16 },\n        React.createElement(DistanceTimeTracker, { activity: props.data, ref: ref }),\n        React.createElement(Card, { className: classes.card },\n            React.createElement(CardMedia, { style: { height: 200, overflow: \"hidden\" }, image: imageLink || require(\"../../theme/images/default_activity_image.jpg\") }),\n            React.createElement(CardContent, null,\n                React.createElement(\"div\", null,\n                    React.createElement(\"div\", { className: classes.title },\n                        props.edit.name === \"bound editData\" && (React.createElement(\"div\", { style: { float: \"right\" } },\n                            React.createElement(OptionMenu, { activityType: activityType, edit: () => props.edit(props.data), delete: () => props.delete(props.data.activityId), run: () => {\n                                    if (ref.current)\n                                        ref.current.handleOpenDialog();\n                                } }))),\n                        React.createElement(Typography, { variant: \"display1\", color: \"default\", style: { fontSize: \"1.8rem\" } }, props.data.title),\n                        React.createElement(Typography, { component: \"p\", variant: \"caption\" }, moment(props.data.activityDate.replace(\"T\", \" \")).format(\"MMMM Do YYYY hh:mm a\")))),\n                React.createElement(Grid, { container: true, wrap: \"nowrap\", spacing: 16 },\n                    React.createElement(Grid, { item: true, xs: true, sm: true, lg: true, md: true, zeroMinWidth: true },\n                        React.createElement(Typography, { noWrap: true }, props.data.location))),\n                React.createElement(Grid, { container: true, className: classes.numbers, spacing: 16 },\n                    React.createElement(Grid, { item: true, xs: 6 },\n                        React.createElement(Typography, { component: \"p\", variant: \"title\" },\n                            padZero(durationHour),\n                            \"h : \",\n                            padZero(durationMin),\n                            \"m\"),\n                        React.createElement(Typography, { component: \"p\", variant: \"caption\" }, \"Duration\")),\n                    showDependentElement()),\n                React.createElement(\"div\", null,\n                    React.createElement(\"img\", { src: getActivityTypeIcon(activityType), style: {\n                            float: \"right\",\n                            marginRight: -24,\n                            marginBottom: -2,\n                            width: \"20%\",\n                        } }))))));\n}\nexport default withStyles(styles)(SimpleCard);\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/activity/card-activity.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/activity/card-activity.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { StyleRules, WithStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardMedia, Grid, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport ActivityInterface from \"./ActivityInterface\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { padZero } from \"~/common/util\";\nimport DistanceTimeTracker from \"~/components/tracker/DistanceTimeTracker\";\nimport {\n    ActivityType,\n    getActivityTypeIcon,\n    isActivityTypeHasDistance,\n    isClimbingActivity,\n    isGymActivity,\n} from \"./ActivityType\";\nconst moment = require(\"moment\");\n\ninterface IOptionMenuProp {\n    delete: () => void;\n    edit: () => void;\n    run: () => void;\n    activityType: ActivityType;\n}\n\ninterface IOptionMenuState {\n    isOpen: boolean;\n    anchorEl: HTMLElement | undefined;\n}\n\nclass OptionMenu extends React.Component<IOptionMenuProp, IOptionMenuState> {\n    private handleClickDelete = (): void => {\n        this.handleClose();\n        this.props.delete();\n    };\n\n    private handleClickRun = (): void => {\n        this.handleClose();\n        this.props.run();\n    };\n\n    private handleClickEdit = (): void => {\n        this.handleClose();\n        this.props.edit();\n    };\n\n    private handleClose = (): void => {\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    private handleOpen = (event: React.MouseEvent<HTMLElement>): void => {\n        this.setState({\n            isOpen: true,\n            anchorEl: event.currentTarget,\n        });\n    };\n\n    constructor(props: IOptionMenuProp) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            anchorEl: undefined,\n        };\n    }\n\n    render(): React.ReactNode {\n        return (\n            <div>\n                <IconButton onClick={this.handleOpen}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    open={this.state.isOpen}\n                    onClose={this.handleClose}\n                    anchorEl={this.state.anchorEl}\n                >\n                    {this.props.activityType === ActivityType.Running ? (\n                        <MenuItem key=\"run\" onClick={this.handleClickRun}>\n                            Run\n                        </MenuItem>\n                    ) : null}\n                    <MenuItem key=\"edit\" onClick={this.handleClickEdit}>\n                        Edit\n                    </MenuItem>\n                    <MenuItem key=\"delete\" onClick={this.handleClickDelete}>\n                        Delete\n                    </MenuItem>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst styles: StyleRules = {\n    card: {\n        minWidth: 275,\n        margin: 18,\n        background: \"rgba(229, 225, 221, 0.7)\",\n        width: \"100%\",\n        borderRadius: 15,\n    },\n    content: {\n        flex: \"1 0 auto\",\n    },\n    title: {\n        marginBottom: 10,\n    },\n    numbers: {\n        textAlign: \"left\",\n    },\n};\n\ninterface ISimpleCardProp extends WithStyles<typeof styles> {\n    data: ActivityInterface;\n    delete: (id: string) => void;\n    edit: (activity: ActivityInterface) => void;\n}\n\nfunction SimpleCard(props: ISimpleCardProp): JSX.Element {\n    const classes = props.classes;\n    const { distance, duration, workoutType, activityType, imageLink } = props.data;\n\n    const durationHour = Math.floor(duration / 3600);\n    const durationMin = Math.floor((duration - durationHour * 3600) / 60);\n\n    const showDependentElement = (): JSX.Element => {\n        let element: JSX.Element = <div />;\n        if (isActivityTypeHasDistance(activityType)) {\n            element = (\n                <Grid item xs={6}>\n                    <Typography component=\"p\" variant=\"title\">\n                        {distance.toFixed(2)} {isClimbingActivity(activityType) ? \"m\" : \"km\"}\n                    </Typography>\n                    <Typography component=\"p\" variant=\"caption\">\n                        Distance\n                    </Typography>\n                </Grid>\n            );\n        } else if (isGymActivity(activityType)) {\n            element = (\n                <Grid item xs={6}>\n                    <Typography component=\"p\" variant=\"title\">\n                        {workoutType}\n                    </Typography>\n                    <Typography component=\"p\" variant=\"caption\">\n                        Workout Type\n                    </Typography>\n                </Grid>\n            );\n        }\n        return element;\n    };\n    const ref = React.createRef<DistanceTimeTracker>();\n    return (\n        <Grid container spacing={16}>\n            <DistanceTimeTracker activity={props.data} ref={ref} />\n            <Card className={classes.card}>\n                <CardMedia\n                    style={{ height: 200, overflow: \"hidden\" }}\n                    image={imageLink || require(\"../../theme/images/default_activity_image.jpg\")}\n                />\n\n                <CardContent>\n                    <div>\n                        <div className={classes.title}>\n                            {props.edit.name === \"bound editData\" && (\n                                <div style={{ float: \"right\" }}>\n                                    <OptionMenu\n                                        activityType={activityType as ActivityType}\n                                        edit={() => props.edit(props.data)}\n                                        delete={() => props.delete(props.data.activityId)}\n                                        run={() => {\n                                            if (ref.current) ref.current.handleOpenDialog();\n                                        }}\n                                    />\n                                </div>\n                            )}\n                            <Typography\n                                variant=\"display1\"\n                                color=\"default\"\n                                style={{ fontSize: \"1.8rem\" }}\n                            >\n                                {props.data.title}\n                            </Typography>\n                            <Typography component=\"p\" variant=\"caption\">\n                                {moment(props.data.activityDate.replace(\"T\", \" \")).format(\n                                    \"MMMM Do YYYY hh:mm a\",\n                                )}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Grid container wrap=\"nowrap\" spacing={16}>\n                        <Grid item xs sm lg md zeroMinWidth>\n                            <Typography noWrap>{props.data.location}</Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid container className={classes.numbers} spacing={16}>\n                        <Grid item xs={6}>\n                            <Typography component=\"p\" variant=\"title\">\n                                {padZero(durationHour)}h : {padZero(durationMin)}m\n                            </Typography>\n                            <Typography component=\"p\" variant=\"caption\">\n                                Duration\n                            </Typography>\n                        </Grid>\n                        {showDependentElement()}\n                    </Grid>\n                    <div>\n                        <img\n                            src={getActivityTypeIcon(activityType)}\n                            style={{\n                                float: \"right\",\n                                marginRight: -24,\n                                marginBottom: -2,\n                                width: \"20%\",\n                            }}\n                        />\n                    </div>\n                </CardContent>\n            </Card>\n        </Grid>\n    );\n}\n\nexport default withStyles(styles)(SimpleCard);\n"]}]}