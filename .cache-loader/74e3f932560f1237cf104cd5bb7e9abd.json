{"remainingRequest":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/Chat/Message.tsx","dependencies":[{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/Chat/Message.tsx","mtime":1532682537040},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/cache-loader/dist/cjs.js","mtime":1532011585508},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/thread-loader/dist/cjs.js","mtime":1532011585543},{"path":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nclass Message extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isClick: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        if (this.state.isClick) {\n            this.setState({\n                isClick: false,\n            });\n        }\n        else {\n            this.setState({\n                isClick: true,\n            });\n        }\n    }\n    render() {\n        if (this.props.message.imageLink !== \"\" || this.props.message.fullName !== \"\") {\n            const nameSplit = this.props.message.fullName.split(\" \");\n            const firstName = nameSplit[0];\n            const moment = require(\"moment\");\n            const dateFormated = moment(this.props.message.createdDate).format(\"LLL\");\n            return (React.createElement(Grid, { container: true, className: \"message-container\", style: {\n                    alignSelf: this.props.message.senderId === this.props.currentUserId.accountId\n                        ? \"flex-end\"\n                        : \"flex-start\",\n                    flexDirection: this.props.message.senderId === this.props.currentUserId.accountId\n                        ? \"row-reverse\"\n                        : \"row\",\n                } },\n                React.createElement(Grid, { item: true, xs: 2 },\n                    React.createElement(\"img\", { src: this.props.message.imageLink, alt: \"Avatar\" })),\n                React.createElement(Grid, { item: true, xs: 10, style: {\n                        paddingRight: this.props.message.senderId === this.props.currentUserId.accountId\n                            ? \"8px\"\n                            : \"0px\",\n                        flexBasis: \"100%\",\n                    } },\n                    React.createElement(\"div\", { className: \"user-name\", style: {\n                            float: this.props.message.senderId ===\n                                this.props.currentUserId.accountId\n                                ? \"right\"\n                                : \"left\",\n                            marginLeft: this.props.message.senderId ===\n                                this.props.currentUserId.accountId\n                                ? \"10px\"\n                                : \"0px\",\n                        } }, firstName),\n                    React.createElement(\"br\", null),\n                    this.state.isClick && (React.createElement(\"div\", { style: {\n                            textAlign: this.props.message.senderId ===\n                                this.props.currentUserId.accountId\n                                ? \"right\"\n                                : \"left\",\n                            marginLeft: this.props.message.senderId ===\n                                this.props.currentUserId.accountId\n                                ? \"10px\"\n                                : \"0px\",\n                            color: \"#015c7f\",\n                        } },\n                        React.createElement(\"small\", null,\n                            React.createElement(\"i\", null, dateFormated)))),\n                    React.createElement(\"div\", { className: \"talk-bubble tri-right border round btm-left-in\", style: {\n                            float: this.props.message.senderId ===\n                                this.props.currentUserId.accountId\n                                ? \"right\"\n                                : \"left\",\n                        }, onClick: this.handleClick },\n                        React.createElement(\"div\", { className: \"talktext\" },\n                            React.createElement(\"p\", { style: { maxWidth: \"12em\", wordWrap: \"break-word\" } }, this.props.message.content))))));\n        }\n        return React.createElement(\"div\", null);\n    }\n}\nexport default Message;\n",{"version":3,"file":"/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/Chat/Message.tsx","sourceRoot":"","sources":["/Users/spectre/Desktop/MGM-INTERSHIP/mgmsports-fe/src/containers/Chat/Message.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ChatMessage } from \"~/containers/Chat/Forum\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport { CurrentUser } from \"~/data/auth/actions\";\n\ninterface MessageProps {\n    message: ChatMessage;\n    currentUserId: CurrentUser;\n}\n\ninterface MessageState {\n    isClick: boolean;\n}\nclass Message extends React.Component<MessageProps, MessageState> {\n    constructor(props: MessageProps) {\n        super(props);\n        this.state = {\n            isClick: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n    private handleClick(): void {\n        if (this.state.isClick) {\n            this.setState({\n                isClick: false,\n            });\n        } else {\n            this.setState({\n                isClick: true,\n            });\n        }\n    }\n    render() {\n        if (this.props.message.imageLink !== \"\" || this.props.message.fullName !== \"\") {\n            const nameSplit = this.props.message.fullName.split(\" \");\n            const firstName = nameSplit[0];\n            const moment = require(\"moment\");\n            const dateFormated = moment(this.props.message.createdDate).format(\"LLL\");\n            return (\n                <Grid\n                    container\n                    className=\"message-container\"\n                    style={{\n                        alignSelf:\n                            this.props.message.senderId === this.props.currentUserId.accountId\n                                ? \"flex-end\"\n                                : \"flex-start\",\n                        flexDirection:\n                            this.props.message.senderId === this.props.currentUserId.accountId\n                                ? \"row-reverse\"\n                                : \"row\",\n                    }}\n                >\n                    <Grid item xs={2}>\n                        <img src={this.props.message.imageLink} alt=\"Avatar\" />\n                    </Grid>\n                    <Grid\n                        item\n                        xs={10}\n                        style={{\n                            paddingRight:\n                                this.props.message.senderId === this.props.currentUserId.accountId\n                                    ? \"8px\"\n                                    : \"0px\",\n                            flexBasis: \"100%\",\n                        }}\n                    >\n                        <div\n                            className=\"user-name\"\n                            style={{\n                                float:\n                                    this.props.message.senderId ===\n                                    this.props.currentUserId.accountId\n                                        ? \"right\"\n                                        : \"left\",\n                                marginLeft:\n                                    this.props.message.senderId ===\n                                    this.props.currentUserId.accountId\n                                        ? \"10px\"\n                                        : \"0px\",\n                            }}\n                        >\n                            {firstName}\n                        </div>\n                        <br />\n                        {this.state.isClick && (\n                            <div\n                                style={{\n                                    textAlign:\n                                        this.props.message.senderId ===\n                                        this.props.currentUserId.accountId\n                                            ? \"right\"\n                                            : \"left\",\n                                    marginLeft:\n                                        this.props.message.senderId ===\n                                        this.props.currentUserId.accountId\n                                            ? \"10px\"\n                                            : \"0px\",\n                                    color: \"#015c7f\",\n                                }}\n                            >\n                                <small>\n                                    <i>{dateFormated}</i>\n                                </small>\n                            </div>\n                        )}\n                        <div\n                            className=\"talk-bubble tri-right border round btm-left-in\"\n                            style={{\n                                float:\n                                    this.props.message.senderId ===\n                                    this.props.currentUserId.accountId\n                                        ? \"right\"\n                                        : \"left\",\n                            }}\n                            onClick={this.handleClick}\n                        >\n                            <div className=\"talktext\">\n                                <p style={{ maxWidth: \"12em\", wordWrap: \"break-word\" }}>\n                                    {this.props.message.content}\n                                </p>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            );\n        }\n        return <div />;\n    }\n}\nexport default Message;\n"]}]}