{"remainingRequest":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js??ref--4-oneOf-1-1!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js??ref--4-oneOf-1-2!/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/team/ListActivities/reducer.ts","dependencies":[{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/team/ListActivities/reducer.ts","mtime":1531995134000},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/cache-loader/dist/cjs.js","mtime":1539584369385},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/thread-loader/dist/cjs.js","mtime":1539584369506},{"path":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import actionTypes from \"./actionTypes\";\nexport const INITIAL_STATE = {\n    list: [],\n    fecthStatus: \"\",\n};\n// reducer will decide which action will be called\nexport const reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case actionTypes.ACTIVITIES_FETCH_REQUESTED:\n            return Object.assign({}, state, { fecthStatus: \"fetching ...\" });\n        case actionTypes.ACTIVITIES_FETCH_FULFILLED:\n            return Object.assign({}, state, { fecthStatus: `fetched`, list: action.payload });\n        case actionTypes.ACTIVITIES_FETCH_REJECTED:\n            return Object.assign({}, state, { fecthStatus: `error: ${action.payload}` });\n        default:\n            return state;\n    }\n};\nexport default reducer;\n",{"version":3,"file":"/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/team/ListActivities/reducer.ts","sourceRoot":"","sources":["/Users/hthnguyen/Documents/BKFinalProject/sportstracker-fe/src/data/team/ListActivities/reducer.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,MAAM,CAAC,MAAM,aAAa,GAAG;IACzB,IAAI,EAAE,EAAE;IACR,WAAW,EAAE,EAAE;CAClB,CAAC;AAEF,kDAAkD;AAClD,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,aAAa,EAAE,MAAuB,EAAE,EAAE;IACtE,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,WAAW,CAAC,0BAA0B;YACvC,yBACO,KAAK,IACR,WAAW,EAAE,cAAc,IAC7B;QACN,KAAK,WAAW,CAAC,0BAA0B;YACvC,yBACO,KAAK,IACR,WAAW,EAAE,SAAS,EACtB,IAAI,EAAE,MAAM,CAAC,OAAO,IACtB;QACN,KAAK,WAAW,CAAC,yBAAyB;YACtC,yBACO,KAAK,IACR,WAAW,EAAE,UAAU,MAAM,CAAC,OAAO,EAAE,IACzC;QACN;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import actionTypes from \"./actionTypes\";\nimport * as Redux from \"redux\";\nexport const INITIAL_STATE = {\n    list: [],\n    fecthStatus: \"\",\n};\n\n// reducer will decide which action will be called\nexport const reducer = (state = INITIAL_STATE, action: Redux.AnyAction) => {\n    switch (action.type) {\n        case actionTypes.ACTIVITIES_FETCH_REQUESTED:\n            return {\n                ...state,\n                fecthStatus: \"fetching ...\",\n            };\n        case actionTypes.ACTIVITIES_FETCH_FULFILLED:\n            return {\n                ...state,\n                fecthStatus: `fetched`,\n                list: action.payload,\n            };\n        case actionTypes.ACTIVITIES_FETCH_REJECTED:\n            return {\n                ...state,\n                fecthStatus: `error: ${action.payload}`,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]}]}